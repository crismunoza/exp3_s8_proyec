var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.053,1,0.683]],["body/components/AdminComponent.html",[0,0.064,1,0.92,2,0.741,3,0.221,4,0.191,5,0.53,6,0.636,7,0.53,8,0.53,9,0.191,10,1.649,11,0.993,12,1.07,13,1.093,14,1.451,15,2.533,16,1.108,17,3.136,18,0.892,19,1.19,20,0.53,21,1.522,22,1.258,23,1.729,24,0.814,25,0.991,26,0.892,27,1.303,28,2.355,29,2.106,30,0.977,31,3.719,32,0.814,33,3.054,34,0.529,35,0.609,36,2.084,37,1.899,38,3.719,39,3.719,40,2.364,41,0.609,42,3.054,43,3.054,44,4.174,45,3.054,46,1.336,47,2.131,48,4.174,49,1.413,50,1.729,51,2.106,52,0.814,53,1.125,54,2.364,55,1.721,56,2.106,57,2.147,58,1.735,59,1.139,60,3.054,61,0.993,62,0.037,63,0.712,64,0.821,65,0.81,66,1.729,67,3.054,68,2.894,69,1.987,70,2.533,71,2.21,72,1.589,73,4.174,74,1.154,75,1.336,76,3.41,77,0.943,78,1.202,79,3.054,80,1.987,81,3.054,82,4.755,83,1.987,84,1.934,85,1.729,86,3.054,87,1.987,88,3.054,89,4.174,90,2.993,91,1.233,92,2.355,93,1.987,94,1.987,95,1.413,96,1.341,97,1.559,98,1.559,99,3.054,100,1.987,101,1.413,102,1.564,103,1.987,104,1.286,105,1.931,106,2.2,107,1.721,108,1.413,109,1.899,110,2.084,111,1.559,112,1.113,113,1.201,114,1.987,115,2.106,116,1.987,117,1.463,118,1.987,119,1.987,120,1.125,121,1.987,122,0.799,123,0.92,124,0.92,125,0.358,126,0.92,127,0.581,128,1.125,129,0.92,130,0.696,131,1.259,132,1.649,133,1.649,134,1.425,135,1.259,136,0.92,137,1.649,138,1.425,139,0.221,140,0.162,141,1.22,142,0.92,143,1.987,144,1.125,145,1.721,146,2.364,147,1.428,148,1.566,149,1.987,150,1.125,151,1.721,152,1.721,153,0.92,154,1.987,155,1.649,156,1.649,157,1.267,158,1.987,159,1.649,160,1.987,161,1.649,162,1.172,163,1.987,164,1.987,165,1.987,166,1.987,167,1.987,168,1.987,169,1.425,170,3.719,171,1.316,172,1.19,173,1.987,174,1.987,175,1.987,176,1.987,177,0.92,178,1.987,179,1.015,180,1.987,181,1.987,182,1.987,183,1.015,184,1.987,185,0.92,186,1.987,187,0.837,188,1.987,189,1.987,190,1.987,191,1.987,192,1.987,193,0.92,194,1.125,195,1.425,196,1.987,197,3.054,198,1.987,199,3.719,200,3.719,201,2.106,202,3.719,203,1.987,204,2.19,205,2.19,206,1.649,207,1.987,208,1.987,209,0.92,210,3.054,211,1.649,212,2.533,213,1.934,214,1.559,215,3.054,216,1.559,217,1.729,218,1.987,219,1.987,220,3.085,221,3.054,222,1.987,223,1.987,224,1.425,225,1.425,226,1.987,227,1.259,228,1.987,229,2.19,230,1.413,231,1.015,232,0.92,233,0.92,234,1.987,235,1.934,236,3.498,237,3.41,238,2.428,239,2.428,240,2.693,241,3.41,242,3.054,243,2.19,244,2.609,245,2.152,246,2.894,247,2.131,248,1.559,249,2.19,250,1.934,251,3.054,252,3.054,253,0.53,254,0.814,255,0.814,256,0.53,257,1.113,258,0.53,259,0.53,260,0.438,261,0.53,262,0.438,263,0.53,264,0.438,265,0.53,266,0.438,267,0.53,268,0.438,269,0.53,270,0.438,271,0.53,272,0.438,273,0.53,274,0.438,275,0.53,276,0.438,277,0.53,278,0.438,279,0.53,280,0.438,281,0.53,282,0.438,283,0.53,284,0.53,285,0.53,286,0.017,287,0.017]],["title/components/AppComponent.html",[0,0.053,260,0.683]],["body/components/AppComponent.html",[0,0.083,1,0.702,2,1.043,3,0.354,4,0.306,5,0.849,6,1.02,7,0.849,8,0.849,9,0.306,11,0.947,12,1.961,13,1.043,14,1.55,16,1.007,18,1.255,19,1.556,20,0.849,21,1.64,22,1.356,23,1.804,24,1.145,25,1.386,26,1.255,27,1.703,30,1.375,32,1.145,34,0.354,35,0.857,41,0.857,46,1.665,52,1.295,59,1.038,61,0.702,62,0.036,63,0.699,64,0.699,65,0.573,74,1.262,75,1.375,77,0.573,78,0.773,96,1.262,102,0.931,104,1.808,112,1.145,113,1.145,122,0.923,125,0.573,127,0.931,138,2.285,139,0.354,140,0.26,171,0.931,193,1.988,253,0.849,254,1.145,255,1.145,256,0.849,257,1.386,258,0.849,259,0.849,260,1.147,261,0.849,262,0.702,263,0.849,264,0.702,265,0.849,266,1.147,267,0.849,268,0.702,269,0.849,270,0.702,271,0.849,272,1.147,273,0.849,274,0.702,275,0.849,276,0.702,277,0.849,278,0.702,279,0.849,280,0.702,281,0.849,282,0.702,283,1.145,284,0.849,285,0.849,286,0.024,287,0.024,288,2.643,289,4.296,290,4.314,291,2.72,292,4.86,293,4.86,294,4.296,295,4.86,296,4.86,297,2.018,298,2.261,299,4.296,300,2.433,301,3.186,302,2.433,303,2.433,304,3.563,305,3.563,306,3.73,307,4.296,308,4.296,309,3.563,310,2.72,311,3.563,312,2.72,313,4.296,314,4.296,315,3.186,316,4.296,317,5.201,318,3.73,319,1.375,320,3.186,321,3.186,322,3.186,323,1.475,324,3.186,325,3.186,326,3.186,327,3.186,328,3.186,329,5.814,330,2.018,331,2.018,332,2.643,333,2.285,334,2.643,335,2.643]],["title/components/ArticleComponent.html",[0,0.053,262,0.683]],["body/components/ArticleComponent.html",[0,0.056,1,0.36,2,0.636,3,0.182,4,0.157,5,0.436,6,0.523,7,0.436,8,0.436,9,0.157,11,0.965,12,0.918,13,1.116,14,1.377,16,1.053,18,0.765,19,1.049,20,0.436,21,1.461,22,1.208,24,0.698,25,0.698,26,0.765,27,1.148,30,0.838,32,0.698,34,0.364,35,0.523,36,1.898,40,1.483,41,0.523,46,1.2,49,1.212,52,0.436,56,1.856,59,1.066,61,0.965,62,0.037,63,0.687,64,0.779,65,0.788,68,1.856,71,1.941,72,0.698,74,1.196,75,1.049,77,0.887,78,1.116,91,0.965,96,1.42,101,1.212,102,1.602,104,1.578,105,1.735,106,1.735,107,1.516,108,2.026,112,1.093,113,1.274,117,1.438,122,0.742,125,0.294,127,0.478,130,0.573,139,0.182,140,0.133,141,0.765,147,0.627,157,1.226,171,1.397,172,0.838,193,1.735,201,0.925,209,1.735,227,1.658,230,1.212,232,0.756,233,0.756,235,1.658,245,0.688,253,0.436,254,0.874,255,0.698,256,0.436,257,0.999,258,0.436,259,0.436,260,0.36,261,0.436,262,0.826,263,0.436,264,0.36,265,0.436,266,0.36,267,0.436,268,0.36,269,0.436,270,0.36,271,0.436,272,0.36,273,0.436,274,0.36,275,0.436,276,0.36,277,0.436,278,0.36,279,0.436,280,0.36,281,0.436,282,0.36,283,0.436,284,0.436,285,0.436,286,0.015,287,0.015,297,1.035,298,1.68,310,1.658,318,3.298,319,0.523,323,0.756,336,1.355,337,2.619,338,1.735,339,2.172,340,3.122,341,2.172,342,3.277,343,2.619,344,3.277,345,3.748,346,3.277,347,2.619,348,2.619,349,3.748,350,3.748,351,2.619,352,2.619,353,2.912,354,1.765,355,2.619,356,2.619,357,2.05,358,1.634,359,2.619,360,4.493,361,1.834,362,3.026,363,1.878,364,3.814,365,2.619,366,3.748,367,1.634,368,2.172,369,5.057,370,3.109,371,3.403,372,4.378,373,2.619,374,3.427,375,2.619,376,2.619,377,2.619,378,2.619,379,2.172,380,1.634,381,2.172,382,2.172,383,2.772,384,3.631,385,4.378,386,1.634,387,2.619,388,1.401,389,2.688,390,3.748,391,3.748,392,1.634,393,1.634,394,2.619,395,1.634,396,2.619,397,2.619,398,1.634,399,1.658,400,3.748,401,3.748,402,2.619,403,2.619,404,1.856,405,1.634,406,1.634,407,1.634,408,1.035,409,1.634,410,1.634,411,0.925,412,1.634,413,1.634,414,1.634,415,2.619,416,2.619,417,2.619,418,1.856,419,2.688,420,1.634,421,1.355,422,1.634,423,1.634,424,1.634,425,1.634,426,1.634,427,1.634,428,2.619,429,1.634,430,3.297,431,1.634,432,1.634,433,1.634,434,2.619,435,1.634,436,1.634,437,2.619,438,1.634,439,1.634,440,1.634,441,1.634,442,1.634,443,3.277,444,1.634,445,1.634,446,1.634,447,1.035,448,1.337,449,0.834,450,1.337,451,0.834,452,2.172,453,1.634,454,0.925,455,1.355,456,1.035,457,1.355,458,1.355,459,1.035,460,1.035,461,1.634,462,1.634,463,1.634,464,1.355,465,0.925,466,0.627,467,0.834,468,2.619,469,2.619,470,2.619,471,2.619,472,2.619,473,2.619,474,3.109,475,2.619,476,2.619,477,2.619,478,2.619,479,2.172,480,2.619,481,2.172,482,3.748,483,2.619,484,2.619,485,2.619,486,2.619,487,2.619,488,2.619,489,2.619,490,2.619,491,2.619,492,2.619,493,3.705,494,2.864,495,2.688,496,2.942,497,3.272,498,2.35,499,2.35,500,1.172,501,1.172,502,3.298,503,2.374,504,3.298,505,2.942,506,1.172,507,1.878,508,2.688,509,3.705,510,2.35,511,1.172,512,1.878,513,1.172,514,1.172,515,1.172,516,1.172,517,1.878,518,1.172,519,2.075,520,3.403,521,1.355,522,2.172,523,2.172,524,2.172,525,2.172,526,2.172,527,1.355,528,1.355,529,1.355,530,1.355,531,1.355,532,1.355,533,1.172,534,1.355,535,2.35,536,1.878,537,2.123,538,1.172,539,2.35,540,1.878,541,1.172,542,1.172,543,1.878,544,1.172,545,1.172,546,1.172,547,1.634,548,1.634,549,2.942,550,2.688,551,1.634,552,1.355,553,1.172,554,0.688,555,1.355,556,1.172,557,2.35,558,3.139,559,1.634,560,3.277,561,3.277,562,3.277,563,3.109,564,1.634,565,1.634,566,2.688,567,2.619,568,1.172,569,1.172,570,2.619,571,1.878,572,1.634,573,1.634,574,2.172,575,2.619,576,1.878,577,1.878,578,2.619,579,2.619,580,1.035,581,1.355,582,1.355,583,1.634,584,2.619]],["title/injectables/ArticleService.html",[353,1.961,585,1.433]],["body/injectables/ArticleService.html",[3,0.462,4,0.399,9,0.399,11,0.916,13,1.237,16,1.034,34,0.462,41,1.017,52,1.107,57,2.357,59,1.017,61,0.916,62,0.036,63,0.597,64,0.597,65,0.747,71,1.956,76,4.122,77,0.917,84,3.227,85,2.885,122,0.927,125,0.747,131,2.63,132,3.445,135,2.63,139,0.462,140,0.339,157,1.107,159,3.445,161,3.445,172,1.329,286,0.029,287,0.029,291,2.63,323,1.922,339,4.227,340,3.802,341,3.445,353,3.227,357,1.455,388,1.631,408,2.63,554,2.145,585,2.358,586,2.63,587,4.572,588,3.445,589,2.885,590,2.885,591,5.747,592,4.153,593,4.153,594,4.153,595,3.255,596,4.98,597,4.227,598,2.352,599,2.979,600,4.153,601,4.153,602,3.445]],["title/injectables/AuthService.html",[58,1.085,585,1.433]],["body/injectables/AuthService.html",[3,0.198,4,0.171,9,0.171,11,1.186,14,1.528,16,1.082,17,1.777,34,0.198,41,0.56,52,0.748,57,2.144,58,0.983,59,1.089,61,1.186,62,0.036,63,0.774,64,0.774,65,0.968,70,2.328,71,2.254,72,1.663,74,1.449,75,1.578,77,1.061,78,0.433,84,1.777,85,1.589,90,3.535,91,1.346,92,1.129,95,1.299,96,1.514,102,1.751,117,1.667,122,0.768,125,0.321,130,0.625,133,1.479,134,1.278,135,1.129,137,1.479,138,1.278,139,0.198,140,0.145,141,1.014,145,0.825,147,0.684,148,2.003,151,0.825,152,0.825,157,1.434,162,1.643,169,2.012,171,1.595,172,1.821,177,2.557,179,0.91,183,0.91,185,0.825,187,0.75,193,1.299,194,1.589,201,1.009,204,2.823,205,3.07,206,2.879,211,2.328,224,1.278,235,1.777,238,2.926,239,2.747,243,2.012,250,1.777,286,0.016,287,0.016,291,1.129,330,1.777,331,1.777,338,2.104,354,1.946,361,1.511,399,3.408,465,1.589,466,1.745,554,2.494,585,1.299,586,1.129,589,1.589,595,2.575,596,5.054,597,4.678,598,1.009,599,1.278,602,3.265,603,1.479,604,2.012,605,3.265,606,2.493,607,2.012,608,2.806,609,2.328,610,2.806,611,2.328,612,4.281,613,2.328,614,3.47,615,3.47,616,2.328,617,2.806,618,1.783,619,2.575,620,1.783,621,2.806,622,1.783,623,3.771,624,4.547,625,4.21,626,4.547,627,5.64,628,2.328,629,1.783,630,3.408,631,1.822,632,2.806,633,2.328,634,1.783,635,3.265,636,3.194,637,3.936,638,2.806,639,1.783,640,2.806,641,2.806,642,3.771,643,2.328,644,1.783,645,2.806,646,4.088,647,2.328,648,1.783,649,3.265,650,1.783,651,3.265,652,2.328,653,2.328,654,1.783,655,2.328,656,1.589,657,2.806,658,1.783,659,2.328,660,2.806,661,1.783,662,2.328,663,2.328,664,2.806,665,1.783,666,2.493,667,3.265,668,2.806,669,1.783,670,1.783,671,1.783,672,1.783,673,1.783,674,1.783,675,1.479,676,1.783,677,1.783,678,2.806,679,1.783,680,1.783,681,1.783,682,2.328,683,1.783,684,1.783,685,1.783,686,1.783,687,1.783,688,1.783,689,1.783,690,1.783,691,1.129,692,1.783,693,1.783,694,1.783,695,1.783,696,1.783,697,1.783,698,1.783,699,1.783,700,1.783,701,1.783,702,1.783,703,1.783,704,1.783,705,1.783,706,3.936,707,1.783,708,1.783,709,3.936,710,1.783,711,1.783,712,1.783,713,1.783,714,1.783,715,1.783,716,1.783,717,1.783]],["title/components/CarComponent.html",[0,0.053,264,0.683]],["body/components/CarComponent.html",[0,0.07,1,0.514,2,0.836,3,0.259,4,0.224,5,0.622,6,0.747,7,1.092,8,0.622,9,0.224,11,0.76,12,1.771,13,1.269,14,1.525,16,1.064,18,1.007,19,1.312,20,0.622,21,1.566,22,1.295,24,0.919,25,1.287,30,1.103,32,0.919,34,0.537,35,0.688,40,1.952,41,0.688,46,1.449,52,1.092,55,2.095,59,1.112,61,0.514,62,0.037,63,0.589,64,0.651,65,0.42,68,2.563,72,0.919,74,1.353,75,1.618,76,2.472,77,0.909,78,1.227,85,2.563,91,1.114,96,1.452,110,1.08,112,1.092,113,1.092,117,0.818,122,0.779,123,1.08,124,1.08,125,0.42,126,1.08,127,0.682,130,0.818,139,0.259,140,0.19,141,1.007,142,1.08,153,1.595,157,1.525,171,1.198,187,1.725,194,1.952,201,1.321,209,1.08,243,1.673,245,0.982,253,0.622,254,0.919,255,0.919,256,0.622,257,1.206,258,0.622,259,0.622,260,0.514,261,0.622,262,0.514,263,0.622,264,1.114,265,0.622,266,0.514,267,0.622,268,0.514,269,0.622,270,0.514,271,0.622,272,0.514,273,0.622,274,0.514,275,0.622,276,0.514,277,0.622,278,0.514,279,0.622,280,0.514,281,0.622,282,0.514,283,0.622,284,0.622,285,0.622,286,0.019,287,0.019,298,2.139,300,1.952,302,1.952,303,1.952,318,2.472,319,0.747,323,1.08,332,2.859,338,2.095,340,2.866,357,1.436,361,1.323,362,3.808,363,2.472,364,2.859,382,3.754,388,1.103,399,2.866,408,1.478,421,1.936,430,2.961,448,2.311,449,1.76,450,2.092,451,1.76,452,2.859,454,1.321,455,1.936,456,1.478,457,1.936,458,1.936,459,1.478,460,1.478,464,1.936,465,1.321,466,0.896,467,1.191,497,1.478,503,1.478,519,1.478,533,1.673,535,1.673,574,1.936,576,1.673,577,2.472,590,1.952,631,1.595,649,2.859,718,1.936,719,3.447,720,2.472,721,3.447,722,4.098,723,3.447,724,3.754,725,4.526,726,4.526,727,4.526,728,4.526,729,4.526,730,4.526,731,2.333,732,5.054,733,3.447,734,4.098,735,3.447,736,2.472,737,2.472,738,2.183,739,1.952,740,2.333,741,3.447,742,3.447,743,2.472,744,4.192,745,2.333,746,2.859,747,2.333,748,3.754,749,3.246,750,4.005,751,2.333,752,4.005,753,2.333,754,2.333,755,2.333,756,3.447,757,2.333,758,4.829,759,2.333,760,3.447,761,3.447,762,1.936,763,1.478,764,2.333,765,4.098,766,2.333,767,2.333,768,3.447,769,3.447,770,2.333,771,3.447,772,2.333,773,4.526,774,2.333,775,2.333,776,1.673,777,3.447,778,2.333,779,3.447,780,2.333,781,2.333,782,2.333,783,3.447,784,2.333,785,2.333,786,2.333,787,2.333,788,2.333,789,4.098,790,2.333,791,2.333,792,2.333,793,2.333,794,2.333,795,2.333,796,2.333,797,2.333,798,2.859,799,2.859,800,3.447,801,3.447,802,1.936,803,3.447,804,3.447,805,2.859]],["title/classes/FirestoreMock.html",[140,0.252,806,2.221]],["body/classes/FirestoreMock.html",[3,0.504,4,0.435,9,0.435,34,0.504,41,1.072,59,1.072,62,0.036,77,0.967,92,3.749,131,3.749,139,0.504,140,0.37,172,1.719,286,0.03,287,0.03,806,3.853,807,2.871,808,4.749,809,3.761,810,4.534,811,5.372,812,4.534,813,5.372,814,5.372,815,4.456]],["title/components/FooterComponent.html",[0,0.053,266,0.683]],["body/components/FooterComponent.html",[0,0.095,1,0.924,2,1.244,3,0.466,4,0.402,5,1.117,7,1.117,8,1.117,9,0.402,20,1.117,21,1.692,22,1.399,24,1.366,25,1.366,26,1.225,32,1.366,62,0.036,63,0.737,122,0.676,125,0.754,139,0.466,140,0.342,253,1.117,254,1.366,255,1.366,256,1.117,257,1.537,258,1.117,259,1.117,260,0.924,261,1.117,262,0.924,263,1.117,264,0.924,265,1.117,266,1.271,267,1.117,268,0.924,269,1.117,270,0.924,271,1.117,272,0.924,273,1.117,274,0.924,275,1.117,276,0.924,277,1.117,278,0.924,279,1.117,280,0.924,281,1.117,282,0.924,283,1.117,284,1.117,285,1.117,286,0.029,287,0.029,306,3.675,479,4.25,816,3.476,817,5.124,818,4.25,819,5.124,820,5.124,821,5.124]],["title/components/HomeComponent.html",[0,0.053,268,0.683]],["body/components/HomeComponent.html",[0,0.08,1,0.65,2,0.989,3,0.328,4,0.283,5,0.786,7,0.786,8,0.786,9,0.283,16,1.146,20,0.786,21,1.623,22,1.342,24,1.086,25,1.086,26,1.191,32,1.086,62,0.034,63,0.586,122,0.658,125,0.531,131,2.581,139,0.328,140,0.24,253,0.786,254,1.086,255,1.086,256,0.786,257,1.342,258,0.786,259,0.786,260,0.65,261,0.786,262,0.65,263,0.786,264,0.65,265,0.786,266,0.65,267,0.786,268,1.11,269,0.786,270,0.65,271,0.786,272,0.65,273,0.786,274,0.65,275,0.786,276,0.65,277,0.786,278,0.65,279,0.786,280,0.65,281,0.786,282,0.65,283,0.786,284,0.786,285,0.786,286,0.023,287,0.023,319,0.944,340,2.581,474,4.178,481,4.534,762,4.178,818,3.38,822,2.447,823,4.075,824,2.957,825,4.075,826,4.075,827,4.075,828,4.075,829,4.075,830,4.075,831,4.075,832,4.075,833,4.075,834,4.075,835,4.075,836,4.075,837,6.119,838,4.075,839,4.075,840,4.075,841,4.075,842,4.075,843,4.075,844,4.075,845,4.075,846,5.036,847,4.075,848,4.075,849,4.075,850,5.036,851,5.036,852,5.036,853,5.036,854,5.466,855,5.036,856,4.075,857,4.075,858,4.075,859,4.075,860,4.075,861,2.923,862,4.075,863,4.075,864,5.71,865,5.036,866,4.075,867,5.036,868,5.466,869,4.075,870,4.075,871,5.466,872,5.466,873,4.075,874,5.036,875,5.036,876,5.71,877,5.466,878,5.466,879,5.036,880,5.036,881,5.036,882,4.075,883,2.923,884,4.075,885,4.075,886,4.075,887,5.976,888,4.075,889,4.075,890,4.075,891,4.075,892,4.075,893,4.075,894,5.466,895,4.075,896,4.075,897,4.075,898,4.075,899,4.075,900,4.075,901,4.075,902,4.075,903,4.075,904,4.075,905,4.075,906,4.075,907,4.075,908,4.075,909,2.308,910,4.075,911,4.075,912,4.075,913,4.075,914,4.075,915,4.075,916,3.38]],["title/components/LoginComponent.html",[0,0.053,270,0.683]],["body/components/LoginComponent.html",[0,0.063,1,0.433,2,0.734,3,0.218,4,0.189,5,0.523,6,0.968,7,0.523,8,0.523,9,0.189,11,0.667,12,1.06,13,1.337,14,1.447,16,1.041,17,2.337,18,0.884,19,1.181,20,0.523,21,1.518,22,1.255,23,2.09,24,0.806,25,0.806,26,0.884,27,1.293,29,2.09,30,0.968,32,0.806,34,0.218,35,0.604,36,2.073,37,1.884,41,0.604,46,1.327,47,2.117,49,1.4,50,1.713,51,2.09,52,0.523,53,1.112,54,2.348,56,1.713,58,1.728,59,1.016,61,0.667,62,0.037,63,0.596,64,0.767,65,0.544,66,1.713,71,1.592,72,1.105,74,1.337,75,0.628,77,0.664,78,0.896,91,0.667,95,1.4,96,1.394,97,1.544,98,1.544,101,1.4,102,1.559,104,1.274,105,1.919,106,2.19,107,1.708,108,1.4,109,2.117,110,2.19,111,1.544,112,0.806,113,0.806,115,2.09,120,1.112,122,0.843,125,0.353,127,0.574,128,1.112,129,1.4,130,0.688,136,0.908,139,0.218,140,0.16,141,1.079,144,1.112,145,0.908,146,1.713,147,0.754,148,1.746,150,1.112,151,0.908,152,0.908,157,1.105,162,0.754,171,0.884,172,1.181,177,1.919,179,1.002,183,1.002,185,0.908,187,0.826,195,2.647,209,0.908,216,2.416,217,1.112,230,1.4,231,1.002,232,1.919,233,0.908,238,2.416,239,2.599,244,2.117,245,1.746,246,2.348,247,1.544,248,1.544,253,0.523,254,0.984,255,0.806,256,0.523,257,1.105,258,0.523,259,0.523,260,0.433,261,0.523,262,0.433,263,0.523,264,0.433,265,0.523,266,0.433,267,0.523,268,0.433,269,0.523,270,0.914,271,0.523,272,0.433,273,0.523,274,0.433,275,0.523,276,0.433,277,0.523,278,0.433,279,0.523,280,0.433,281,0.523,282,0.433,283,0.523,284,0.523,285,0.523,286,0.017,287,0.017,298,1.893,306,2.17,319,0.968,323,0.908,330,1.916,354,1.893,361,0.754,383,2.996,388,0.968,389,2.647,404,1.112,411,1.112,418,1.112,419,2.17,430,1.713,447,1.243,454,1.713,466,2.114,493,3.651,494,2.68,495,1.408,496,1.408,497,2.337,498,1.408,499,1.408,500,1.408,501,1.408,502,2.647,503,1.243,504,3.651,505,1.408,506,1.408,507,1.408,508,1.408,509,3.746,510,3.536,511,2.974,512,2.17,513,1.408,514,1.408,515,1.408,516,1.408,517,1.408,518,1.408,519,1.243,536,2.647,537,2.792,538,2.17,539,2.974,540,2.647,541,1.408,542,1.408,543,2.17,544,1.408,545,1.408,546,2.17,549,3.746,550,3.212,553,2.647,554,0.826,556,3.651,557,2.647,558,2.647,566,3.393,568,2.17,569,1.408,571,3.393,606,2.626,625,1.408,630,1.916,631,1.4,636,2.883,656,1.713,666,1.916,691,1.916,763,2.626,824,2.337,883,2.647,917,1.628,918,3.691,919,3.025,920,3.691,921,3.025,922,1.963,923,1.963,924,1.963,925,1.963,926,1.963,927,1.963,928,1.963,929,3.691,930,1.963,931,1.963,932,1.963,933,1.963,934,1.963,935,3.025,936,1.408,937,4.147,938,1.963,939,1.963,940,3.025,941,2.509,942,3.025,943,1.963,944,1.963,945,1.963,946,1.963,947,3.025,948,1.963,949,2.509,950,3.025,951,2.17,952,1.963,953,1.963,954,3.025,955,3.025,956,1.963,957,1.963,958,1.963,959,1.963,960,1.963,961,1.963,962,3.025,963,1.963,964,3.393,965,2.509,966,3.025,967,3.025,968,3.025,969,1.963,970,1.628,971,3.061,972,1.628,973,1.628,974,1.628,975,3.44,976,2.509,977,1.628,978,1.628,979,1.628,980,2.509,981,2.509,982,3.061,983,1.628,984,1.963,985,1.963,986,1.628,987,1.628,988,1.628,989,3.44,990,1.628]],["title/classes/MockAuth.html",[140,0.252,991,2.221]],["body/classes/MockAuth.html",[3,0.543,4,0.469,9,0.469,16,0.879,62,0.035,139,0.543,140,0.398,286,0.031,287,0.031,388,1.564,619,2.766,807,3.093,991,4.024,992,4.052,993,4.885,994,4.885,995,4.885]],["title/classes/MockAuthService.html",[140,0.252,996,2.221]],["body/classes/MockAuthService.html",[3,0.578,4,0.35,9,0.35,34,0.406,41,0.937,59,1.133,61,1.251,62,0.036,63,0.85,64,0.87,65,1.021,77,1.021,91,1.251,102,1.843,122,0.758,139,0.406,140,0.297,145,1.689,147,1.401,148,2.446,151,1.689,152,1.689,157,0.973,162,2.105,172,1.817,177,2.735,179,1.863,183,1.863,185,1.689,187,1.536,209,2.538,286,0.026,287,0.026,330,2.975,331,2.975,357,1.646,374,3.369,404,3.106,418,2.66,447,3.474,494,2.066,598,2.066,609,3.896,611,3.896,619,2.066,628,3.896,633,3.896,643,3.896,647,3.896,807,2.311,815,3.896,996,3.369,997,4.819,998,3.027,999,3.896,1000,3.649,1001,3.649,1002,3.649,1003,3.649,1004,3.896,1005,3.649,1006,3.649,1007,4.697,1008,3.649,1009,3.649,1010,3.649,1011,3.649,1012,3.649,1013,4.697,1014,3.649,1015,5.676,1016,3.649,1017,3.649,1018,3.649,1019,2.617,1020,3.896,1021,3.649,1022,3.896,1023,3.896,1024,3.369,1025,4.697,1026,4.309,1027,3.649,1028,3.649,1029,3.649,1030,3.649,1031,3.649]],["title/components/NavbarComponent.html",[0,0.053,272,0.683]],["body/components/NavbarComponent.html",[0,0.067,1,0.481,2,0.795,3,0.242,4,0.209,5,0.581,6,0.698,7,0.581,8,0.581,9,0.209,13,1.306,14,1.52,16,0.92,18,0.957,19,1.26,20,0.581,21,1.548,22,1.28,24,0.873,25,0.873,26,0.957,27,1.379,30,1.049,32,0.873,34,0.242,35,0.654,41,0.654,46,1.401,52,0.873,55,1.821,56,2.229,57,1.258,58,1.792,59,0.984,61,0.481,62,0.037,63,0.566,64,0.566,65,0.392,68,1.855,72,0.581,74,1.241,75,1.049,77,0.708,78,0.955,91,1.243,96,1.33,112,0.873,113,0.873,117,1.644,122,0.849,123,1.009,124,1.009,125,0.392,126,1.009,127,0.957,130,0.764,136,1.009,139,0.242,140,0.178,141,1.371,142,1.009,147,0.837,153,1.516,155,1.808,156,1.808,157,0.873,169,1.563,195,3.139,209,1.009,214,1.113,216,1.673,227,2.493,236,1.381,253,0.581,254,1.049,255,0.873,256,0.581,257,1.167,258,0.581,259,0.581,260,0.481,261,0.581,262,0.481,263,0.581,264,0.481,265,0.581,266,0.481,267,0.581,268,0.481,269,0.581,270,0.481,271,0.581,272,0.965,273,0.581,274,0.481,275,0.581,276,0.481,277,0.581,278,0.481,279,0.581,280,0.481,281,0.581,282,0.481,283,0.581,284,0.581,285,0.581,286,0.018,287,0.018,297,1.381,298,1.892,300,1.855,319,1.049,333,2.35,338,1.009,354,1.963,357,1.534,362,2.075,371,1.808,383,3.121,388,0.698,389,3.139,404,1.235,411,1.235,418,1.855,419,2.35,430,2.979,448,1.673,449,1.113,450,2.009,451,1.113,466,1.801,493,3.992,494,3.047,495,2.35,496,3.535,497,3.238,498,2.35,499,2.35,500,1.563,501,1.563,502,3.365,503,2.075,504,3.859,505,2.35,506,1.563,507,2.35,508,2.823,509,3.931,510,3.535,511,3.139,512,2.35,513,1.563,514,2.35,515,1.563,516,1.563,517,2.35,518,1.563,519,2.493,520,3.265,521,1.808,522,2.718,523,2.718,524,2.718,525,2.718,526,2.718,527,1.808,528,1.808,529,1.808,530,1.808,531,1.808,532,1.808,533,1.563,534,1.808,535,1.563,536,2.35,537,2.657,538,1.563,539,2.823,540,2.35,541,1.563,542,1.563,543,2.35,544,1.563,545,1.563,546,1.563,549,3.992,550,3.535,552,1.808,553,3.139,554,1.379,555,1.808,556,3.859,557,3.139,558,2.823,566,3.535,568,2.35,569,1.563,571,3.535,576,2.35,577,2.35,580,1.381,581,1.808,582,1.808,606,2.075,691,2.075,724,3.892,744,1.808,776,1.563,824,2.493,964,2.35,970,1.808,971,3.63,972,1.808,973,1.808,975,3.63,976,2.718,977,1.808,978,1.808,979,1.808,980,1.808,981,1.808,982,2.718,983,1.808,986,1.808,987,1.808,988,1.808,989,3.63,990,1.808,1032,1.808,1033,3.936,1034,3.276,1035,4.377,1036,3.63,1037,3.936,1038,4.377,1039,3.276,1040,2.18,1041,2.18,1042,2.18,1043,2.18,1044,2.18,1045,2.18,1046,2.493,1047,2.18,1048,2.18,1049,2.18,1050,2.18,1051,1.808,1052,2.18,1053,3.276,1054,2.18,1055,2.18,1056,1.808,1057,2.18,1058,2.18,1059,3.276,1060,3.276,1061,3.276,1062,2.18,1063,2.18,1064,3.276,1065,3.276,1066,3.936,1067,2.18,1068,2.18,1069,2.18,1070,2.18,1071,2.18,1072,2.18,1073,2.18,1074,2.18,1075,1.808,1076,2.18]],["title/components/PayComponent.html",[0,0.053,274,0.683]],["body/components/PayComponent.html",[0,0.07,1,0.511,2,0.833,3,0.258,4,0.223,5,0.618,6,0.743,7,0.618,8,0.618,9,0.223,11,0.9,12,1.203,13,1.169,14,1.089,16,1.094,18,1.003,19,1.307,20,0.618,21,1.565,22,1.294,24,0.915,25,0.915,26,1.003,27,1.431,28,2.587,30,1.098,32,0.915,34,0.258,35,0.685,36,2.229,37,2.085,40,1.943,41,0.685,46,1.445,47,1.752,49,1.588,52,0.618,55,1.89,57,1.317,58,1.829,59,1.041,61,0.9,62,0.037,63,0.693,64,0.812,65,0.735,71,1.936,72,1.344,74,1.266,75,1.098,77,0.735,78,0.991,91,1.227,95,1.588,96,1.451,97,1.752,98,2.304,101,1.588,102,1.627,104,1.445,105,2.089,106,2.334,107,1.89,108,1.588,109,2.085,110,2.415,111,1.752,112,1.089,113,1.089,117,1.829,122,0.883,123,1.074,124,1.074,125,0.417,126,1.074,127,1.003,129,1.074,130,0.813,136,1.074,139,0.258,140,0.189,141,1.194,142,1.074,153,1.074,157,1.203,162,1.568,171,1.194,172,1.445,187,0.977,201,1.314,214,1.752,217,1.943,225,1.664,229,1.664,230,1.588,231,1.184,232,2.089,233,1.074,240,2.556,244,2.793,245,2.377,248,2.459,253,0.618,254,0.915,255,0.915,256,0.618,257,1.203,258,0.618,259,0.618,260,0.511,261,0.618,262,0.511,263,0.618,264,0.511,265,0.618,266,0.511,267,0.618,268,0.511,269,0.618,270,0.511,271,0.618,272,0.511,273,0.618,274,0.995,275,0.618,276,0.511,277,0.618,278,0.511,279,0.618,280,0.511,281,0.618,282,0.511,283,0.618,284,0.618,285,0.618,286,0.019,287,0.019,297,1.469,298,1.936,319,0.743,323,1.074,334,2.847,354,2.003,357,1.203,361,1.317,362,1.469,384,1.924,388,0.743,408,1.469,411,1.314,448,1.752,449,1.184,450,2.085,451,1.184,454,1.314,456,1.469,459,1.469,460,1.469,465,1.943,466,1.317,467,1.752,595,1.943,630,2.587,635,3.996,642,1.924,656,1.314,666,2.173,752,4.789,763,1.469,776,1.664,802,1.924,805,3.388,909,1.314,951,2.929,965,4.183,1024,1.664,1046,2.858,1051,1.924,1077,1.924,1078,3.432,1079,4.084,1080,3.432,1081,3.432,1082,2.32,1083,3.432,1084,4.513,1085,2.32,1086,3.432,1087,2.32,1088,2.32,1089,2.32,1090,4.084,1091,3.432,1092,3.432,1093,5.043,1094,2.32,1095,3.432,1096,3.432,1097,2.32,1098,3.432,1099,2.32,1100,2.32,1101,2.32,1102,2.32,1103,2.32,1104,2.32,1105,2.32,1106,2.32,1107,2.32,1108,2.32,1109,1.924,1110,3.432,1111,1.924,1112,2.32,1113,2.32,1114,2.32,1115,2.32,1116,2.32,1117,2.32,1118,2.32,1119,3.432,1120,4.513,1121,2.847,1122,2.847,1123,2.32,1124,1.924,1125,3.237,1126,4.513,1127,4.513,1128,3.432,1129,3.432]],["title/interfaces/Product.html",[357,1.085,1130,1.753]],["body/interfaces/Product.html",[3,0.481,4,0.415,9,0.415,11,0.954,34,0.481,35,1.042,62,0.036,63,0.838,64,0.911,65,0.94,68,3.178,96,1.05,102,1.872,139,0.481,286,0.029,287,0.029,310,3.839,357,1.831,360,3.589,374,4.18,404,3.3,418,3.3,554,1.821,1020,4.834,1022,4.834,1023,4.834,1024,4.18,1130,2.45,1131,3.103,1132,3.589,1133,3.589,1134,3.589]],["title/components/ProfileComponent.html",[0,0.053,276,0.683]],["body/components/ProfileComponent.html",[0,0.057,1,0.372,2,0.652,3,0.299,4,0.162,5,0.449,6,0.54,7,0.449,8,0.449,9,0.162,11,0.919,12,0.941,13,0.812,14,1.455,15,2.228,16,1.09,18,0.785,19,1.071,20,0.449,21,1.471,22,1.217,23,1.895,24,0.716,25,0.716,26,0.785,27,1.173,28,2.119,29,1.895,30,0.86,32,0.716,34,0.188,35,0.536,36,1.928,37,1.708,40,0.955,41,0.536,46,1.221,47,1.948,49,1.243,50,1.521,51,1.895,52,0.716,53,0.955,54,2.161,55,1.549,57,2.178,58,1.632,59,1.089,61,0.919,62,0.037,63,0.67,64,0.785,65,0.75,66,1.521,71,2.001,72,1.567,74,1.396,75,1.668,77,0.87,78,1.173,84,1.701,91,1.149,92,1.068,95,1.243,96,1.444,97,1.371,98,2.127,101,1.243,102,1.63,104,1.131,105,1.766,106,2.054,107,1.549,108,1.243,109,1.708,110,2.237,111,1.371,112,0.892,113,0.892,115,1.895,117,1.337,120,0.955,122,0.804,123,0.78,124,0.78,125,0.303,126,0.78,127,0.493,128,0.955,129,0.78,130,0.591,134,1.209,135,1.701,136,0.78,139,0.188,140,0.137,141,1.297,142,0.78,144,0.955,145,1.549,146,2.36,147,1.285,148,1.606,150,0.955,151,1.549,152,1.549,153,0.78,157,1.328,162,1.465,171,1.361,172,1.071,177,0.78,194,0.955,204,1.209,205,1.209,209,0.78,212,1.399,213,1.701,214,2.266,216,2.75,217,1.895,220,3.682,224,1.209,225,3.339,227,1.068,229,2.737,230,1.243,231,0.861,232,1.243,233,0.78,235,1.701,236,3.061,237,2.737,238,2.847,239,2.708,240,2.161,241,2.737,244,2.75,245,2.267,246,2.891,247,2.266,248,1.371,249,1.926,250,1.701,253,0.449,254,0.716,255,0.716,256,0.449,257,1.017,258,0.449,259,0.449,260,0.372,261,0.449,262,0.372,263,0.449,264,0.372,265,0.449,266,0.372,267,0.449,268,0.372,269,0.449,270,0.372,271,0.449,272,0.372,273,0.449,274,0.372,275,0.449,276,0.841,277,0.449,278,0.372,279,0.449,280,0.372,281,0.449,282,0.372,283,0.449,284,0.449,285,0.449,286,0.015,287,0.015,298,1.787,309,3.682,312,1.701,319,0.54,333,1.926,338,1.766,354,1.787,361,2.036,368,2.228,381,2.228,388,0.86,399,2.417,411,0.955,448,1.371,449,0.861,450,1.708,451,0.861,454,0.955,456,1.068,459,1.068,460,1.068,465,0.955,466,1.599,467,1.371,580,1.068,595,1.895,616,2.228,623,3.165,630,3.564,636,2.891,646,2.776,652,3.165,656,0.955,659,4.009,662,3.456,663,2.228,666,2.417,667,3.862,682,1.399,748,2.228,749,1.926,763,1.701,861,1.926,883,2.4,936,1.209,951,1.209,1036,3.165,1046,1.701,1056,1.399,1075,2.228,1109,1.399,1111,1.399,1125,2.4,1135,1.399,1136,3.346,1137,2.685,1138,3.346,1139,2.685,1140,3.816,1141,2.685,1142,2.685,1143,2.685,1144,4.656,1145,1.686,1146,2.685,1147,2.228,1148,3.346,1149,2.685,1150,1.686,1151,1.686,1152,1.686,1153,1.686,1154,1.686,1155,2.685,1156,1.686,1157,2.685,1158,1.686,1159,1.686,1160,1.686,1161,1.686,1162,1.686,1163,1.926,1164,1.686,1165,2.685,1166,1.399,1167,1.399,1168,1.399,1169,1.399,1170,1.399,1171,3.456,1172,2.776,1173,2.776,1174,1.399,1175,1.399,1176,1.399,1177,1.686,1178,1.686,1179,1.686,1180,2.685,1181,1.686,1182,1.686,1183,1.686,1184,2.685,1185,1.686,1186,1.686,1187,1.686,1188,1.686,1189,1.686,1190,1.686,1191,1.686,1192,1.686,1193,1.686,1194,1.686,1195,2.685,1196,2.685,1197,1.686,1198,1.686,1199,1.686,1200,1.686,1201,1.686,1202,1.686,1203,1.686,1204,1.686,1205,1.399,1206,1.399,1207,1.399,1208,1.686,1209,1.686,1210,1.686,1211,2.228,1212,1.686,1213,1.686,1214,1.686,1215,1.686,1216,2.685,1217,1.686,1218,1.686,1219,1.686,1220,1.686,1221,1.686,1222,1.686,1223,1.686,1224,1.686,1225,1.686,1226,2.228,1227,2.685,1228,1.686,1229,1.399,1230,1.686,1231,1.686,1232,1.686,1233,1.686,1234,1.686,1235,1.686,1236,1.686,1237,1.686,1238,1.686,1239,1.686,1240,2.228,1241,2.228,1242,2.228,1243,2.228]],["title/components/RecordComponent.html",[0,0.053,278,0.683]],["body/components/RecordComponent.html",[0,0.081,1,0.659,2,0.999,3,0.333,4,0.287,5,0.797,6,0.957,7,0.797,8,0.797,9,0.287,11,0.907,12,1.924,13,1.23,14,1.097,16,1.107,18,1.202,19,1.505,20,0.797,21,1.626,22,1.345,24,1.097,25,1.097,26,1.202,27,1.775,30,1.317,32,1.097,34,0.333,35,0.821,41,0.821,46,1.622,52,1.35,55,2.177,57,1.579,58,2.008,59,1.011,61,0.659,62,0.036,63,0.676,64,0.676,65,0.538,72,1.568,74,1.454,75,1.317,77,0.538,78,0.726,85,2.33,91,1.117,96,1.23,112,1.097,113,1.097,117,1.775,122,0.818,123,1.384,124,1.384,125,0.538,126,1.384,127,0.874,130,1.048,136,1.384,139,0.333,140,0.244,141,1.202,142,1.384,153,1.384,157,1.254,162,1.148,171,1.202,185,2.177,193,1.904,240,2.33,247,2.101,253,0.797,254,1.097,255,1.097,256,0.797,257,1.35,258,0.797,259,0.797,260,0.659,261,0.797,262,0.659,263,0.797,264,0.659,265,0.797,266,0.659,267,0.797,268,0.659,269,0.797,270,0.659,271,0.797,272,0.659,273,0.797,274,0.659,275,0.797,276,0.659,277,0.797,278,1.117,279,0.797,280,0.659,281,0.797,282,0.659,283,0.797,284,0.797,285,0.797,286,0.023,287,0.023,302,2.33,303,2.33,335,3.413,338,1.904,363,4.219,370,3.413,388,1.622,448,2.101,449,1.527,450,2.401,451,1.527,589,2.33,590,2.33,604,2.951,631,1.904,691,2.606,720,2.951,736,2.951,737,2.951,738,2.606,739,2.33,743,3.633,746,3.413,750,4.879,1046,1.894,1229,2.481,1244,2.481,1245,4.704,1246,4.114,1247,2.991,1248,4.114,1249,2.991,1250,4.114,1251,2.991,1252,4.114,1253,4.114,1254,2.481,1255,2.991,1256,2.991,1257,2.991,1258,2.991,1259,4.114,1260,4.114,1261,4.114,1262,4.114,1263,2.991,1264,2.991]],["title/components/RegisterComponent.html",[0,0.053,280,0.683]],["body/components/RegisterComponent.html",[0,0.063,1,0.433,2,0.735,3,0.219,4,0.189,5,0.524,6,0.629,7,0.524,8,0.524,9,0.189,11,0.915,12,1.659,13,1.337,14,1.469,16,1.118,17,1.918,18,0.885,19,1.182,20,0.524,21,1.519,22,1.256,24,0.807,25,1.106,26,0.885,27,1.294,29,2.092,30,0.969,32,0.807,34,0.219,35,0.604,36,2.074,37,1.886,41,0.604,46,1.328,47,2.118,49,1.401,50,1.715,51,2.092,52,0.985,53,1.113,54,2.681,57,0.754,58,1.785,59,1.043,61,0.814,62,0.036,63,0.644,64,0.781,65,0.665,66,2.092,71,2.115,72,1.393,74,1.295,75,0.629,77,0.806,78,0.896,91,0.667,95,1.401,96,1.268,97,1.546,98,2.724,101,1.401,102,1.559,104,1.275,105,2.191,106,2.469,107,1.709,108,1.92,109,2.288,110,2.191,111,2.118,112,0.807,113,0.807,115,2.092,117,1.571,120,1.113,122,0.796,125,0.354,127,0.574,128,1.715,129,1.401,130,0.689,136,0.91,139,0.219,140,0.16,141,0.885,144,1.113,145,1.401,146,2.681,147,1.162,148,1.555,150,1.113,151,1.401,152,1.401,157,1.106,162,1.162,171,1.383,172,1.328,177,2.074,179,2.288,183,1.003,185,0.91,187,0.827,193,1.401,194,2.35,213,1.245,214,1.546,216,1.886,230,1.401,231,1.003,232,1.401,233,0.91,236,3.225,237,2.976,238,2.417,239,2.417,240,2.35,241,2.976,244,2.724,245,2.246,246,2.884,247,2.118,248,2.118,249,2.172,250,1.918,253,0.524,254,0.807,255,0.807,256,0.524,257,1.106,258,0.524,259,0.524,260,0.433,261,0.524,262,0.433,263,0.524,264,0.433,265,0.524,266,0.433,267,0.524,268,0.433,269,0.524,270,0.433,271,0.524,272,0.433,273,0.524,274,0.433,275,0.524,276,0.433,277,0.524,278,0.433,279,0.524,280,0.915,281,0.524,282,0.433,283,0.524,284,0.524,285,0.524,286,0.017,287,0.017,298,2.048,300,1.715,302,1.715,303,1.715,312,2.998,319,0.629,323,0.91,331,1.918,338,1.401,361,2.084,379,2.512,383,1.918,388,1.328,466,0.754,467,1.003,537,1.715,554,1.275,589,1.715,590,1.715,595,2.092,604,2.172,605,4.425,636,3.12,743,2.172,798,1.63,799,1.63,861,2.172,936,2.649,941,1.63,949,1.63,964,1.41,1019,1.41,1121,2.512,1122,2.512,1125,2.649,1147,3.927,1163,2.172,1166,2.512,1167,1.63,1168,1.63,1169,1.63,1170,1.63,1171,4.091,1172,3.064,1173,3.064,1174,1.63,1175,1.63,1176,3.064,1226,2.512,1240,3.442,1241,2.512,1242,3.442,1243,2.512,1254,1.63,1265,1.63,1266,3.442,1267,3.028,1268,3.694,1269,3.028,1270,3.694,1271,3.028,1272,3.028,1273,2.512,1274,1.966,1275,1.966,1276,3.028,1277,4.15,1278,1.966,1279,3.028,1280,3.028,1281,4.734,1282,3.028,1283,3.028,1284,4.482,1285,3.028,1286,3.028,1287,1.966,1288,1.966,1289,1.966,1290,1.966,1291,2.512,1292,2.512,1293,3.028,1294,1.966,1295,1.966,1296,1.966,1297,1.966,1298,1.966,1299,1.966,1300,1.966,1301,3.028,1302,1.966,1303,1.966,1304,1.966,1305,1.966,1306,1.966,1307,1.966,1308,1.966,1309,1.966,1310,1.966,1311,1.966,1312,1.966,1313,1.966,1314,1.966,1315,1.966,1316,1.966,1317,1.966,1318,1.966,1319,1.966,1320,1.966,1321,4.482,1322,1.966,1323,3.028,1324,2.512,1325,3.028,1326,3.028,1327,3.028,1328,3.028,1329,3.028,1330,2.512,1331,3.028,1332,3.028,1333,3.028,1334,2.512,1335,1.63,1336,2.512,1337,2.512,1338,1.63,1339,1.63,1340,1.63,1341,1.63,1342,1.63,1343,1.63,1344,1.63]],["title/components/ResetpassComponent.html",[0,0.053,282,0.683]],["body/components/ResetpassComponent.html",[0,0.069,1,0.5,2,0.819,3,0.252,4,0.218,5,0.604,6,0.726,7,0.604,8,0.604,9,0.218,11,0.984,12,1.753,13,1.363,14,1.497,16,1.123,18,0.986,19,1.29,20,0.604,21,1.559,22,1.289,24,0.899,25,0.899,26,0.986,27,1.412,28,2.552,29,2.282,30,1.08,32,0.899,34,0.252,35,0.673,36,2.208,37,2.057,41,0.673,46,1.429,47,2.279,49,1.561,50,1.911,51,2.282,52,1.19,53,1.284,54,2.832,55,2.065,59,1.105,61,0.888,62,0.036,63,0.686,64,0.808,65,0.725,66,2.282,71,1.988,72,0.899,74,1.343,77,0.858,78,1.158,95,1.561,96,1.292,97,1.723,98,2.717,101,1.561,102,1.618,104,1.879,105,2.314,106,2.562,107,1.865,108,2.065,109,2.436,110,2.208,111,2.279,112,0.899,113,0.899,115,2.282,120,1.284,122,0.77,123,1.049,124,1.049,125,0.408,126,1.049,127,0.663,128,1.284,129,1.049,139,0.252,140,0.185,141,1.178,142,1.049,144,1.284,146,1.284,148,1.42,150,1.284,153,1.561,157,1.19,171,1.462,172,0.726,193,1.561,213,1.436,214,1.158,216,1.158,217,1.284,230,1.561,231,1.158,232,1.561,233,1.561,238,2.868,239,2.717,244,1.723,245,1.42,246,1.911,247,1.158,248,2.279,253,0.604,254,0.899,255,0.899,256,0.604,257,1.19,258,0.604,259,0.604,260,0.5,261,0.604,262,0.5,263,0.604,264,0.5,265,0.604,266,0.5,267,0.604,268,0.5,269,0.604,270,0.5,271,0.604,272,0.5,273,0.604,274,0.5,275,0.604,276,0.5,277,0.604,278,0.5,279,0.604,280,0.5,281,0.604,282,0.984,283,1.074,284,0.604,285,0.604,286,0.019,287,0.019,298,2.125,300,1.911,302,1.911,303,1.911,304,2.799,305,2.799,310,2.552,311,2.799,312,2.137,319,0.726,361,1.295,388,1.704,466,0.87,467,1.158,537,1.911,580,2.137,606,1.436,619,1.284,625,2.42,631,1.561,636,3.392,651,2.799,675,1.881,720,2.42,736,2.42,737,2.42,738,2.137,739,1.911,749,1.626,824,2.552,974,1.881,999,3.958,1004,1.881,1124,4.149,1163,2.42,1205,1.881,1206,1.881,1207,1.881,1211,4.149,1266,2.799,1273,2.799,1291,2.799,1292,2.799,1324,2.799,1330,2.799,1334,2.799,1335,1.881,1336,2.799,1337,2.799,1338,1.881,1339,1.881,1340,1.881,1341,1.881,1342,1.881,1343,1.881,1344,1.881,1345,1.881,1346,4.771,1347,4.03,1348,3.374,1349,4.03,1350,3.374,1351,3.374,1352,2.268,1353,3.374,1354,3.374,1355,2.268,1356,2.268,1357,2.268,1358,3.374,1359,2.268,1360,4.03,1361,2.268,1362,2.268,1363,5.001,1364,2.268,1365,2.799,1366,2.268,1367,2.268,1368,2.268,1369,2.268,1370,2.268,1371,2.268,1372,2.268,1373,2.268,1374,4.03,1375,2.268,1376,2.268,1377,2.268,1378,3.374,1379,2.268,1380,2.268,1381,3.374]],["title/interfaces/User.html",[91,0.683,1130,1.753]],["body/interfaces/User.html",[3,0.459,4,0.397,9,0.397,11,0.911,23,2.34,34,0.459,35,1.014,62,0.036,64,0.899,65,0.914,72,1.354,91,1.12,102,1.884,122,0.667,139,0.459,145,2.655,147,2.202,148,2.415,151,2.655,152,2.655,162,2.202,177,2.655,179,2.929,183,2.929,185,2.655,187,2.415,286,0.028,287,0.028,357,2.129,361,1.95,554,2.138,631,1.912,1019,2.963,1130,2.34,1131,2.963,1133,4.213,1134,4.213,1382,3.427,1383,4.132]],["title/injectables/UserService.html",[354,1.188,585,1.433]],["body/injectables/UserService.html",[3,0.461,4,0.398,9,0.398,11,1.121,13,1.235,16,0.915,34,0.461,35,1.015,41,1.015,59,1.099,61,0.913,62,0.036,63,0.596,64,0.596,65,0.745,72,1.599,74,1.394,77,0.745,78,1.005,90,3.649,91,1.323,96,1.456,112,1.356,113,1.356,117,2.065,122,0.889,125,0.745,139,0.461,140,0.338,141,1.609,171,1.211,286,0.029,287,0.029,291,2.623,354,1.953,585,2.354,586,2.623,589,2.881,590,2.881,598,2.346,599,2.971,613,4.22,631,2.354,653,4.22,655,4.22,656,3.252,909,2.881,1384,3.436,1385,5.506,1386,5.506,1387,4.143,1388,5.087,1389,4.143,1390,5.087,1391,4.143,1392,4.143,1393,4.143,1394,4.143]],["title/coverage.html",[1395,3.495]],["body/coverage.html",[0,0.107,1,0.864,9,0.376,10,3.252,22,0.864,58,1.374,62,0.036,64,0.564,91,0.864,140,0.438,260,0.864,262,0.864,264,0.864,266,0.864,268,0.864,270,0.864,272,0.864,274,0.864,276,0.864,278,0.864,280,0.864,282,0.864,286,0.028,287,0.028,288,3.252,336,3.252,353,2.483,354,1.505,357,1.374,430,3.515,494,3.401,563,3.252,585,2.486,587,3.252,588,3.252,603,3.252,718,3.252,806,2.812,808,3.252,809,3.252,816,3.252,822,3.252,909,2.22,917,3.252,991,2.812,992,3.252,996,2.812,997,3.252,998,3.252,1032,3.252,1077,3.252,1130,2.784,1132,3.252,1135,3.252,1244,3.252,1265,3.252,1345,3.252,1382,3.252,1384,3.252,1395,3.252,1396,3.92,1397,3.92,1398,3.92,1399,4.078,1400,4.916,1401,6.074,1402,2.812,1403,4.916,1404,4.078,1405,5.8,1406,3.252,1407,3.252,1408,3.252,1409,3.252,1410,4.916,1411,3.92,1412,3.92,1413,3.92,1414,3.92,1415,3.92,1416,3.92,1417,3.92,1418,3.92,1419,3.92,1420,3.92,1421,3.92,1422,4.916,1423,4.916,1424,3.92,1425,4.916,1426,4.916,1427,3.92,1428,3.92,1429,3.92,1430,3.252,1431,3.252,1432,3.252,1433,2.812,1434,3.92,1435,3.92,1436,3.92,1437,3.92]],["title/dependencies.html",[1438,1.859,1439,3.086]],["body/dependencies.html",[62,0.036,125,0.827,127,1.344,129,2.128,286,0.03,287,0.03,319,1.472,598,2.604,607,3.298,738,3.431,739,2.604,1433,3.298,1439,3.814,1440,4.599,1441,6.288,1442,4.599,1443,4.599,1444,4.599,1445,5.759,1446,4.599,1447,4.599,1448,3.814,1449,4.599,1450,4.599,1451,4.599,1452,4.599,1453,4.599,1454,4.599,1455,4.599,1456,4.599,1457,4.599,1458,4.599,1459,4.599]],["title/miscellaneous/functions.html",[1460,1.641,1461,3.086]],["body/miscellaneous/functions.html",[22,1.301,34,0.543,62,0.034,77,1.01,78,1.186,286,0.031,287,0.031,1399,4.897,1402,4.234,1460,3.093,1461,4.052,1462,4.885]],["title/index.html",[34,0.288,1463,2.592,1464,2.592]],["body/index.html",[0,0.096,4,0.416,18,1.266,62,0.029,63,0.623,286,0.029,287,0.029,739,2.961,909,2.453,916,3.594,1402,4.28,1438,3.107,1448,3.594,1465,4.332,1466,5.228,1467,4.332,1468,4.657,1469,5.615,1470,3.594,1471,4.332,1472,6.134,1473,4.332,1474,4.332,1475,4.332,1476,4.332,1477,4.332,1478,4.332,1479,4.332,1480,4.332,1481,4.332,1482,4.332,1483,4.332,1484,5.615,1485,5.615,1486,4.332,1487,5.831,1488,4.332,1489,4.332,1490,4.332,1491,4.332,1492,5.228,1493,5.228,1494,5.831,1495,4.332,1496,5.228,1497,5.228,1498,4.332,1499,6.064,1500,4.332,1501,4.332,1502,4.332,1503,5.228,1504,4.332,1505,4.332,1506,4.332,1507,4.332,1508,4.332,1509,4.332,1510,5.615,1511,4.332,1512,4.332,1513,4.332,1514,3.107,1515,4.332,1516,4.332]],["title/modules.html",[1517,3.495]],["body/modules.html",[62,0.032,286,0.032,287,0.032,1517,4.159]],["title/overview.html",[1514,3.022]],["body/overview.html",[2,1.202,62,0.032,286,0.032,287,0.032,586,3.136,807,3.136,1026,4.108,1131,3.552,1514,3.552,1518,4.953,1519,5.655]],["title/properties.html",[35,0.742,1438,1.859]],["body/properties.html",[35,0.996,62,0.033,286,0.032,287,0.032,1470,4.14,1520,4.991]],["title/miscellaneous/variables.html",[1460,1.641,1521,3.086]],["body/miscellaneous/variables.html",[13,0.996,14,1.349,16,1.091,34,0.457,56,2.325,57,1.576,62,0.036,64,0.789,74,0.996,112,1.567,113,1.567,286,0.028,287,0.028,290,4.197,447,2.6,607,3.628,619,2.325,1365,3.405,1404,3.405,1406,4.549,1407,4.549,1408,3.405,1409,4.197,1430,3.405,1431,4.197,1432,3.405,1433,3.628,1460,2.6,1468,4.549,1521,3.405,1522,4.106,1523,4.106,1524,5.059,1525,4.106,1526,5.059,1527,5.059,1528,4.106,1529,5.879,1530,6.066,1531,4.106,1532,4.106,1533,4.106,1534,4.106,1535,4.106,1536,4.106,1537,4.106,1538,5.059,1539,4.106,1540,4.106,1541,5.059,1542,4.106,1543,4.106,1544,5.059,1545,4.106,1546,4.106,1547,4.106,1548,4.106,1549,4.106,1550,4.106,1551,4.106,1552,4.106,1553,4.106,1554,4.106,1555,4.106,1556,4.106,1557,4.106,1558,4.106,1559,4.106,1560,4.106,1561,4.106,1562,4.106]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":430,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1520,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":532,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["0.14.3",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":523,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["0/1",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["001f39",{"_index":538,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["01",{"_index":1015,"title":{},"body":{"classes/MockAuthService.html":{}}}],["02",{"_index":1030,"title":{},"body":{"classes/MockAuthService.html":{}}}],["1",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["1.1.25",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["10.000",{"_index":468,"title":{},"body":{"components/ArticleComponent.html":{}}}],["10.12.3",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":494,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["100.000",{"_index":472,"title":{},"body":{"components/ArticleComponent.html":{}}}],["10000",{"_index":444,"title":{},"body":{"components/ArticleComponent.html":{}}}],["100000",{"_index":446,"title":{},"body":{"components/ArticleComponent.html":{}}}],["100vh",{"_index":501,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["101.243",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["1080px",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["10px",{"_index":508,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["11/11",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["119.990",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{}}}],["123",{"_index":1016,"title":{},"body":{"classes/MockAuthService.html":{}}}],["12px",{"_index":530,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["13",{"_index":1518,"title":{},"body":{"overview.html":{}}}],["13/14",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["134.990",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{}}}],["139.990",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{}}}],["1500",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["150px",{"_index":570,"title":{},"body":{"components/ArticleComponent.html":{}}}],["15px",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["17.1.0",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["17.3.8",{"_index":1448,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18",{"_index":1241,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["19.990",{"_index":469,"title":{},"body":{"components/ArticleComponent.html":{}}}],["1900",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["1990",{"_index":1014,"title":{},"body":{"classes/MockAuthService.html":{}}}],["1:956918261341:web:463c74c4c2b86725b54fb4",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1026,"title":{},"body":{"classes/MockAuthService.html":{},"overview.html":{}}}],["2.3.0",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["20.994",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{}}}],["200",{"_index":1028,"title":{},"body":{"classes/MockAuthService.html":{}}}],["2000",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":568,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["2023",{"_index":1025,"title":{},"body":{"classes/MockAuthService.html":{}}}],["2024",{"_index":820,"title":{},"body":{"components/FooterComponent.html":{}}}],["21.995",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["22.744",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["24.745",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["26.990",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["28a745",{"_index":1342,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["3",{"_index":1519,"title":{},"body":{"overview.html":{}}}],["3/8",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{}}}],["3000",{"_index":233,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["300px",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["34",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["37",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["39.990",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["4",{"_index":562,"title":{},"body":{"components/ArticleComponent.html":{}}}],["4.18.2",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":514,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["40px",{"_index":506,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["44",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["44.990",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["44.995",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["46",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["47.992",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["48.743",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["480px",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["5.3.3",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":563,"title":{},"body":{"components/ArticleComponent.html":{},"coverage.html":{}}}],["50.000",{"_index":470,"title":{},"body":{"components/ArticleComponent.html":{}}}],["50000",{"_index":445,"title":{},"body":{"components/ArticleComponent.html":{}}}],["57",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":572,"title":{},"body":{"components/ArticleComponent.html":{}}}],["5px",{"_index":579,"title":{},"body":{"components/ArticleComponent.html":{}}}],["6",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["66",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":529,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["7.8.0",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["7/15",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":569,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["8",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["81.743",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["83.993",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["9.990",{"_index":443,"title":{},"body":{"components/ArticleComponent.html":{}}}],["9/9",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["90.994",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{}}}],["92",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["956918261341",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.990",{"_index":471,"title":{},"body":{"components/ArticleComponent.html":{}}}],["992px",{"_index":559,"title":{},"body":{"components/ArticleComponent.html":{}}}],["abstractcontrol",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["abstractcontroloptions",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["acc",{"_index":1105,"title":{},"body":{"components/PayComponent.html":{}}}],["acc.push(user",{"_index":1104,"title":{},"body":{"components/PayComponent.html":{}}}],["acceso",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["accessors",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["acciones",{"_index":242,"title":{},"body":{"components/AdminComponent.html":{}}}],["action",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["actual",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["actual_component",{"_index":285,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["actualiza",{"_index":399,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/ProfileComponent.html":{}}}],["actualización",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["actualizado",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["actualizando",{"_index":229,"title":{},"body":{"components/AdminComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["actualizar",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["actualmente",{"_index":1252,"title":{},"body":{"components/RecordComponent.html":{}}}],["add",{"_index":1506,"title":{},"body":{"index.html":{}}}],["address",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["addtocart",{"_index":347,"title":{},"body":{"components/ArticleComponent.html":{}}}],["addtocart(product",{"_index":356,"title":{},"body":{"components/ArticleComponent.html":{}}}],["adicional",{"_index":801,"title":{},"body":{"components/CarComponent.html":{}}}],["adjustments",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["admin",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["admin'},{'name",{"_index":259,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["admin.component.css",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin1234",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["admin@gmail.com",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["adminbutton",{"_index":1184,"title":{},"body":{"components/ProfileComponent.html":{}}}],["adminbutton.classlist.remove('d",{"_index":1186,"title":{},"body":{"components/ProfileComponent.html":{}}}],["admincomponent",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["administración",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["administrador",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["adminmode",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["adminuser",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["agrega",{"_index":359,"title":{},"body":{"components/ArticleComponent.html":{}}}],["agregar",{"_index":364,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["ahora",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{}}}],["aizasydsweh4wlz5qr5nkltbgahhvaqxwhngnu8",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajusta",{"_index":549,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ajustes",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["al",{"_index":361,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{}}}],["alert('por",{"_index":464,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["alerta",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["alertmessage",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["alerttype",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["align",{"_index":576,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["altura",{"_index":550,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["amarillo",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ancho",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["angular",{"_index":1468,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetpassComponent.html":{}}}],["angular/fire/firestore",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["angular/forms",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["antes",{"_index":1109,"title":{},"body":{"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["apikey",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey\":\"aizasydsweh4wlz5qr5nkltbgahhvaqxwhngnu8",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplicación",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["app/core/models/user.model",{"_index":1006,"title":{},"body":{"classes/MockAuthService.html":{}}}],["appcomponent",{"_index":260,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appid\":\"1:956918261341:web:463c74c4c2b86725b54fb4",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1477,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aqu",{"_index":798,"title":{},"body":{"components/CarComponent.html":{},"components/RegisterComponent.html":{}}}],["armable",{"_index":486,"title":{},"body":{"components/ArticleComponent.html":{}}}],["array.from(cartitems.getelementsbyclassname('btn",{"_index":788,"title":{},"body":{"components/CarComponent.html":{}}}],["article",{"_index":341,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{}}}],["article'},{'name",{"_index":263,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["article.component.css",{"_index":342,"title":{},"body":{"components/ArticleComponent.html":{}}}],["article.component.html",{"_index":343,"title":{},"body":{"components/ArticleComponent.html":{}}}],["articlecomponent",{"_index":262,"title":{"components/ArticleComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["articleservice",{"_index":353,"title":{"injectables/ArticleService.html":{}},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"coverage.html":{}}}],["articuladas",{"_index":483,"title":{},"body":{"components/ArticleComponent.html":{}}}],["artifacts",{"_index":1488,"title":{},"body":{"index.html":{}}}],["artículos",{"_index":339,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{}}}],["asegura",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["asegúrate",{"_index":1254,"title":{},"body":{"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["autenticación",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["auth",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/ResetpassComponent.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authdomain\":\"angular",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":58,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["auto",{"_index":419,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["automatically",{"_index":1478,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":551,"title":{},"body":{"components/ArticleComponent.html":{}}}],["available",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["avengers",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{}}}],["azul",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["añadido",{"_index":463,"title":{},"body":{"components/ArticleComponent.html":{}}}],["aún",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["b",{"_index":1027,"title":{},"body":{"classes/MockAuthService.html":{}}}],["background",{"_index":536,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["bandai",{"_index":474,"title":{},"body":{"components/ArticleComponent.html":{},"components/HomeComponent.html":{}}}],["barra",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basado",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["base",{"_index":548,"title":{},"body":{"components/ArticleComponent.html":{}}}],["battle",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{}}}],["behaviorsubject",{"_index":1392,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":1390,"title":{},"body":{"injectables/UserService.html":{}}}],["between",{"_index":535,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["birthdate",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["black",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":495,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["boolean",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"interfaces/Product.html":{},"components/ResetpassComponent.html":{}}}],["bootstrap",{"_index":1433,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1337,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["botón",{"_index":1076,"title":{},"body":{"components/NavbarComponent.html":{}}}],["box",{"_index":525,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["boys",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["brand",{"_index":404,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{}}}],["browser",{"_index":738,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{},"dependencies.html":{}}}],["btn",{"_index":578,"title":{},"body":{"components/ArticleComponent.html":{}}}],["build",{"_index":1487,"title":{},"body":{"index.html":{}}}],["button",{"_index":1376,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["buttons",{"_index":787,"title":{},"body":{"components/CarComponent.html":{}}}],["buttons.foreach((button",{"_index":790,"title":{},"body":{"components/CarComponent.html":{}}}],["cambia",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cambios",{"_index":251,"title":{},"body":{"components/AdminComponent.html":{}}}],["campo",{"_index":1166,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["campos",{"_index":1124,"title":{},"body":{"components/PayComponent.html":{},"components/ResetpassComponent.html":{}}}],["cancelar",{"_index":252,"title":{},"body":{"components/AdminComponent.html":{}}}],["cantidad",{"_index":756,"title":{},"body":{"components/CarComponent.html":{}}}],["capabilities",{"_index":1508,"title":{},"body":{"index.html":{}}}],["car",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CarComponent.html":{}}}],["car'},{'name",{"_index":265,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["car.component.css",{"_index":722,"title":{},"body":{"components/CarComponent.html":{}}}],["car.component.html",{"_index":723,"title":{},"body":{"components/CarComponent.html":{}}}],["caracteres",{"_index":1242,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["carcomponent",{"_index":264,"title":{"components/CarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["card",{"_index":520,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["card:hover",{"_index":527,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["cardnumber",{"_index":1091,"title":{},"body":{"components/PayComponent.html":{}}}],["carga",{"_index":746,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{}}}],["cargando",{"_index":742,"title":{},"body":{"components/CarComponent.html":{}}}],["carrito",{"_index":362,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{}}}],["cart",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/PayComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["cart.foreach((item",{"_index":1099,"title":{},"body":{"components/PayComponent.html":{}}}],["cartcount",{"_index":724,"title":{},"body":{"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["cartitems",{"_index":764,"title":{},"body":{"components/CarComponent.html":{}}}],["carttotal",{"_index":725,"title":{},"body":{"components/CarComponent.html":{}}}],["carácter",{"_index":1176,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":442,"title":{},"body":{"components/ArticleComponent.html":{}}}],["caso",{"_index":378,"title":{},"body":{"components/ArticleComponent.html":{}}}],["catch((error",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["catálogo",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cdr",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["center",{"_index":519,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["centra",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cerrar",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["chainsaw",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1480,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["check",{"_index":1513,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":420,"title":{},"body":{"components/ArticleComponent.html":{}}}],["checkbox.checked",{"_index":423,"title":{},"body":{"components/ArticleComponent.html":{}}}],["checkpricerange",{"_index":348,"title":{},"body":{"components/ArticleComponent.html":{}}}],["checkpricerange(price",{"_index":365,"title":{},"body":{"components/ArticleComponent.html":{}}}],["checkuserstatus",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["choice",{"_index":1502,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":381,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{}}}],["class",{"_index":140,"title":{"classes/FirestoreMock.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":807,"title":{},"body":{"classes/FirestoreMock.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"overview.html":{}}}],["cli",{"_index":1469,"title":{},"body":{"index.html":{}}}],["click",{"_index":792,"title":{},"body":{"components/CarComponent.html":{}}}],["client",{"_index":1019,"title":{},"body":{"classes/MockAuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["cliente",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closemoreinfo",{"_index":349,"title":{},"body":{"components/ArticleComponent.html":{}}}],["code",{"_index":1482,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coinciden",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["coincidir",{"_index":1331,"title":{},"body":{"components/RegisterComponent.html":{}}}],["col",{"_index":560,"title":{},"body":{"components/ArticleComponent.html":{}}}],["collection",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"classes/FirestoreMock.html":{},"components/HomeComponent.html":{}}}],["collection(this.firestore",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{}}}],["collectiondata",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{}}}],["collectiondata(productcollection",{"_index":601,"title":{},"body":{"injectables/ArticleService.html":{}}}],["collectiondata(userscollection",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["color",{"_index":537,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["colores",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["column",{"_index":499,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["columnas",{"_index":565,"title":{},"body":{"components/ArticleComponent.html":{}}}],["command",{"_index":1503,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["como",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["company",{"_index":479,"title":{},"body":{"components/ArticleComponent.html":{},"components/FooterComponent.html":{}}}],["completa",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"components/PayComponent.html":{}}}],["completadas",{"_index":1222,"title":{},"body":{"components/ProfileComponent.html":{}}}],["completo",{"_index":237,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["compodoc/compodoc",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":258,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["componente",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"overview.html":{}}}],["compra",{"_index":1118,"title":{},"body":{"components/PayComponent.html":{}}}],["compras",{"_index":363,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/RecordComponent.html":{}}}],["comprobar",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["con",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"components/PayComponent.html":{}}}],["config",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuración",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["confirmpassword.seterrors",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword.seterrors(null",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword.value",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('el",{"_index":1192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.error('error",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["console.log('actualizando",{"_index":1111,"title":{},"body":{"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["console.log('correo",{"_index":1238,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('iniciando",{"_index":1219,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('perfil",{"_index":1235,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log('tareas",{"_index":1221,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(this.products",{"_index":414,"title":{},"body":{"components/ArticleComponent.html":{}}}],["console.warn('localstorage",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{}}}],["console.warn('no",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.warn('user",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["const",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["constructor(auth",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(fb",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["constructor(firestore",{"_index":592,"title":{},"body":{"injectables/ArticleService.html":{}}}],["constructor(platformid",{"_index":1247,"title":{},"body":{"components/RecordComponent.html":{}}}],["constructor(private",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(renderer",{"_index":731,"title":{},"body":{"components/CarComponent.html":{}}}],["constructor(router",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{}}}],["contain",{"_index":552,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["container",{"_index":511,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["contenedor",{"_index":556,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["content",{"_index":503,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["continuar",{"_index":1208,"title":{},"body":{"components/ProfileComponent.html":{}}}],["contrario",{"_index":379,"title":{},"body":{"components/ArticleComponent.html":{},"components/RegisterComponent.html":{}}}],["contraseña",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["contraseñas",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["control",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["control.get('confirmpassword",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["control.get('password",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controles",{"_index":1163,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["core/models/product.model",{"_index":408,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{}}}],["core/models/user.model",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/article",{"_index":409,"title":{},"body":{"components/ArticleComponent.html":{}}}],["core/services/auth.service",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/user.service",{"_index":411,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["correctamente",{"_index":212,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["correo",{"_index":238,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["count",{"_index":766,"title":{},"body":{"components/CarComponent.html":{}}}],["cover",{"_index":518,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["coverage",{"_index":1395,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":1266,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["createuserwithemailandpassword",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential)).pipe(map",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["cuando",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["cubra",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["currentpassword",{"_index":1165,"title":{},"body":{"components/ProfileComponent.html":{}}}],["custom",{"_index":539,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["custom:hover",{"_index":541,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["cvv",{"_index":1093,"title":{},"body":{"components/PayComponent.html":{}}}],["código",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{}}}],["d",{"_index":574,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["danger",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["darth",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["data['address",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['birthdate",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['cart",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['confirmpassword",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['email",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['fullname",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['password",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['purchasehistory",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['role",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["data['username",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":1024,"title":{},"body":{"classes/MockAuthService.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{}}}],["date().toisostring",{"_index":1097,"title":{},"body":{"components/PayComponent.html":{}}}],["date:'shortdate",{"_index":1263,"title":{},"body":{"components/RecordComponent.html":{}}}],["date:\\'shortdate",{"_index":1264,"title":{},"body":{"components/RecordComponent.html":{}}}],["datos",{"_index":743,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["dc3545",{"_index":1338,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["dcto",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{}}}],["de",{"_index":16,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["deadpool",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{}}}],["debe",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["deben",{"_index":1330,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["default",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["del",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":814,"title":{},"body":{"classes/FirestoreMock.html":{}}}],["deletedoc",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["deletedoc(userdoc",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["deletedoc(userdoc).then",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{}}}],["deleteuser",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{}}}],["deleteuser(index",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{}}}],["deleteuserfromfirestore",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteuserfromfirestore(uid",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["denji",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{}}}],["dentro",{"_index":371,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["dependencies",{"_index":1439,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desactiva",{"_index":1353,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["desde",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/RecordComponent.html":{}}}],["despacho",{"_index":1332,"title":{},"body":{"components/RegisterComponent.html":{}}}],["después",{"_index":1210,"title":{},"body":{"components/ProfileComponent.html":{}}}],["determinado",{"_index":373,"title":{},"body":{"components/ArticleComponent.html":{}}}],["dev",{"_index":1474,"title":{},"body":{"index.html":{}}}],["development",{"_index":1471,"title":{},"body":{"index.html":{}}}],["digimon",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["dirección",{"_index":249,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["direction",{"_index":498,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["directive",{"_index":256,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["directives",{"_index":284,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1486,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1491,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{}}}],["display",{"_index":496,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["dist",{"_index":1490,"title":{},"body":{"index.html":{}}}],["doc",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"classes/FirestoreMock.html":{},"components/ProfileComponent.html":{}}}],["doc(this.firestore",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["doc.address",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.birthdate",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.cart",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.confirmpassword",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.email",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.fullname",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.password",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.purchasehistory",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.role",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.uid",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["doc.username",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["docs.map(doc",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["document.body.style.overflow",{"_index":417,"title":{},"body":{"components/ArticleComponent.html":{}}}],["document.getelementbyid('adminbutton",{"_index":1185,"title":{},"body":{"components/ProfileComponent.html":{}}}],["document.getelementbyid('editusermodal')?.click",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{}}}],["document.getelementbyid('email",{"_index":1373,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["document.getelementbyid('submit",{"_index":1375,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["documentation",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["documento",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{}}}],["documentsnapshot",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["doe",{"_index":1010,"title":{},"body":{"classes/MockAuthService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["dos",{"_index":564,"title":{},"body":{"components/ArticleComponent.html":{}}}],["dukemon",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["durante",{"_index":1224,"title":{},"body":{"components/ProfileComponent.html":{}}}],["dx",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{}}}],["dynamic",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1500,"title":{},"body":{"index.html":{}}}],["ease",{"_index":524,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["edición",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{}}}],["editar",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{}}}],["edition",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["edituser",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{}}}],["edituser(index",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{}}}],["edituserform",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{}}}],["el",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["electrónico",{"_index":239,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["element",{"_index":255,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["elimina",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["eliminado",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["eliminando",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{}}}],["eliminar",{"_index":243,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{}}}],["email",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{}}}],["email).then",{"_index":1370,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["email/contraseña",{"_index":1225,"title":{},"body":{"components/ProfileComponent.html":{}}}],["emailauthprovider",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailauthprovider.credential(user.email",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsection",{"_index":1372,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["emailsection?.classlist.add('d",{"_index":1377,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["emailsection?.classlist.remove('d",{"_index":1379,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["emite",{"_index":597,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["emitir",{"_index":1113,"title":{},"body":{"components/PayComponent.html":{}}}],["en",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["encabezados",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["encargado",{"_index":719,"title":{},"body":{"components/CarComponent.html":{}}}],["encuentra",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1499,"title":{},"body":{"index.html":{}}}],["enrutamiento",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entorno",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entre",{"_index":1075,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["enviado",{"_index":1207,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["enviando",{"_index":1213,"title":{},"body":{"components/ProfileComponent.html":{}}}],["enviar",{"_index":1211,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["environment",{"_index":1431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envía",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetpassComponent.html":{}}}],["envío",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["err",{"_index":1119,"title":{},"body":{"components/PayComponent.html":{}}}],["error",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["errores",{"_index":1340,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["es",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["espacio",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["especial",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["est",{"_index":370,"title":{},"body":{"components/ArticleComponent.html":{},"components/RecordComponent.html":{}}}],["establece",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["estado",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["este",{"_index":1328,"title":{},"body":{"components/RegisterComponent.html":{}}}],["estilo",{"_index":547,"title":{},"body":{"components/ArticleComponent.html":{}}}],["estática",{"_index":484,"title":{},"body":{"components/ArticleComponent.html":{}}}],["etc",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["event",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["event.target",{"_index":421,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["event.url",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["evento",{"_index":402,"title":{},"body":{"components/ArticleComponent.html":{}}}],["examn",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["examn.appspot.com",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["examn.firebaseapp.com",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1496,"title":{},"body":{"index.html":{}}}],["exitoso",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["exp2s6",{"_index":1465,"title":{},"body":{"index.html":{}}}],["expiración",{"_index":1127,"title":{},"body":{"components/PayComponent.html":{}}}],["expirydate",{"_index":1092,"title":{},"body":{"components/PayComponent.html":{}}}],["export",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["express",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["false",{"_index":447,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"miscellaneous/variables.html":{}}}],["falso",{"_index":377,"title":{},"body":{"components/ArticleComponent.html":{}}}],["favor",{"_index":245,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["fb",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["fecha",{"_index":240,"title":{},"body":{"components/AdminComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["fetching",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fetchusersfromfirestore",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["ffa726",{"_index":540,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ffe082",{"_index":542,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["figma",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{}}}],["figuarts",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["figuras",{"_index":482,"title":{},"body":{"components/ArticleComponent.html":{}}}],["figure",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["figurines",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1481,"title":{},"body":{"index.html":{}}}],["filter",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["filterproducts",{"_index":350,"title":{},"body":{"components/ArticleComponent.html":{}}}],["filters",{"_index":344,"title":{},"body":{"components/ArticleComponent.html":{}}}],["filtra",{"_index":387,"title":{},"body":{"components/ArticleComponent.html":{}}}],["filtro",{"_index":401,"title":{},"body":{"components/ArticleComponent.html":{}}}],["filtros",{"_index":390,"title":{},"body":{"components/ArticleComponent.html":{}}}],["finaliza",{"_index":1146,"title":{},"body":{"components/ProfileComponent.html":{}}}],["finalizeupdate",{"_index":1139,"title":{},"body":{"components/ProfileComponent.html":{}}}],["finalizeupdate(updateduser",{"_index":1143,"title":{},"body":{"components/ProfileComponent.html":{}}}],["firebase",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.ts",{"_index":998,"title":{},"body":{"classes/MockAuthService.html":{},"coverage.html":{}}}],["firebase.ts:11",{"_index":1000,"title":{},"body":{"classes/MockAuthService.html":{}}}],["firebase.ts:31",{"_index":1002,"title":{},"body":{"classes/MockAuthService.html":{}}}],["firebase.ts:37",{"_index":1003,"title":{},"body":{"classes/MockAuthService.html":{}}}],["firebase.ts:41",{"_index":1005,"title":{},"body":{"classes/MockAuthService.html":{}}}],["firebase.ts:5",{"_index":1001,"title":{},"body":{"classes/MockAuthService.html":{}}}],["firestore",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["firestoremock",{"_index":806,"title":{"classes/FirestoreMock.html":{}},"body":{"classes/FirestoreMock.html":{},"coverage.html":{}}}],["first",{"_index":1505,"title":{},"body":{"index.html":{}}}],["fit",{"_index":517,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["flex",{"_index":497,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["flex.justify",{"_index":575,"title":{},"body":{"components/ArticleComponent.html":{}}}],["fondo",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{}}}],["footer",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{}}}],["footer'},{'name",{"_index":267,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["footer.component.css",{"_index":819,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":817,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":266,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["force",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["form",{"_index":1086,"title":{},"body":{"components/PayComponent.html":{}}}],["form.value",{"_index":1094,"title":{},"body":{"components/PayComponent.html":{}}}],["formbuilder",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["formgroup",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["formsmodule",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["formulario",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["found",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["from(createuserwithemailandpassword(this.auth",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(getdoc(userdocref)).pipe",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(reauthenticatewithcredential(user",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(sendemailverification(user)).pipe(map",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(updatedoc(userdoc",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(updatepassword(user",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(verifybeforeupdateemail(user",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["fullname",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["function",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1461,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funko",{"_index":476,"title":{},"body":{"components/ArticleComponent.html":{}}}],["further",{"_index":1509,"title":{},"body":{"index.html":{}}}],["general",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["generate",{"_index":1484,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1467,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":721,"title":{},"body":{"components/CarComponent.html":{}}}],["gestión",{"_index":235,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["getauth",{"_index":1365,"title":{},"body":{"components/ResetpassComponent.html":{},"miscellaneous/variables.html":{}}}],["getdoc",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["getf",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["getfirestore",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getproducts",{"_index":591,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getting",{"_index":1463,"title":{"index.html":{}},"body":{}}],["getuserprofile",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["getuserprofile(uid",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["go",{"_index":1512,"title":{},"body":{"index.html":{}}}],["good",{"_index":477,"title":{},"body":{"components/ArticleComponent.html":{}}}],["gracias",{"_index":1117,"title":{},"body":{"components/PayComponent.html":{}}}],["group",{"_index":775,"title":{},"body":{"components/CarComponent.html":{}}}],["guarda",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"components/CarComponent.html":{}}}],["guardar",{"_index":250,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ha",{"_index":1206,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["hasbro",{"_index":480,"title":{},"body":{"components/ArticleComponent.html":{}}}],["hashibira",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{}}}],["hay",{"_index":1259,"title":{},"body":{"components/RecordComponent.html":{}}}],["height",{"_index":493,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["help",{"_index":1510,"title":{},"body":{"index.html":{}}}],["hero",{"_index":516,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["hidden",{"_index":418,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{}}}],["hidratación",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["historial",{"_index":750,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{}}}],["hobby",{"_index":475,"title":{},"body":{"components/ArticleComponent.html":{}}}],["home",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":269,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["home.component.css",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":268,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["horizontalmente",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["html",{"_index":254,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["htmlbuttonelement",{"_index":789,"title":{},"body":{"components/CarComponent.html":{}}}],["htmlinputelement",{"_index":422,"title":{},"body":{"components/ArticleComponent.html":{}}}],["http://localhost:4200",{"_index":1476,"title":{},"body":{"index.html":{}}}],["icon",{"_index":544,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["id",{"_index":602,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["identificador",{"_index":736,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["identifier",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{}}}],["image",{"_index":510,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["imagen",{"_index":553,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["imageurl",{"_index":1020,"title":{},"body":{"classes/MockAuthService.html":{},"interfaces/Product.html":{}}}],["img",{"_index":505,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["implementa",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"index.html":{}}}],["import",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["important",{"_index":581,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["importar",{"_index":1255,"title":{},"body":{"components/RecordComponent.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["inc",{"_index":821,"title":{},"body":{"components/FooterComponent.html":{}}}],["inch",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["incluir",{"_index":1243,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["incorrectos",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/ResetpassComponent.html":{}}}],["infinity",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["información",{"_index":384,"title":{},"body":{"components/ArticleComponent.html":{},"components/PayComponent.html":{}}}],["ingresa",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"components/PayComponent.html":{}}}],["ingrese",{"_index":246,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["inicia",{"_index":465,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["iniciado",{"_index":1188,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inicializa",{"_index":741,"title":{},"body":{"components/CarComponent.html":{}}}],["inicialización",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["inicialmente",{"_index":1354,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["iniciar",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inicio",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ResetpassComponent.html":{}}}],["initializeapp",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initializecart",{"_index":726,"title":{},"body":{"components/CarComponent.html":{}}}],["inject",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["inject(platform_id",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["injectable",{"_index":585,"title":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":586,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["innerhtml",{"_index":768,"title":{},"body":{"components/CarComponent.html":{}}}],["inozuke",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{}}}],["input.ng",{"_index":1334,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["instanceof",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["intente",{"_index":1121,"title":{},"body":{"components/PayComponent.html":{},"components/RegisterComponent.html":{}}}],["interface",{"_index":1130,"title":{"interfaces/Product.html":{},"interfaces/User.html":{}},"body":{"interfaces/Product.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":1131,"title":{},"body":{"interfaces/Product.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":1133,"title":{},"body":{"interfaces/Product.html":{},"interfaces/User.html":{}}}],["invalid.ng",{"_index":1335,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["inválido",{"_index":1193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isplatformbrowser",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["itadori",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["item",{"_index":776,"title":{},"body":{"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{}}}],["item.name",{"_index":778,"title":{},"body":{"components/CarComponent.html":{}}}],["item.price",{"_index":779,"title":{},"body":{"components/CarComponent.html":{}}}],["itemcontent",{"_index":777,"title":{},"body":{"components/CarComponent.html":{}}}],["itemelement",{"_index":771,"title":{},"body":{"components/CarComponent.html":{}}}],["items",{"_index":577,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["john",{"_index":1009,"title":{},"body":{"classes/MockAuthService.html":{}}}],["johndoe",{"_index":1011,"title":{},"body":{"classes/MockAuthService.html":{}}}],["johndoe@example.com",{"_index":1012,"title":{},"body":{"classes/MockAuthService.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":456,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["json.parse(userdata",{"_index":451,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["json.stringify(adminuser",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(loggedinuser",{"_index":455,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["json.stringify(this.loggedinuser",{"_index":1102,"title":{},"body":{"components/PayComponent.html":{}}}],["json.stringify(updateduser",{"_index":1233,"title":{},"body":{"components/ProfileComponent.html":{}}}],["json.stringify(userprofile",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["json.stringify(users",{"_index":460,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["jujutsu",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["justify",{"_index":533,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["kaisen",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["karma",{"_index":1498,"title":{},"body":{"index.html":{}}}],["kimetsu",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["knight",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":1147,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["left",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":253,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["legends",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["letra",{"_index":1172,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["lightning",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":774,"title":{},"body":{"components/CarComponent.html":{}}}],["lista",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{}}}],["lo",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["localstorage",{"_index":744,"title":{},"body":{"components/CarComponent.html":{},"components/NavbarComponent.html":{}}}],["localstorage.getitem('loggedinuser",{"_index":449,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["localstorage.removeitem('loggedinuser",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["localstorage.setitem('loggedinuser",{"_index":454,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["localstorage.setitem('users",{"_index":459,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["loggedinuser",{"_index":450,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["loggedinuser.cart",{"_index":452,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["loggedinuser.cart.push(product",{"_index":453,"title":{},"body":{"components/ArticleComponent.html":{}}}],["loggedinuser.email",{"_index":458,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["loggedinuser.username",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["login",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{}}}],["login'},{'name",{"_index":271,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["login(email",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["login.component.css",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":270,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logout",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["logueado",{"_index":1253,"title":{},"body":{"components/RecordComponent.html":{}}}],["loki",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{}}}],["los",{"_index":388,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["lógica",{"_index":800,"title":{},"body":{"components/CarComponent.html":{}}}],["mafex",{"_index":481,"title":{},"body":{"components/ArticleComponent.html":{},"components/HomeComponent.html":{}}}],["main",{"_index":1017,"title":{},"body":{"classes/MockAuthService.html":{}}}],["man",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{}}}],["mandalore",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["maneja",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["manejar",{"_index":590,"title":{},"body":{"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["manejo",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{}}}],["manipular",{"_index":735,"title":{},"body":{"components/CarComponent.html":{}}}],["mantener",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["map",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["map(docs",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["mapea",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{}}}],["maptouser",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{}}}],["maptouser(doc",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{}}}],["maqueta",{"_index":485,"title":{},"body":{"components/ArticleComponent.html":{}}}],["marcas",{"_index":473,"title":{},"body":{"components/ArticleComponent.html":{}}}],["margin",{"_index":502,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["marvel",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["matchesbrand",{"_index":434,"title":{},"body":{"components/ArticleComponent.html":{}}}],["matchesprice",{"_index":428,"title":{},"body":{"components/ArticleComponent.html":{}}}],["matchestype",{"_index":437,"title":{},"body":{"components/ArticleComponent.html":{}}}],["matching",{"_index":287,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maul",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["max",{"_index":558,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["mayúscula",{"_index":1173,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["md",{"_index":561,"title":{},"body":{"components/ArticleComponent.html":{}}}],["media",{"_index":557,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["medianas",{"_index":567,"title":{},"body":{"components/ArticleComponent.html":{}}}],["menos",{"_index":1171,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mensaje",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["menu",{"_index":582,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["messagingsenderid",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messagingsenderid\":\"956918261341",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["methods",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["mi",{"_index":803,"title":{},"body":{"components/CarComponent.html":{}}}],["mighty",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["min",{"_index":500,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["miscellaneous",{"_index":1460,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock.service.ts",{"_index":809,"title":{},"body":{"classes/FirestoreMock.html":{},"coverage.html":{}}}],["mock.service.ts:3",{"_index":810,"title":{},"body":{"classes/FirestoreMock.html":{}}}],["mock.service.ts:7",{"_index":812,"title":{},"body":{"classes/FirestoreMock.html":{}}}],["mockauth",{"_index":991,"title":{"classes/MockAuth.html":{}},"body":{"classes/MockAuth.html":{},"coverage.html":{}}}],["mockauthservice",{"_index":996,"title":{"classes/MockAuthService.html":{}},"body":{"classes/MockAuthService.html":{},"coverage.html":{}}}],["mockuser",{"_index":1008,"title":{},"body":{"classes/MockAuthService.html":{}}}],["modal",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{}}}],["models/user.model",{"_index":1393,"title":{},"body":{"injectables/UserService.html":{}}}],["modo",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["modules",{"_index":1517,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moon",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["more",{"_index":1511,"title":{},"body":{"index.html":{}}}],["moreinfo",{"_index":1023,"title":{},"body":{"classes/MockAuthService.html":{},"interfaces/Product.html":{}}}],["morphin",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["mostrar",{"_index":720,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["mostrarse",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["muestra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["muy",{"_index":573,"title":{},"body":{"components/ArticleComponent.html":{}}}],["más",{"_index":383,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["método",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["métodos",{"_index":994,"title":{},"body":{"classes/MockAuth.html":{}}}],["nacimiento",{"_index":241,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["naranja",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["nav",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":504,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":273,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["navbar.component.css",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":272,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["navega",{"_index":748,"title":{},"body":{"components/CarComponent.html":{},"components/ProfileComponent.html":{}}}],["navegación",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["navegador",{"_index":1250,"title":{},"body":{"components/RecordComponent.html":{}}}],["navigate",{"_index":1475,"title":{},"body":{"index.html":{}}}],["navigatetoadmin",{"_index":1140,"title":{},"body":{"components/ProfileComponent.html":{}}}],["navigationend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["ndice",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{}}}],["necesario",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["necesarios",{"_index":995,"title":{},"body":{"classes/MockAuth.html":{}}}],["need",{"_index":1504,"title":{},"body":{"index.html":{}}}],["nendoroid",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["new",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{},"components/PayComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newemail",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["newemail)).pipe(map",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["newpassword",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["newpassword)).pipe(map",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["next",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["ng",{"_index":1472,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":1084,"title":{},"body":{"components/PayComponent.html":{}}}],["ngoninit",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["noir",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{}}}],["nombre",{"_index":236,"title":{},"body":{"components/AdminComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["none",{"_index":580,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["nueva",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["nuevamente",{"_index":1122,"title":{},"body":{"components/PayComponent.html":{},"components/RegisterComponent.html":{}}}],["nuevas",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["nuevo",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["nuevos",{"_index":1267,"title":{},"body":{"components/RegisterComponent.html":{}}}],["null",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{}}}],["number:'1.0",{"_index":489,"title":{},"body":{"components/ArticleComponent.html":{}}}],["number:\\'1.0",{"_index":584,"title":{},"body":{"components/ArticleComponent.html":{}}}],["número",{"_index":1125,"title":{},"body":{"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["o",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["object",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["objeto",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":596,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["obtener",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["obtiene",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["oculta",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/ResetpassComponent.html":{}}}],["of(mockuser",{"_index":1031,"title":{},"body":{"classes/MockAuthService.html":{}}}],["of(null",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(undefined",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(userprofile",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["olvidaste",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["onhistory",{"_index":727,"title":{},"body":{"components/CarComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["onproceedpayment",{"_index":728,"title":{},"body":{"components/CarComponent.html":{}}}],["onsubmit",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["onsubmit(form",{"_index":1083,"title":{},"body":{"components/PayComponent.html":{}}}],["opcional",{"_index":1333,"title":{},"body":{"components/RegisterComponent.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["oscuro",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["otros",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["out",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["overflow",{"_index":515,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["overview",{"_index":1514,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1438,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pagar",{"_index":1129,"title":{},"body":{"components/PayComponent.html":{}}}],["page",{"_index":1516,"title":{},"body":{"index.html":{}}}],["pago",{"_index":752,"title":{},"body":{"components/CarComponent.html":{},"components/PayComponent.html":{}}}],["pantallas",{"_index":566,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["para",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["parade",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{}}}],["param",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["password",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["password).subscribe",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password.value",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{}}}],["password123",{"_index":1013,"title":{},"body":{"classes/MockAuthService.html":{}}}],["passwordmatchvalidator",{"_index":1271,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator(control",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmismatch",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pay",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/PayComponent.html":{}}}],["pay'},{'name",{"_index":275,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["pay.component.css",{"_index":1079,"title":{},"body":{"components/PayComponent.html":{}}}],["pay.component.html",{"_index":1080,"title":{},"body":{"components/PayComponent.html":{}}}],["paycomponent",{"_index":274,"title":{"components/PayComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["pendientes",{"_index":1149,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pequeñas",{"_index":571,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["perfil",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["personalizados",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{}}}],["pipe(filter((event",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["plataforma",{"_index":737,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["platform",{"_index":1501,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["platformid",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{}}}],["popup",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["por",{"_index":244,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["position",{"_index":512,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["power",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{}}}],["precio",{"_index":369,"title":{},"body":{"components/ArticleComponent.html":{}}}],["precios",{"_index":375,"title":{},"body":{"components/ArticleComponent.html":{}}}],["preventa",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["preventas",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["previous",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{}}}],["price",{"_index":374,"title":{},"body":{"components/ArticleComponent.html":{},"classes/MockAuthService.html":{},"interfaces/Product.html":{}}}],["pricerange",{"_index":433,"title":{},"body":{"components/ArticleComponent.html":{}}}],["primero",{"_index":1189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["principal",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{}}}],["proceder",{"_index":805,"title":{},"body":{"components/CarComponent.html":{},"components/PayComponent.html":{}}}],["proceso",{"_index":1078,"title":{},"body":{"components/PayComponent.html":{}}}],["product",{"_index":357,"title":{"interfaces/Product.html":{}},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["product.hidden",{"_index":440,"title":{},"body":{"components/ArticleComponent.html":{}}}],["product.model",{"_index":1383,"title":{},"body":{"interfaces/User.html":{}}}],["product.name",{"_index":487,"title":{},"body":{"components/ArticleComponent.html":{}}}],["product.price",{"_index":488,"title":{},"body":{"components/ArticleComponent.html":{}}}],["productcollection",{"_index":600,"title":{},"body":{"injectables/ArticleService.html":{}}}],["production",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producto",{"_index":360,"title":{},"body":{"components/ArticleComponent.html":{},"interfaces/Product.html":{}}}],["productos",{"_index":340,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"components/CarComponent.html":{},"components/HomeComponent.html":{}}}],["products",{"_index":345,"title":{},"body":{"components/ArticleComponent.html":{}}}],["profile",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":277,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["profile.component.css",{"_index":1136,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":1137,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":276,"title":{"components/ProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["profileform",{"_index":1138,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":1466,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projectid\":\"angular",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promesa",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["promise.all(updatetasks).then",{"_index":1220,"title":{},"body":{"components/ProfileComponent.html":{}}}],["promise.resolve",{"_index":815,"title":{},"body":{"classes/FirestoreMock.html":{},"classes/MockAuthService.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["proporciona",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proporción",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["provideauth",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":599,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providefirestore",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proyecto",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["pudo",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["puede",{"_index":1326,"title":{},"body":{"components/RegisterComponent.html":{}}}],["puedes",{"_index":799,"title":{},"body":{"components/CarComponent.html":{},"components/RegisterComponent.html":{}}}],["purchase.date",{"_index":1262,"title":{},"body":{"components/RecordComponent.html":{}}}],["purchase.name",{"_index":1260,"title":{},"body":{"components/RecordComponent.html":{}}}],["purchase.price",{"_index":1261,"title":{},"body":{"components/RecordComponent.html":{}}}],["purchasedate",{"_index":1096,"title":{},"body":{"components/PayComponent.html":{}}}],["purchasehistory",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["página",{"_index":749,"title":{},"body":{"components/CarComponent.html":{},"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["que",{"_index":554,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["quepa",{"_index":555,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["queries",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["range",{"_index":366,"title":{},"body":{"components/ArticleComponent.html":{}}}],["ranger",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{}}}],["rango",{"_index":372,"title":{},"body":{"components/ArticleComponent.html":{}}}],["reactiveformsmodule",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["reactivo",{"_index":1273,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["realizado",{"_index":1115,"title":{},"body":{"components/PayComponent.html":{}}}],["realizar",{"_index":1120,"title":{},"body":{"components/PayComponent.html":{}}}],["reautentica",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["reautenticación",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["reautenticando",{"_index":1217,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reautenticar",{"_index":1218,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reauthenticate",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["reauthenticate(password",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["reauthenticatewithcredential",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["record",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/RecordComponent.html":{}}}],["record'},{'name",{"_index":279,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["record.component.css",{"_index":1245,"title":{},"body":{"components/RecordComponent.html":{}}}],["record.component.html",{"_index":1246,"title":{},"body":{"components/RecordComponent.html":{}}}],["recordcomponent",{"_index":278,"title":{"components/RecordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["red",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{}}}],["redirigir",{"_index":1371,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["reduce((acc",{"_index":1103,"title":{},"body":{"components/PayComponent.html":{}}}],["reference",{"_index":1515,"title":{},"body":{"index.html":{}}}],["register",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/MockAuthService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":281,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["register(email",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["register.component.css",{"_index":1268,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1269,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":280,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1270,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registra",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrar",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrarse",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["registro",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["regístrate",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{}}}],["relative",{"_index":513,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["reload",{"_index":1479,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":734,"title":{},"body":{"components/CarComponent.html":{}}}],["renderer2",{"_index":732,"title":{},"body":{"components/CarComponent.html":{}}}],["renderizar",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{}}}],["renderusertable",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["repetir",{"_index":1327,"title":{},"body":{"components/RegisterComponent.html":{}}}],["representa",{"_index":1134,"title":{},"body":{"interfaces/Product.html":{},"interfaces/User.html":{}}}],["requerida",{"_index":1325,"title":{},"body":{"components/RegisterComponent.html":{}}}],["requerido",{"_index":1329,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetear",{"_index":1381,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["resetform",{"_index":1349,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["resetpass",{"_index":283,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["resetpass.component.css",{"_index":1347,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["resetpass.component.html",{"_index":1348,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["resetpasscomponent",{"_index":282,"title":{"components/ResetpassComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"coverage.html":{}}}],["responsive",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["responsivos",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["restablecer",{"_index":1346,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["restablecimiento",{"_index":1363,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["resuelve",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["result",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.user.uid",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["resultado",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":286,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumen",{"_index":804,"title":{},"body":{"components/CarComponent.html":{}}}],["return",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/FirestoreMock.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["returns",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":531,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["right",{"_index":507,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["rise",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["rojo",{"_index":1339,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["role",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["root",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":261,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["router",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["routermodule",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ResetpassComponent.html":{}}}],["routeroutlet",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1492,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":598,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/MockAuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["rápido",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["s.h",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["s.h.figuarts",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{}}}],["savecart",{"_index":729,"title":{},"body":{"components/CarComponent.html":{}}}],["saveuserprofile",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["saveuserprofile(user",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"classes/MockAuthService.html":{}}}],["scaffolding",{"_index":1483,"title":{},"body":{"index.html":{}}}],["se",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ResetpassComponent.html":{}}}],["sea",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["section",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetpassComponent.html":{}}}],["según",{"_index":389,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["selecciona",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{}}}],["seleccionado",{"_index":396,"title":{},"body":{"components/ArticleComponent.html":{}}}],["seleccionados",{"_index":391,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selección",{"_index":403,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selectedproduct",{"_index":346,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selectedproduct?.moreinfo",{"_index":491,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selectedproduct?.name",{"_index":490,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selectedproduct?.price",{"_index":492,"title":{},"body":{"components/ArticleComponent.html":{}}}],["selecteduserindex",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["sendemailverification",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordresetemail",{"_index":999,"title":{},"body":{"classes/MockAuthService.html":{},"components/ResetpassComponent.html":{}}}],["sendpasswordresetemail(auth",{"_index":1004,"title":{},"body":{"classes/MockAuthService.html":{},"components/ResetpassComponent.html":{}}}],["ser",{"_index":1324,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["series",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":1473,"title":{},"body":{"index.html":{}}}],["server",{"_index":739,"title":{},"body":{"components/CarComponent.html":{},"components/RecordComponent.html":{},"components/ResetpassComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.service",{"_index":410,"title":{},"body":{"components/ArticleComponent.html":{}}}],["service.service.ts",{"_index":588,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":593,"title":{},"body":{"injectables/ArticleService.html":{}}}],["service.service.ts:19",{"_index":594,"title":{},"body":{"injectables/ArticleService.html":{}}}],["servicio",{"_index":589,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["sesión",{"_index":466,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["setdoc",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["setdoc(userdoc",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":232,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["setuserstatus",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["setuserstatus(user",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["shadow",{"_index":526,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["shared/components/footer/footer.component",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/navbar/navbar.component",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["shinegreymon",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{}}}],["show",{"_index":1360,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["showalert",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["showalert(message",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["showfooter",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["showmoreinfo",{"_index":1022,"title":{},"body":{"classes/MockAuthService.html":{},"interfaces/Product.html":{}}}],["si",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["signinwithemailandpassword",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["simula",{"_index":993,"title":{},"body":{"classes/MockAuth.html":{}}}],["smile",{"_index":478,"title":{},"body":{"components/ArticleComponent.html":{}}}],["snapshot.data",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["snapshot.id",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["sobre",{"_index":385,"title":{},"body":{"components/ArticleComponent.html":{}}}],["sold",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"classes/FirestoreMock.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuth.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":534,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:23",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1408,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/product.model.ts",{"_index":1132,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":1382,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/article",{"_index":587,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:109",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:119",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:133",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:146",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:15",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:160",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:174",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:27",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:48",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:58",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:67",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:77",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1384,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:12",{"_index":1391,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:13",{"_index":1389,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1387,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/admin/admin.component.ts",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/features/admin/admin.component.ts:107",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:123",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:151",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:159",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:20",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:21",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:22",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:23",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:24",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:41",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:52",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:67",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:83",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/admin/admin.component.ts:91",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/features/article/article.component.ts",{"_index":336,"title":{},"body":{"components/ArticleComponent.html":{},"coverage.html":{}}}],["src/app/features/article/article.component.ts:113",{"_index":358,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:137",{"_index":393,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:20",{"_index":406,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:21",{"_index":407,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:22",{"_index":405,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:27",{"_index":355,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:31",{"_index":392,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:43",{"_index":395,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:51",{"_index":380,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:62",{"_index":398,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:78",{"_index":386,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/article/article.component.ts:94",{"_index":367,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/features/car/car.component.ts",{"_index":718,"title":{},"body":{"components/CarComponent.html":{},"coverage.html":{}}}],["src/app/features/car/car.component.ts:116",{"_index":753,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:134",{"_index":751,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:142",{"_index":747,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:20",{"_index":755,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:25",{"_index":757,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:30",{"_index":733,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:44",{"_index":745,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:54",{"_index":740,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/car/car.component.ts:68",{"_index":754,"title":{},"body":{"components/CarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts:123",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:22",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:23",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:24",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:34",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:41",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:52",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/pay/pay.component.ts",{"_index":1077,"title":{},"body":{"components/PayComponent.html":{},"coverage.html":{}}}],["src/app/features/pay/pay.component.ts:118",{"_index":1087,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/pay/pay.component.ts:22",{"_index":1089,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/pay/pay.component.ts:23",{"_index":1088,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/pay/pay.component.ts:24",{"_index":1081,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/pay/pay.component.ts:28",{"_index":1082,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/pay/pay.component.ts:46",{"_index":1085,"title":{},"body":{"components/PayComponent.html":{}}}],["src/app/features/profile/profile.component.ts",{"_index":1135,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile.component.ts:149",{"_index":1145,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:164",{"_index":1158,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:197",{"_index":1156,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:211",{"_index":1150,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:219",{"_index":1151,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:22",{"_index":1161,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:228",{"_index":1154,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:23",{"_index":1160,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:239",{"_index":1162,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:24",{"_index":1159,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:25",{"_index":1142,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:52",{"_index":1152,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:83",{"_index":1153,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/record/record.component.ts",{"_index":1244,"title":{},"body":{"components/RecordComponent.html":{},"coverage.html":{}}}],["src/app/features/record/record.component.ts:20",{"_index":1251,"title":{},"body":{"components/RecordComponent.html":{}}}],["src/app/features/record/record.component.ts:25",{"_index":1248,"title":{},"body":{"components/RecordComponent.html":{}}}],["src/app/features/record/record.component.ts:41",{"_index":1249,"title":{},"body":{"components/RecordComponent.html":{}}}],["src/app/features/register/register.component.ts",{"_index":1265,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts:100",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:144",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:23",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:28",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:33",{"_index":1272,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:65",{"_index":1274,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:72",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:89",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts",{"_index":1345,"title":{},"body":{"components/ResetpassComponent.html":{},"coverage.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:108",{"_index":1357,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:119",{"_index":1364,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:21",{"_index":1362,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:26",{"_index":1361,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:31",{"_index":1351,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:53",{"_index":1352,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:62",{"_index":1355,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:69",{"_index":1356,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/features/resetpass/resetpass.component.ts:88",{"_index":1359,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["src/app/shared/components/footer/footer.component.ts",{"_index":816,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:18",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:19",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:29",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:38",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:61",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/environments/environment.ts",{"_index":1430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/firestore",{"_index":808,"title":{},"body":{"classes/FirestoreMock.html":{},"coverage.html":{}}}],["src/testing/mock",{"_index":997,"title":{},"body":{"classes/MockAuthService.html":{},"coverage.html":{}}}],["src/testing/mockauth.ts",{"_index":992,"title":{},"body":{"classes/MockAuth.html":{},"coverage.html":{}}}],["st",{"_index":1018,"title":{},"body":{"classes/MockAuthService.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["standard",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["star",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":1464,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["stock",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["storagebucket",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storagebucket\":\"angular",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1489,"title":{},"body":{"index.html":{}}}],["string",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["styleurl",{"_index":818,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["su",{"_index":247,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["submitbutton",{"_index":1374,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["submitbutton.textcontent",{"_index":1378,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["subscribe((data",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{}}}],["subscribe((event",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["switch(range",{"_index":441,"title":{},"body":{"components/ArticleComponent.html":{}}}],["switchmap",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["switchmap((snapshot",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["tabla",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{}}}],["table",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["tamers",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["tareas",{"_index":1148,"title":{},"body":{"components/ProfileComponent.html":{}}}],["target",{"_index":793,"title":{},"body":{"components/CarComponent.html":{}}}],["target.getattribute('data",{"_index":794,"title":{},"body":{"components/CarComponent.html":{}}}],["tarjeta",{"_index":1126,"title":{},"body":{"components/PayComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["tener",{"_index":1240,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["test",{"_index":1495,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1507,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1494,"title":{},"body":{"index.html":{}}}],["testuid",{"_index":1007,"title":{},"body":{"classes/MockAuthService.html":{}}}],["text",{"_index":546,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["textcontent",{"_index":783,"title":{},"body":{"components/CarComponent.html":{}}}],["thanos",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.alertmessage",{"_index":230,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.alerttype",{"_index":231,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.articleservice.getproducts().subscribe((products",{"_index":412,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.auth.currentuser",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getuserprofile(result.user.uid).subscribe",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getuserprofile(uid).subscribe(userprofile",{"_index":1256,"title":{},"body":{"components/RecordComponent.html":{}}}],["this.authservice.getuserprofile(user.uid).subscribe(userprofile",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(email",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.reauthenticate(currentpassword).subscribe",{"_index":1214,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.register(email",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.saveuserprofile(newuser).then",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.sendemailverification().subscribe",{"_index":1204,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.updateemail(newemail).subscribe",{"_index":1203,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.updateuserprofile(this.loggedinuser).subscribe",{"_index":1112,"title":{},"body":{"components/PayComponent.html":{}}}],["this.authservice.updateuserprofile(updateduser).subscribe",{"_index":1234,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.cart",{"_index":761,"title":{},"body":{"components/CarComponent.html":{}}}],["this.cart.foreach((item",{"_index":770,"title":{},"body":{"components/CarComponent.html":{}}}],["this.cart.length.tostring",{"_index":786,"title":{},"body":{"components/CarComponent.html":{}}}],["this.cart.splice(parseint(index",{"_index":795,"title":{},"body":{"components/CarComponent.html":{}}}],["this.cartcount",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.carttotal",{"_index":769,"title":{},"body":{"components/CarComponent.html":{}}}],["this.carttotal.tostring",{"_index":784,"title":{},"body":{"components/CarComponent.html":{}}}],["this.cdr.detectchanges",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.checkpricerange(product.price",{"_index":432,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.checkuserstatus",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.edituserform",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.edituserform.controls",{"_index":234,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.edituserform.invalid",{"_index":218,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.edituserform.markallastouched",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.edituserform.patchvalue",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.edituserform.value",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.fb.group",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.fetchusersfromfirestore",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.filterproducts",{"_index":415,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.brand.includes(product.brand",{"_index":436,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.brand.length",{"_index":435,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.price.length",{"_index":429,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.price.some((pricerange",{"_index":431,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.type.includes(product.type",{"_index":439,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters.type.length",{"_index":438,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters[type].indexof(value",{"_index":425,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters[type].push(value",{"_index":424,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.filters[type].splice(index",{"_index":426,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.finalizeupdate(updateduser",{"_index":1216,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.initializecart",{"_index":759,"title":{},"body":{"components/CarComponent.html":{}}}],["this.loggedinuser",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["this.loggedinuser!.email",{"_index":1107,"title":{},"body":{"components/PayComponent.html":{}}}],["this.loggedinuser!.purchasehistory.push",{"_index":1100,"title":{},"body":{"components/PayComponent.html":{}}}],["this.loggedinuser.cart",{"_index":1095,"title":{},"body":{"components/PayComponent.html":{}}}],["this.loggedinuser.purchasehistory",{"_index":1098,"title":{},"body":{"components/PayComponent.html":{}}}],["this.loggedinuser.uid",{"_index":1110,"title":{},"body":{"components/PayComponent.html":{}}}],["this.loggedinuser?.address",{"_index":1182,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.birthdate",{"_index":1181,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.email",{"_index":1180,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.fullname",{"_index":1178,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.purchasehistory",{"_index":1258,"title":{},"body":{"components/RecordComponent.html":{}}}],["this.loggedinuser?.role",{"_index":1183,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.uid",{"_index":1230,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggedinuser?.username",{"_index":1179,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loginform",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":930,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markallastouched",{"_index":931,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.adminmode",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.email",{"_index":932,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":933,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":1209,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.maptouser(doc",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.products",{"_index":413,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.products.foreach(product",{"_index":427,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.profileform",{"_index":1164,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.controls",{"_index":1195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.errors",{"_index":1194,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('address')?.value",{"_index":1202,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('birthdate')?.value",{"_index":1201,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('currentpassword')?.value",{"_index":1197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('email')?.value",{"_index":1196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('fullname')?.value",{"_index":1199,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('newpassword')?.value",{"_index":1198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('username')?.value",{"_index":1200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.invalid",{"_index":1190,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.markallastouched",{"_index":1191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.patchvalue",{"_index":1177,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.purchasehistory",{"_index":1257,"title":{},"body":{"components/RecordComponent.html":{}}}],["this.registerform",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.markallastouched",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.address",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.birthdate",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.confirmpassword",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.email",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.fullname",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.password",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value.username",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderer.addclass(itemelement",{"_index":773,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.appendchild(cartitems",{"_index":781,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.createelement('div",{"_index":772,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.listen(button",{"_index":791,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.selectrootelement('#cart",{"_index":765,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.setproperty(cartcount",{"_index":785,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.setproperty(cartitems",{"_index":767,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.setproperty(carttotal",{"_index":782,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderer.setproperty(itemelement",{"_index":780,"title":{},"body":{"components/CarComponent.html":{}}}],["this.renderusertable",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetform",{"_index":1366,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["this.resetform.controls",{"_index":1380,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["this.resetform.get('email')?.value",{"_index":1369,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["this.router.events",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/admin",{"_index":1239,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/article",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":467,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.router.navigate(['/pay",{"_index":797,"title":{},"body":{"components/CarComponent.html":{}}}],["this.router.navigate(['/record",{"_index":802,"title":{},"body":{"components/CarComponent.html":{},"components/PayComponent.html":{}}}],["this.savecart",{"_index":796,"title":{},"body":{"components/CarComponent.html":{}}}],["this.selectedproduct",{"_index":416,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.selecteduserindex",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.sendpasswordresetemail",{"_index":1368,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["this.showalert(\"error",{"_index":1226,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.showalert(\"no",{"_index":1187,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showalert(\"perfil",{"_index":1237,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showalert(\"registro",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.showalert('correo",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showalert('error",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.showalert('inicio",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showalert('no",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showalert('pago",{"_index":1114,"title":{},"body":{"components/PayComponent.html":{}}}],["this.showalert('por",{"_index":1090,"title":{},"body":{"components/PayComponent.html":{}}}],["this.showalert('producto",{"_index":462,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.showalert('se",{"_index":1205,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetpassComponent.html":{}}}],["this.showalert('usuario",{"_index":210,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.showfooter",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["this.togglepasswordfields(false",{"_index":1367,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["this.updatecart",{"_index":760,"title":{},"body":{"components/CarComponent.html":{}}}],["this.updatefirestoreemail(this.loggedinuser!.uid",{"_index":1212,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateuserprofile(updateduser",{"_index":1223,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.users",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.users.splice(index",{"_index":208,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.users[index",{"_index":197,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.users[this.selecteduserindex",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.setuserstatus(adminuser",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.setuserstatus(loggedinuser",{"_index":461,"title":{},"body":{"components/ArticleComponent.html":{}}}],["this.userservice.setuserstatus(null",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.setuserstatus(this.loggedinuser",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{},"components/PayComponent.html":{}}}],["this.userservice.setuserstatus(updateduser",{"_index":1236,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.setuserstatus(user",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.setuserstatus(userprofile",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.userstatus$.subscribe(user",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userstatussubject.asobservable",{"_index":1388,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userstatussubject.next(user",{"_index":1394,"title":{},"body":{"injectables/UserService.html":{}}}],["thor",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["tipo",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["title",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["todos",{"_index":1123,"title":{},"body":{"components/PayComponent.html":{}}}],["togglemoreinfo",{"_index":351,"title":{},"body":{"components/ArticleComponent.html":{}}}],["togglemoreinfo(product",{"_index":394,"title":{},"body":{"components/ArticleComponent.html":{}}}],["togglepasswordfields",{"_index":1350,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["togglepasswordfields(show",{"_index":1358,"title":{},"body":{"components/ResetpassComponent.html":{}}}],["toggler",{"_index":543,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["top",{"_index":583,"title":{},"body":{"components/ArticleComponent.html":{}}}],["total",{"_index":758,"title":{},"body":{"components/CarComponent.html":{}}}],["touched",{"_index":1336,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["transform",{"_index":522,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["transition",{"_index":521,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["translatey",{"_index":528,"title":{},"body":{"components/ArticleComponent.html":{},"components/NavbarComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["tslib",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":763,"title":{},"body":{"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"interfaces/Product.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/ResetpassComponent.html":{}}}],["uid",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["un",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["una",{"_index":595,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["unit",{"_index":1493,"title":{},"body":{"index.html":{}}}],["update",{"_index":813,"title":{},"body":{"classes/FirestoreMock.html":{}}}],["updatecart",{"_index":730,"title":{},"body":{"components/CarComponent.html":{}}}],["updatedoc",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["updatedoc(userdoc",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["updateduser",{"_index":220,"title":{},"body":{"components/AdminComponent.html":{},"components/ProfileComponent.html":{}}}],["updateemail",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateemail(newemail",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatefilters",{"_index":352,"title":{},"body":{"components/ArticleComponent.html":{}}}],["updatefilters(type",{"_index":397,"title":{},"body":{"components/ArticleComponent.html":{}}}],["updatefirestoreemail",{"_index":1141,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatefirestoreemail(uid",{"_index":1155,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepassword",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatepassword(newpassword",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatetasks",{"_index":1144,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatetasks.push(this.authservice.updatepassword(newpassword).topromise",{"_index":1215,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateuserprofile",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["updateuserprofile(updateduser",{"_index":1157,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateuserprofile(user",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserprofileinfirestore",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserprofileinfirestore(user",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["url('data:image/svg+xml;utf8",{"_index":545,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["url1",{"_index":1021,"title":{},"body":{"classes/MockAuthService.html":{}}}],["url2",{"_index":1029,"title":{},"body":{"classes/MockAuthService.html":{}}}],["use",{"_index":1485,"title":{},"body":{"index.html":{}}}],["user",{"_index":91,"title":{"interfaces/User.html":{}},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.address",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{}}}],["user.birthdate",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{}}}],["user.cart.length",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["user.email",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{}}}],["user.fullname",{"_index":199,"title":{},"body":{"components/AdminComponent.html":{}}}],["user.service",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.uid",{"_index":1229,"title":{},"body":{"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["user.username",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{}}}],["usercredential",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercredential.user.uid",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userdata",{"_index":448,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{}}}],["userdoc",{"_index":204,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["userdocref",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["userindex",{"_index":1227,"title":{},"body":{"components/ProfileComponent.html":{}}}],["username",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"classes/MockAuthService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["userprofile",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RecordComponent.html":{}}}],["users",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{}}}],["users.findindex(user",{"_index":1228,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users.map((user",{"_index":457,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["users.map(user",{"_index":1106,"title":{},"body":{"components/PayComponent.html":{}}}],["users.push(updateduser",{"_index":1232,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users/${uid",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["users/${updateduser.uid",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{}}}],["users/${user.uid",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["users[userindex",{"_index":1231,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userscollection",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{}}}],["userservice",{"_index":354,"title":{"injectables/UserService.html":{}},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstatus",{"_index":1385,"title":{},"body":{"injectables/UserService.html":{}}}],["userstatussubject",{"_index":1386,"title":{},"body":{"injectables/UserService.html":{}}}],["usuario",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["usuarios",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["vaciar",{"_index":1101,"title":{},"body":{"components/PayComponent.html":{}}}],["valid.ng",{"_index":1341,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["validador",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validar",{"_index":1108,"title":{},"body":{"components/PayComponent.html":{}}}],["validationerrors",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["validators.email",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["validators.maxlength(18",{"_index":1168,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":1167,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern",{"_index":1175,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/(?=.*[a",{"_index":1169,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/(?=.*\\d",{"_index":1174,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["validos",{"_index":1344,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["valor",{"_index":400,"title":{},"body":{"components/ArticleComponent.html":{}}}],["value",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["valuechanges",{"_index":811,"title":{},"body":{"classes/FirestoreMock.html":{}}}],["var",{"_index":257,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/CarComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["variable",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1521,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":762,"title":{},"body":{"components/CarComponent.html":{},"components/HomeComponent.html":{}}}],["verdadero",{"_index":376,"title":{},"body":{"components/ArticleComponent.html":{}}}],["verde",{"_index":1343,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["verifica",{"_index":368,"title":{},"body":{"components/ArticleComponent.html":{},"components/ProfileComponent.html":{}}}],["verificación",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["verifybeforeupdateemail",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1470,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1497,"title":{},"body":{"index.html":{}}}],["vista",{"_index":382,"title":{},"body":{"components/ArticleComponent.html":{},"components/CarComponent.html":{}}}],["visualización",{"_index":337,"title":{},"body":{"components/ArticleComponent.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["válida",{"_index":1128,"title":{},"body":{"components/PayComponent.html":{}}}],["válido",{"_index":248,"title":{},"body":{"components/AdminComponent.html":{},"components/LoginComponent.html":{},"components/PayComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/ResetpassComponent.html":{}}}],["war",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["wars",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["width",{"_index":509,"title":{},"body":{"components/ArticleComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["window.location.reload",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["x",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["xito",{"_index":1116,"title":{},"body":{"components/PayComponent.html":{}}}],["y",{"_index":338,"title":{},"body":{"components/ArticleComponent.html":{},"injectables/AuthService.html":{},"components/CarComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RecordComponent.html":{},"components/RegisterComponent.html":{}}}],["yaiba",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["york",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["yuji",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":1170,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/admin/admin.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la administración de usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                editUserForm\n                            \n                            \n                                selectedUserIndex\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                fetchUsersFromFirestore\n                            \n                            \n                                mapToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                renderUserTable\n                            \n                            \n                                showAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, platformId: Object, firestore: Firestore, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Índice del usuario en la lista.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Selecciona un usuario para editar.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Índice del usuario en la lista.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUsersFromFirestore\n                        \n                    \n                \n            \n            \n                \nfetchUsersFromFirestore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de usuarios desde Firestore.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapToUser\n                        \n                    \n                \n            \n            \n                \nmapToUser(doc: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Mapea un documento de Firestore a un objeto User.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Documento de Firestore.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                Un objeto User.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de edición de usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderUserTable\n                        \n                    \n                \n            \n            \n                \nrenderUserTable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/admin/admin.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin/admin.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin/admin.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin/admin.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin/admin.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/admin/admin.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/admin/admin.component.ts:159\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { User } from '../../core/models/user.model';\nimport { Firestore, collection, collectionData, deleteDoc, doc, updateDoc } from '@angular/fire/firestore';\nimport { AuthService } from '../../core/services/auth.service';\nimport { map } from 'rxjs/operators';\n\n/**\n * Componente para la administración de usuarios.\n */\n@Component({\n  selector: 'app-admin',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  users: User[] = [];\n  selectedUserIndex: number | null = null;\n  editUserForm: FormGroup;\n  alertMessage: string = '';\n  alertType: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private firestore: Firestore,\n    private authService: AuthService\n  ) {\n    this.editUserForm = this.fb.group({\n      fullName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: [{value: '', disabled: true}, [Validators.required, Validators.email]],\n      birthdate: ['', Validators.required],\n      address: ['']\n    });\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.fetchUsersFromFirestore();\n    } else {\n      console.warn('localStorage is not available');\n    }\n  }\n\n  /**\n   * Obtiene la lista de usuarios desde Firestore.\n   */\n  fetchUsersFromFirestore() {\n    const usersCollection = collection(this.firestore, 'users');\n    collectionData(usersCollection, { idField: 'uid' }).pipe(\n      map(docs => docs.map(doc => this.mapToUser(doc)))\n    ).subscribe((data: User[]) => {\n      this.users = data;\n      this.renderUserTable();\n    });\n  }\n\n  /**\n   * Mapea un documento de Firestore a un objeto User.\n   * @param doc Documento de Firestore.\n   * @returns Un objeto User.\n   */\n  mapToUser(doc: any): User {\n    return {\n      uid: doc.uid,\n      fullName: doc.fullName,\n      username: doc.username,\n      email: doc.email,\n      password: doc.password,\n      confirmPassword: doc.confirmPassword,\n      birthdate: doc.birthdate,\n      address: doc.address,\n      role: doc.role,\n      purchaseHistory: doc.purchaseHistory || [],\n      cart: doc.cart || []\n    } as User;\n  }\n\n  renderUserTable() {\n    // Implementa el código para renderizar la tabla de usuarios si es necesario\n  }\n\n  /**\n   * Selecciona un usuario para editar.\n   * @param index Índice del usuario en la lista.\n   */\n  editUser(index: number) {\n    this.selectedUserIndex = index;\n    const user = this.users[index];\n    this.editUserForm.patchValue({\n      fullName: user.fullName,\n      username: user.username,\n      email: user.email,\n      birthdate: user.birthdate,\n      address: user.address\n    });\n  }\n\n  /**\n   * Elimina un usuario.\n   * @param index Índice del usuario en la lista.\n   */\n  deleteUser(index: number) {\n    const user = this.users[index];\n    const userDoc = doc(this.firestore, `users/${user.uid}`);\n    deleteDoc(userDoc).then(() => {\n      this.users.splice(index, 1);\n      this.showAlert('Usuario eliminado correctamente.', 'danger');\n      this.renderUserTable();\n    }).catch((error: any) => {\n      console.error('Error eliminando el usuario:', error);\n      this.showAlert('Error eliminando el usuario.', 'danger');\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario de edición de usuario.\n   */\n  onSubmit() {\n    if (this.editUserForm.invalid) {\n      this.editUserForm.markAllAsTouched();\n      return;\n    }\n\n    const updatedUser = {\n      ...this.users[this.selectedUserIndex!],\n      ...this.editUserForm.value\n    };\n\n    const userDoc = doc(this.firestore, `users/${updatedUser.uid}`);\n    updateDoc(userDoc, { ...updatedUser }).then(() => {\n      this.users[this.selectedUserIndex!] = updatedUser;\n      this.showAlert('Usuario actualizado correctamente.', 'success');\n      this.renderUserTable();\n      document.getElementById('editUserModal')?.click(); // Cerrar el modal\n    }).catch((error: any) => {\n      console.error('Error actualizando el usuario:', error);\n      this.showAlert('Error actualizando el usuario.', 'danger');\n    });\n  }\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message El mensaje de la alerta.\n   * @param type El tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n\n  get f() {\n    return this.editUserForm.controls;\n  }\n}\n\n    \n\n    \n        \n\n  Gestión de Usuarios\n  \n    {{alertMessage}}\n    \n  \n  \n    \n      \n        Nombre Completo\n        Nombre de Usuario\n        Correo Electrónico\n        Fecha de Nacimiento\n        Acciones\n      \n    \n    \n      \n        {{ user.fullName }}\n        {{ user.username }}\n        {{ user.email }}\n        {{ user.birthdate }}\n        \n          Editar\n          Eliminar\n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Editar Usuario\n        \n      \n      \n        \n          \n          \n            Nombre Completo\n            \n            Por favor, ingrese su nombre completo.\n          \n          \n            Nombre de Usuario\n            \n            Por favor, ingrese un nombre de usuario.\n          \n          \n            Correo Electrónico\n            \n            Por favor, ingrese un correo electrónico válido.\n          \n          \n            Fecha de Nacimiento\n            \n            Por favor, ingrese su fecha de nacimiento.\n          \n          \n            Dirección\n            \n          \n          \n            Guardar Cambios\n            Cancelar\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Gestión de Usuarios      {{alertMessage}}                          Nombre Completo        Nombre de Usuario        Correo Electrónico        Fecha de Nacimiento        Acciones                            {{ user.fullName }}        {{ user.username }}        {{ user.email }}        {{ user.birthdate }}                  Editar          Eliminar                                        Editar Usuario                                                            Nombre Completo                        Por favor, ingrese su nombre completo.                                Nombre de Usuario                        Por favor, ingrese un nombre de usuario.                                Correo Electrónico                        Por favor, ingrese un correo electrónico válido.                                Fecha de Nacimiento                        Por favor, ingrese su fecha de nacimiento.                                Dirección                                            Guardar Cambios            Cancelar                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showFooter\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\nMuestra u oculta el footer basado en la ruta actual.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showFooter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Indica si el footer debe mostrarse.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'proyecto'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n            \n                \n                    Título de la aplicación.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, Event } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\nimport { FooterComponent } from './shared/components/footer/footer.component';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Componente principal de la aplicación.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  /**\n   * Título de la aplicación.\n   */\n  title = 'proyecto';\n\n  /**\n   * Indica si el footer debe mostrarse.\n   */\n  showFooter: boolean = true;\n\n  /**\n   * Constructor del componente.\n   * @param router Router para la navegación.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Método de inicialización del componente.\n   * Muestra u oculta el footer basado en la ruta actual.\n   */\n  ngOnInit() {\n    this.router.events\n      .pipe(filter((event: Event): event is NavigationEnd => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.showFooter = event.url !== '/Login' && event.url !== '/Register' && event.url !== '/ResetPass' && event.url !== '/Car' && event.url !== '/Profile' && event.url !== '/Admin' && event.url !== '/Pay' && event.url !== '/Record';\n      });\n  }\n}\n\n    \n\n    \n          \n  \n  \n  \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleComponent.html":{"url":"components/ArticleComponent.html","title":"component - ArticleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArticleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/article/article.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la visualización y gestión de artículos (productos).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./article.component.css\n            \n\n\n\n            \n                templateUrl\n                ./article.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                filters\n                            \n                            \n                                products\n                            \n                            \n                                selectedProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkPriceRange\n                            \n                            \n                                closeMoreInfo\n                            \n                            \n                                filterProducts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAlert\n                            \n                            \n                                toggleMoreInfo\n                            \n                            \n                                updateFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, articleService: ArticleService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/article/article.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Agrega un producto al carrito de compras del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El producto a agregar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPriceRange\n                        \n                    \n                \n            \n            \n                \ncheckPriceRange(price: number, range: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Verifica si el precio de un producto está dentro de un rango determinado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                price\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El precio del producto.\n\n                                            \n                                        \n                                        \n                                                range\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El rango de precios.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Verdadero si el precio está dentro del rango, falso en caso contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeMoreInfo\n                        \n                    \n                \n            \n            \n                \ncloseMoreInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Cierra la vista de más información sobre el producto.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProducts\n                        \n                    \n                \n            \n            \n                \nfilterProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Filtra los productos según los filtros seleccionados.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El mensaje de la alerta.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMoreInfo\n                        \n                    \n                \n            \n            \n                \ntoggleMoreInfo(product: Product)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Muestra más información sobre un producto.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            Product\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El producto seleccionado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilters\n                        \n                    \n                \n            \n            \n                \nupdateFilters(type: string, value: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/article/article.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Actualiza los filtros de productos según el tipo y valor seleccionados.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El tipo de filtro.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El valor del filtro.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El evento de selección.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/article.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    price: [],\n    brand: [],\n    type: []\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/article.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/article.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProduct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/article/article.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Product } from '../../core/models/product.model';\nimport { User } from '../../core/models/user.model';\nimport { ArticleService } from '../../core/services/article-service.service';\nimport { UserService } from '../../core/services/user.service';\n\n/**\n * Componente para la visualización y gestión de artículos (productos).\n */\n@Component({\n  selector: 'app-article',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css']\n})\nexport class ArticleComponent implements OnInit {\n  products: Product[] = [];\n  selectedProduct: Product | null = null;\n  filters: any = {\n    price: [],\n    brand: [],\n    type: []\n  };\n  alertMessage: string = '';\n\n  constructor(private router: Router, private articleService: ArticleService, private userService: UserService) {}\n\n  ngOnInit() {\n    this.articleService.getProducts().subscribe((products: Product[]) => {\n      this.products = products;\n      console.log(this.products);\n      this.filterProducts();\n    });\n  }\n\n  /**\n   * Muestra más información sobre un producto.\n   * @param product El producto seleccionado.\n   */\n  toggleMoreInfo(product: Product) {\n    this.selectedProduct = product;\n    document.body.style.overflow = 'hidden';\n  }\n\n  /**\n   * Cierra la vista de más información sobre el producto.\n   */\n  closeMoreInfo() {\n    this.selectedProduct = null;\n    document.body.style.overflow = 'auto';\n  }\n\n  /**\n   * Actualiza los filtros de productos según el tipo y valor seleccionados.\n   * @param type El tipo de filtro.\n   * @param value El valor del filtro.\n   * @param event El evento de selección.\n   */\n  updateFilters(type: string, value: string, event: Event) {\n    const checkbox = event.target as HTMLInputElement;\n    if (checkbox.checked) {\n      this.filters[type].push(value);\n    } else {\n      const index = this.filters[type].indexOf(value);\n      if (index > -1) {\n        this.filters[type].splice(index, 1);\n      }\n    }\n    this.filterProducts();\n  }\n\n  /**\n   * Filtra los productos según los filtros seleccionados.\n   */\n  filterProducts() {\n    this.products.forEach(product => {\n      const matchesPrice = this.filters.price.length === 0 || this.filters.price.some((priceRange: string) => this.checkPriceRange(product.price, priceRange));\n      const matchesBrand = this.filters.brand.length === 0 || this.filters.brand.includes(product.brand);\n      const matchesType = this.filters.type.length === 0 || this.filters.type.includes(product.type);\n\n      product.hidden = !(matchesPrice && matchesBrand && matchesType);\n    });\n  }\n\n  /**\n   * Verifica si el precio de un producto está dentro de un rango determinado.\n   * @param price El precio del producto.\n   * @param range El rango de precios.\n   * @returns Verdadero si el precio está dentro del rango, falso en caso contrario.\n   */\n  checkPriceRange(price: number, range: string): boolean {\n    switch(range) {\n      case '$0 - $9.990':\n        return price >= 0 && price = 10000 && price = 50000 && price = 100000;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Agrega un producto al carrito de compras del usuario.\n   * @param product El producto a agregar.\n   */\n  addToCart(product: Product) {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      const loggedInUser: User = JSON.parse(userData);\n      loggedInUser.cart = loggedInUser.cart || [];\n      loggedInUser.cart.push(product);\n      localStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\n\n      let users: User[] = JSON.parse(localStorage.getItem('users') ?? '[]');\n      users = users.map((user: User) => user.email === loggedInUser.email ? loggedInUser : user);\n      localStorage.setItem('users', JSON.stringify(users));\n\n      this.userService.setUserStatus(loggedInUser); \n      this.showAlert('Producto añadido al carrito');\n    } else {\n      alert('Por favor, inicia sesión para agregar productos al carrito.');\n      this.router.navigate(['/Login']);\n    }\n  }\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message El mensaje de la alerta.\n   */\n  showAlert(message: string) {\n    this.alertMessage = message;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n\n  \n  \n    {{ alertMessage }}\n    \n  \n  Productos\n  \n    \n      Precio\n      \n         $0 - $9.990\n         $10.000 - $19.990\n         $50.000 - $99.990\n         Sobre $100.000\n      \n\n      Marcas\n      \n         Bandai\n         Bandai Hobby\n         Funko\n         Good Smile Company\n         Hasbro\n         MAFEX\n      \n\n      Tipo\n      \n         Figuras Articuladas\n         Figuras Estática\n         Maqueta Armable\n      \n    \n\n    \n      \n        \n        \n          \n            \n            \n              {{product.name}}\n              \n                de ${{product.price | number:'1.0-0'}}\n              \n              \n                Agregar al Carrito\n                Más Información\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        {{selectedProduct?.name}}\n        \n      \n      \n        \n        {{selectedProduct?.moreInfo}}\n        Precio: ${{selectedProduct?.price | number:'1.0-0'}}\n      \n      \n        Agregar al Carrito\n        Cerrar\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./article.component.css\n                \n                html {\n    height: 100%;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    margin: 0;\n}\n\n.content {\n    flex: 1;\n}\n\n.navbar-brand img {\n    height: 40px;\n    margin-right: 10px;\n    width: auto;\n}\n\n.image-container {\n    position: relative;\n    width: 100%;\n    height: 400px;\n    margin: 0 auto;\n    overflow: hidden;\n}\n\n.hero-image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n}\n\n.product-card {\n    height: 100%;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.product-card:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\n}\n\n.product-card .card-body {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n}\n\n\n\n.navbar {\n    background-color: #001F39;\n}\n\n.navbar .navbar-custom {\n    color: #FFA726;\n}\n\n.navbar .navbar-custom:hover {\n    color: #FFE082;\n}\n\n.custom-toggler .navbar-toggler-icon {\n    background-image: url('data:image/svg+xml;utf8,');\n}\n\n.text-custom {\n    color: #FFA726;\n}\n\n/* Estilo base */\n.product-img {\n    width: 100%;\n    height: auto; /* Ajusta la altura automáticamente */\n    object-fit: contain; /* Ajusta la imagen para que quepa dentro del contenedor */\n}\n\n@media (max-width: 992px) {\n    .col-md-4 {\n        flex: 0 0 50%; /* Dos columnas en pantallas medianas */\n        max-width: 50%;\n    }\n\n    .product-img {\n        height: 200px; /* Ajusta la altura para pantallas medianas */\n    }\n}\n\n@media (max-width: 768px) {\n    .col-md-4 {\n        flex: 0 0 50%;\n        max-width: 50%;\n    }\n\n    .product-img {\n        height: 150px; /* Ajusta la altura para pantallas pequeñas */\n    }\n}\n\n@media (max-width: 576px) {\n    .col-md-4 {\n        flex: 0 0 100%;\n        max-width: 100%;\n    }\n\n    .product-img {\n        height: 150px; /* Ajusta la altura para pantallas muy pequeñas */\n    }\n\n    .d-flex.justify-content-between {\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .card-body .btn {\n        width: 100%;\n        margin: 5px 0;\n    }\n}\n\n\n\n.hidden {\n    display: none !important;\n}\n\n#user-menu {\n    display: flex;\n    align-items: center;\n}\n\n#username-display {\n    margin-right: 10px;\n}\n\n.card-body .btn {\n    flex: 1;\n    margin: 5px;\n}\n\n.d-flex.justify-content-between {\n    margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ alertMessage }}        Productos            Precio               $0 - $9.990         $10.000 - $19.990         $50.000 - $99.990         Sobre $100.000            Marcas               Bandai         Bandai Hobby         Funko         Good Smile Company         Hasbro         MAFEX            Tipo               Figuras Articuladas         Figuras Estática         Maqueta Armable                                                                                    {{product.name}}                              de ${{product.price | number:\\'1.0-0\\'}}                                            Agregar al Carrito                Más Información                                                                            {{selectedProduct?.name}}                                    {{selectedProduct?.moreInfo}}        Precio: ${{selectedProduct?.price | number:\\'1.0-0\\'}}                    Agregar al Carrito        Cerrar            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArticleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/article-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar los artículos (productos).\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/article-service.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProducts\n                        \n                    \n                \n            \n            \n                \ngetProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/article-service.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de productos desde Firestore.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite una lista de productos.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Firestore, collectionData, collection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../core/models/product.model';\n\n/**\n * Servicio para manejar los artículos (productos).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n  constructor(private firestore: Firestore) {}\n\n  /**\n   * Obtiene una lista de productos desde Firestore.\n   * @returns Un observable que emite una lista de productos.\n   */\n  getProducts(): Observable {\n    const productCollection = collection(this.firestore, 'article');\n    return collectionData(productCollection, { idField: 'id' }) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de autenticación que maneja el registro, inicio de sesión y gestión de usuarios en Firebase.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUserFromFirestore\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                reauthenticate\n                            \n                            \n                                register\n                            \n                            \n                                saveUserProfile\n                            \n                            \n                                sendEmailVerification\n                            \n                            \n                                setUserStatus\n                            \n                            \n                                updateEmail\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUserProfile\n                            \n                            \n                                updateUserProfileInFirestore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, firestore: Firestore, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUserFromFirestore\n                        \n                    \n                \n            \n            \n                \ndeleteUserFromFirestore(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Elimina un usuario de Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario a eliminar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando el usuario es eliminado.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Obtiene el perfil de usuario desde Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un observable que emite el perfil del usuario o null si no se encuentra.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Inicia sesión con correo electrónico y contraseña.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El correo electrónico del usuario.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La contraseña del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite el resultado del inicio de sesión.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reauthenticate\n                        \n                    \n                \n            \n            \n                \nreauthenticate(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n                        Reautentica al usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La contraseña del usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite cuando la reautenticación se completa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Registra un nuevo usuario con correo electrónico y contraseña.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El correo electrónico del nuevo usuario.\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La contraseña del nuevo usuario.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite el resultado del registro.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Guarda el perfil de usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de usuario a guardar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando el perfil se guarda.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendEmailVerification\n                        \n                    \n                \n            \n            \n                \nsendEmailVerification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Envía un correo de verificación al usuario.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite cuando el correo se envía.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserStatus\n                        \n                    \n                \n            \n            \n                \nsetUserStatus(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Establece el estado del usuario en el UserService.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de usuario o null.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmail\n                        \n                    \n                \n            \n            \n                \nupdateEmail(newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n                        Actualiza el correo electrónico del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nuevo correo electrónico.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite cuando el correo se actualiza.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Actualiza la contraseña del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La nueva contraseña.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite cuando la contraseña se actualiza.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:109\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil de usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de usuario a actualizar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un observable que emite cuando la actualización se completa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfileInFirestore\n                        \n                    \n                \n            \n            \n                \nupdateUserProfileInFirestore(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil de usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de usuario a actualizar.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Una promesa que se resuelve cuando la actualización se completa.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateEmail, updatePassword, sendEmailVerification, reauthenticateWithCredential, EmailAuthProvider, verifyBeforeUpdateEmail } from '@angular/fire/auth';\nimport { Firestore, doc, getDoc, setDoc, updateDoc, DocumentSnapshot, DocumentData, deleteDoc } from '@angular/fire/firestore';\nimport { User } from '../../core/models/user.model';\nimport { from, Observable, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { UserService } from './user.service';\n\n/**\n * Servicio de autenticación que maneja el registro, inicio de sesión y gestión de usuarios en Firebase.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    private auth: Auth,\n    private firestore: Firestore,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Actualiza el perfil de usuario en Firestore.\n   * @param user El objeto de usuario a actualizar.\n   * @returns Una promesa que se resuelve cuando la actualización se completa.\n   */\n  updateUserProfileInFirestore(user: User): Promise {\n    const userDoc = doc(this.firestore, `users/${user.uid}`);\n    return updateDoc(userDoc, { ...user });\n  }\n\n  /**\n   * Elimina un usuario de Firestore.\n   * @param uid El ID del usuario a eliminar.\n   * @returns Una promesa que se resuelve cuando el usuario es eliminado.\n   */\n  deleteUserFromFirestore(uid: string): Promise {\n    const userDoc = doc(this.firestore, `users/${uid}`);\n    return deleteDoc(userDoc);\n  }\n\n  /**\n   * Registra un nuevo usuario con correo electrónico y contraseña.\n   * @param email El correo electrónico del nuevo usuario.\n   * @param password La contraseña del nuevo usuario.\n   * @returns Un observable que emite el resultado del registro.\n   */\n  register(email: string, password: string): Observable {\n    return from(createUserWithEmailAndPassword(this.auth, email, password));\n  }\n\n  /**\n   * Inicia sesión con correo electrónico y contraseña.\n   * @param email El correo electrónico del usuario.\n   * @param password La contraseña del usuario.\n   * @returns Un observable que emite el resultado del inicio de sesión.\n   */\n  login(email: string, password: string): Observable {\n    return from(signInWithEmailAndPassword(this.auth, email, password));\n  }\n\n  /**\n   * Guarda el perfil de usuario en Firestore.\n   * @param user El objeto de usuario a guardar.\n   * @returns Una promesa que se resuelve cuando el perfil se guarda.\n   */\n  saveUserProfile(user: User): Promise {\n    const userDoc = doc(this.firestore, `users/${user.uid}`);\n    return setDoc(userDoc, user);\n  }\n\n  /**\n   * Obtiene el perfil de usuario desde Firestore.\n   * @param uid El ID del usuario.\n   * @returns Un observable que emite el perfil del usuario o null si no se encuentra.\n   */\n  getUserProfile(uid: string): Observable {\n    const userDocRef = doc(this.firestore, `users/${uid}`);\n    return from(getDoc(userDocRef)).pipe(\n      switchMap((snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          const userProfile: User = {\n            uid: snapshot.id,\n            fullName: data['fullName'],\n            username: data['username'],\n            email: data['email'],\n            password: data['password'],\n            confirmPassword: data['confirmPassword'],\n            birthdate: data['birthdate'],\n            address: data['address'],\n            role: data['role'],\n            purchaseHistory: data['purchaseHistory'] || [],\n            cart: data['cart'] || []\n          } as User;\n          return of(userProfile);\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Actualiza el perfil de usuario.\n   * @param user El objeto de usuario a actualizar.\n   * @returns Un observable que emite cuando la actualización se completa.\n   */\n  updateUserProfile(user: User): Observable {\n    const userDoc = doc(this.firestore, `users/${user.uid}`);\n    return from(updateDoc(userDoc, { ...user }));\n  }\n\n  /**\n   * Actualiza el correo electrónico del usuario.\n   * @param newEmail El nuevo correo electrónico.\n   * @returns Un observable que emite cuando el correo se actualiza.\n   */\n  updateEmail(newEmail: string): Observable {\n    const user = this.auth.currentUser;\n    if (user) {\n      return from(verifyBeforeUpdateEmail(user, newEmail)).pipe(map(() => {}));\n    } else {\n      return of(undefined);\n    }\n  }\n\n  /**\n   * Actualiza la contraseña del usuario.\n   * @param newPassword La nueva contraseña.\n   * @returns Un observable que emite cuando la contraseña se actualiza.\n   */\n  updatePassword(newPassword: string): Observable {\n    const user = this.auth.currentUser;\n    if (user) {\n      return from(updatePassword(user, newPassword)).pipe(map(() => {}));\n    } else {\n      return of(undefined);\n    }\n  }\n\n  /**\n   * Envía un correo de verificación al usuario.\n   * @returns Un observable que emite cuando el correo se envía.\n   */\n  sendEmailVerification(): Observable {\n    const user = this.auth.currentUser;\n    if (user) {\n      return from(sendEmailVerification(user)).pipe(map(() => {}));\n    } else {\n      return of(undefined);\n    }\n  }\n\n  /**\n   * Reautentica al usuario.\n   * @param password La contraseña del usuario.\n   * @returns Un observable que emite cuando la reautenticación se completa.\n   */\n  reauthenticate(password: string): Observable {\n    const user = this.auth.currentUser;\n    if (user && user.email) {\n      const credential = EmailAuthProvider.credential(user.email, password);\n      return from(reauthenticateWithCredential(user, credential)).pipe(map(() => {}));\n    } else {\n      return of(undefined);\n    }\n  }\n\n  /**\n   * Establece el estado del usuario en el UserService.\n   * @param user El objeto de usuario o null.\n   */\n  setUserStatus(user: User | null) {\n    this.userService.setUserStatus(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarComponent.html":{"url":"components/CarComponent.html","title":"component - CarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/car/car.component.ts\n\n\n\n    \n        Description\n    \n    \n        CarComponent es el componente encargado de mostrar y gestionar el carrito de compras.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./car.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                cartCount\n                            \n                            \n                                cartTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeCart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onHistory\n                            \n                            \n                                onProceedPayment\n                            \n                            \n                                saveCart\n                            \n                            \n                                updateCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, router: Router, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/car/car.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Renderer2 para manipular el DOM.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación.\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Identificador de la plataforma (browser o server).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeCart\n                        \n                    \n                \n            \n            \n                \ninitializeCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Inicializa el carrito cargando los datos del usuario desde localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\nCarga el carrito desde localStorage y actualiza la vista.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHistory\n                        \n                    \n                \n            \n            \n                \nonHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Navega a la página de historial.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProceedPayment\n                        \n                    \n                \n            \n            \n                \nonProceedPayment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Navega a la página de pago.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveCart\n                        \n                    \n                \n            \n            \n                \nsaveCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Guarda el carrito en localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCart\n                        \n                    \n                \n            \n            \n                \nupdateCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/car/car.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Actualiza la vista del carrito.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/car/car.component.ts:20\n                        \n                    \n\n            \n                \n                    Lista de productos en el carrito.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/car/car.component.ts:30\n                        \n                    \n\n            \n                \n                    Cantidad de productos en el carrito.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/car/car.component.ts:25\n                        \n                    \n\n            \n                \n                    Total del carrito.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Renderer2, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { User } from '../../core/models/user.model';\nimport { Product } from '../../core/models/product.model';\n\n/**\n * CarComponent es el componente encargado de mostrar y gestionar el carrito de compras.\n */\n@Component({\n  selector: 'app-car',\n  standalone: true,\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.css']\n})\nexport class CarComponent implements OnInit {\n  /**\n   * Lista de productos en el carrito.\n   */\n  cart: Product[] = [];\n\n  /**\n   * Total del carrito.\n   */\n  cartTotal: number = 0;\n\n  /**\n   * Cantidad de productos en el carrito.\n   */\n  cartCount: number = 0;\n\n  /**\n   * Constructor del componente.\n   * @param renderer Renderer2 para manipular el DOM.\n   * @param router Router para la navegación.\n   * @param platformId Identificador de la plataforma (browser o server).\n   */\n  constructor(private renderer: Renderer2, private router: Router, @Inject(PLATFORM_ID) private platformId: any) {}\n\n  /**\n   * Método de inicialización del componente.\n   * Carga el carrito desde localStorage y actualiza la vista.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.initializeCart();\n      this.updateCart();\n    }\n  }\n\n  /**\n   * Inicializa el carrito cargando los datos del usuario desde localStorage.\n   */\n  initializeCart() {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      const loggedInUser: User = JSON.parse(userData);\n      this.cart = loggedInUser.cart || [];\n    } else {\n      alert('Por favor, inicia sesión para ver tu carrito.');\n      this.router.navigate(['/Login']);\n    }\n  }\n\n  /**\n   * Actualiza la vista del carrito.\n   */\n  updateCart() {\n    const cartItems = this.renderer.selectRootElement('#cart-items', true);\n    const cartTotal = this.renderer.selectRootElement('#cart-total', true);\n    const cartCount = this.renderer.selectRootElement('#cart-count', true);\n\n    this.renderer.setProperty(cartItems, 'innerHTML', '');\n    this.cartTotal = 0;\n\n    this.cart.forEach((item, index) => {\n      const itemElement = this.renderer.createElement('div');\n      this.renderer.addClass(itemElement, 'list-group-item');\n      this.renderer.addClass(itemElement, 'd-flex');\n      this.renderer.addClass(itemElement, 'justify-content-between');\n      this.renderer.addClass(itemElement, 'align-items-center');\n\n      const itemContent = `\n        \n          ${item.name}\n          $${item.price}\n        \n        Eliminar\n      `;\n\n      this.renderer.setProperty(itemElement, 'innerHTML', itemContent);\n      this.renderer.appendChild(cartItems, itemElement);\n      this.cartTotal += item.price;\n    });\n\n    this.renderer.setProperty(cartTotal, 'textContent', this.cartTotal.toString());\n    this.renderer.setProperty(cartCount, 'textContent', this.cart.length.toString());\n\n    const buttons = Array.from(cartItems.getElementsByClassName('btn-danger')) as HTMLButtonElement[];\n    buttons.forEach((button: HTMLButtonElement) => {\n      this.renderer.listen(button, 'click', (event: Event) => {\n        const target = event.target as HTMLButtonElement;\n        const index = target.getAttribute('data-index');\n        if (index !== null) {\n          this.cart.splice(parseInt(index), 1);\n          this.updateCart();\n          this.saveCart();\n        }\n      });\n    });\n  }\n\n  /**\n   * Guarda el carrito en localStorage.\n   */\n  saveCart() {\n    if (isPlatformBrowser(this.platformId)) {\n      const userData = localStorage.getItem('loggedInUser');\n      if (userData) {\n        const loggedInUser: User = JSON.parse(userData);\n        loggedInUser.cart = this.cart;\n        localStorage.setItem('loggedInUser', JSON.stringify(loggedInUser));\n\n        let users: User[] = JSON.parse(localStorage.getItem('users') ?? '[]');\n        users = users.map((user: User) => user.email === loggedInUser.email ? loggedInUser : user);\n        localStorage.setItem('users', JSON.stringify(users));\n      }\n    }\n  }\n\n  /**\n   * Navega a la página de pago.\n   */\n  onProceedPayment() {\n    this.router.navigate(['/Pay']);\n    // Aquí puedes agregar lógica adicional para manejar el pago\n  }\n\n  /**\n   * Navega a la página de historial.\n   */\n  onHistory() {\n    this.router.navigate(['/Record']);\n    // Aquí puedes agregar lógica adicional para manejar el historial\n  }\n}\n\n    \n\n    \n        \n  Mi Carrito\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          Resumen\n          Total: $0\n          Proceder al Pago\n          Historial\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./car.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Mi Carrito                                                          Resumen          Total: $0          Proceder al Pago          Historial                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreMock.html":{"url":"classes/FirestoreMock.html","title":"class - FirestoreMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/firestore-mock.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                doc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collection\n                        \n                    \n                \n            \n            \n                \ncollection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/firestore-mock.service.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { valueChanges: () => {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doc\n                        \n                    \n                \n            \n            \n                \ndoc()\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/firestore-mock.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { update: () => any; delete: () => any; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FirestoreMock {\n  collection() {\n    return { valueChanges: () => [] };\n  }\n\n  doc() {\n    return {\n      update: () => Promise.resolve(),\n      delete: () => Promise.resolve()\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n            \n    \n        © 2024 Company, Inc\n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                © 2024 Company, Inc    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n    Nuevas Preventas\n    \n        \n            \n            \n            \n        \n        \n            \n                \n                    \n                        \n                            \n                            \n                                Kimetsu no Yaiba HASHIBIRA INOZUKE Figma DX Ver.\n                                de $101.243 $134.990  Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Chainsaw Man Denji Nendoroid\n                                de $48.743  Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Mighty Morphin Power Ranger RED RANGER Lightning Collection\n                                de $20.994  Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Moon Knight Marvel Legends Series\n                                de $24.745  Preventa\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                Star Wars Darth Maul (Mandalore) 6-Inch Action Figure The Black Series.\n                                de $21.995 $39.990  Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Digimon Tamers DUKEMON Figure Rise Standard\n                                de $22.744  Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Digimon SHINEGREYMON Figure Rise Standard\n                                de $47.992   Preventa\n                            \n                        \n                    \n                    \n                        \n                            \n                            \n                                Avengers Infinity War Thanos S.H.Figuarts de Bandai\n                                de $44.995  Preventa\n                            \n                        \n                    \n                \n            \n        \n\n        \n            \n            Previous\n        \n        \n            \n            Next\n        \n    \n\n\n\n    Productos\n    \n        \n        \n            \n                \n                \n                    The Boys! Black Noir MAFEX\n                    \n                        de $81.743\n                        In Stock\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Deadpool X-Force Ver. MAFEX\n                    \n                        de $83.993 $119.990 \n                        In Stock 30% dcto\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Avengers Infinity War LOKI MAFEX\n                    \n                        de $90.994 $139.990 \n                        34% dcto\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Jujutsu kaisen Yuji Itadori POPUP Parade\n                    \n                        de $26.990\n                      In Stock\n                    \n                \n        \n    \n\n\n    \n        \n        \n            \n                \n                \n                    Moon Knight Marvel Legends Series\n                    \n                        de $24.745 $44.990 \n                        In Stock 44% dcto\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Avengers Battle of New York Edition: Thor S.H. Figuarts\n                    \n                        de $39.990\n                        In Stock\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Avengers Infinity War Thanos S.H.Figuarts de Bandai\n                    \n                        de $44.995\n                        Sold Out\n                    \n                \n            \n        \n        \n        \n            \n                \n                \n                    Digimon SHINEGREYMON Figure Rise Standard \n                    \n                        de $47.992\n                        In Stock\n                    \n                \n            \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Nuevas Preventas                                                                                                                                                                                                                                Kimetsu no Yaiba HASHIBIRA INOZUKE Figma DX Ver.                                de $101.243 $134.990  Preventa                                                                                                                                                                                                            Chainsaw Man Denji Nendoroid                                de $48.743  Preventa                                                                                                                                                                                                            Mighty Morphin Power Ranger RED RANGER Lightning Collection                                de $20.994  Preventa                                                                                                                                                                                                            Moon Knight Marvel Legends Series                                de $24.745  Preventa                                                                                                                                                                                                                                                                    Star Wars Darth Maul (Mandalore) 6-Inch Action Figure The Black Series.                                de $21.995 $39.990  Preventa                                                                                                                                                                                                            Digimon Tamers DUKEMON Figure Rise Standard                                de $22.744  Preventa                                                                                                                                                                                                            Digimon SHINEGREYMON Figure Rise Standard                                de $47.992   Preventa                                                                                                                                                                                                            Avengers Infinity War Thanos S.H.Figuarts de Bandai                                de $44.995  Preventa                                                                                                                                            Previous                                        Next                Productos                                                                                    The Boys! Black Noir MAFEX                                            de $81.743                        In Stock                                                                                                                                        Deadpool X-Force Ver. MAFEX                                            de $83.993 $119.990                         In Stock 30% dcto                                                                                                                                        Avengers Infinity War LOKI MAFEX                                            de $90.994 $139.990                         34% dcto                                                                                                                                        Jujutsu kaisen Yuji Itadori POPUP Parade                                            de $26.990                      In Stock                                                                                                                                    Moon Knight Marvel Legends Series                                            de $24.745 $44.990                         In Stock 44% dcto                                                                                                                                        Avengers Battle of New York Edition: Thor S.H. Figuarts                                            de $39.990                        In Stock                                                                                                                                        Avengers Infinity War Thanos S.H.Figuarts de Bandai                                            de $44.995                        Sold Out                                                                                                                                        Digimon SHINEGREYMON Figure Rise Standard                                             de $47.992                        In Stock                                                                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el inicio de sesión de los usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de inicio de sesión.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/login/login.component.ts:123\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth.service';\nimport { User } from '../../core/models/user.model';\nimport { UserService } from '../../core/services/user.service';\n\n/**\n * Componente para el inicio de sesión de los usuarios.\n */\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, RouterModule],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  alertMessage: string = '';\n  alertType: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router, private authService: AuthService, private userService: UserService) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      adminMode: [false]\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message Mensaje de la alerta.\n   * @param type Tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n\n  /**\n   * Maneja el envío del formulario de inicio de sesión.\n   */\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      this.loginForm.markAllAsTouched();\n      return;\n    }\n\n    const email = this.loginForm.value.email;\n    const password = this.loginForm.value.password;\n    const adminMode = this.loginForm.value.adminMode;\n\n    // Manejo especial para el administrador\n    if (adminMode && email === 'admin@gmail.com' && password === 'admin1234') {\n      this.authService.login(email, password).subscribe({\n        next: (result) => {\n          const adminUser: User = { \n            email, \n            role: 'admin', \n            username: 'Admin', \n            uid: result.user.uid, \n            fullName: 'Admin', \n            purchaseHistory: [], \n            cart: [], \n            password: '',\n            confirmPassword: '',\n            birthdate: '',\n            address: ''\n          };\n          localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n          this.userService.setUserStatus(adminUser); // Actualizar el estado del usuario\n          this.showAlert('Inicio de sesión como administrador exitoso.', 'success');\n          setTimeout(() => {\n            this.router.navigate(['/Article']);\n          }, 1500);\n          setTimeout(() => {\n            window.location.reload();\n          }, 1900);\n        },\n        error: (error) => {\n          this.showAlert('Correo electrónico o contraseña incorrectos.', 'danger');\n        }\n      });\n      return;\n    }\n\n    // Manejo para otros usuarios\n    this.authService.login(email, password).subscribe({\n      next: (result) => {\n        this.authService.getUserProfile(result.user.uid).subscribe({\n          next: (userProfile) => {\n            if (userProfile) {\n              localStorage.setItem('loggedInUser', JSON.stringify(userProfile));\n              this.userService.setUserStatus(userProfile); // Actualizar el estado del usuario\n              this.showAlert('Inicio de sesión exitoso.', 'success');\n              setTimeout(() => {\n                this.router.navigate(['/Article']);\n              }, 1500);\n            } else {\n              this.showAlert('No se pudo obtener el perfil del usuario.', 'danger');\n            }\n          },\n          error: (error) => {\n            this.showAlert('Error al obtener el perfil del usuario.', 'danger');\n          }\n        });\n      },\n      error: (error) => {\n        this.showAlert('Correo electrónico o contraseña incorrectos.', 'danger');\n      }\n    });\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Iniciar Sesión\n          Ingresa tu correo electrónico para iniciar sesión\n          \n          \n            {{alertMessage}}\n            \n          \n          \n            \n            \n              Correo Electrónico\n              \n              Por favor, ingrese un correo electrónico válido.\n            \n            \n            \n              Contraseña\n              \n              Por favor, ingrese su contraseña.\n            \n            \n           \n              \n              Modo administrador\n            -->\n            \n            \n              Iniciar sesión\n              ¿Olvidaste tu contraseña?\n            \n            \n            \n              Registrarse\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                /* General Styles */\nhtml {\n    height: 100%;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    margin: 0;\n}\n\n.content {\n    flex: 1;\n}\n\n.navbar-brand img {\n    height: 40px; /* Ajusta la altura del logo según sea necesario */\n    margin-right: 10px;\n    width: auto; /* Mantener la proporción de la imagen */\n}\n\n/* Image Section */\n.image-container {\n    position: relative;\n    width: 100%; /* Ajusta el ancho del contenedor según sea necesario */\n    height: 400px; /* Ajusta la altura del contenedor según sea necesario */\n    margin: 0 auto; /* Centra el contenedor horizontalmente */\n    overflow: hidden;\n}\n\n.hero-image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover; /* Asegura que la imagen cubra el contenedor */\n    object-position: center; /* Centra la imagen en el contenedor */\n}\n\n/* Navbar */\n.navbar {\n    background-color: #001F39; /* Azul Oscuro */\n}\n\n.navbar .navbar-custom {\n    color: #FFA726; /* Naranja */\n}\n\n.navbar .navbar-custom:hover {\n    color: #FFE082; /* Amarillo */\n}\n\n.custom-toggler .navbar-toggler-icon {\n    background-image: url('data:image/svg+xml;utf8,');\n}\n\n/* Custom Text Color */\n.text-custom {\n    color: #FFA726; /* Naranja */\n}\n\n/* Footer */\nfooter {\n    background-color: #001F39; /* Azul Oscuro */\n    color: #FFA726; /* Naranja */\n}\n\n/* Responsive Adjustments */\n@media (max-width: 768px) {\n    .image-container {\n        width: 90%; /* Ajusta el ancho del contenedor para pantallas más pequeñas */\n        height: 300px; /* Ajusta la altura para pantallas más pequeñas */\n    }\n}\n\n@media (max-width: 480px) {\n    .image-container {\n        width: 100%; /* Ajusta el ancho del contenedor para pantallas aún más pequeñas */\n        height: 200px; /* Ajusta la altura para pantallas aún más pequeñas */\n    }\n}\n\n@media (max-width: 1080px) {\n    .image-container {\n        width: 100%; /* Ajusta el ancho del contenedor para pantallas aún más pequeñas */\n        height: 200px; /* Ajusta la altura para pantallas aún más pequeñas */\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Iniciar Sesión          Ingresa tu correo electrónico para iniciar sesión                                {{alertMessage}}                                                                      Correo Electrónico                            Por favor, ingrese un correo electrónico válido.                                                  Contraseña                            Por favor, ingrese su contraseña.                                                               Modo administrador            -->                                      Iniciar sesión              ¿Olvidaste tu contraseña?                                                  Registrarse                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAuth.html":{"url":"classes/MockAuth.html","title":"class - MockAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/MockAuth.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MockAuth {\n    // Simula los métodos necesarios de Auth\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAuthService.html":{"url":"classes/MockAuthService.html","title":"class - MockAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/mock-firebase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserProfile\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                            \n                                saveUserProfile\n                            \n                            \n                                sendPasswordResetEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(uid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/mock-firebase.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/mock-firebase.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/mock-firebase.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserProfile\n                        \n                    \n                \n            \n            \n                \nsaveUserProfile(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/mock-firebase.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \nsendPasswordResetEmail(auth: any, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/testing/mock-firebase.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { of } from 'rxjs';\nimport { User } from '../app/core/models/user.model';\nexport class MockAuthService {\n\n  login(email: string, password: string) {\n    return of({\n      user: { uid: 'testUid' }\n    });\n  }\n\n  getUserProfile(uid: string) {\n    const mockUser: User = {\n      uid: 'testUid',\n      fullName: 'John Doe',\n      username: 'johndoe',\n      email: 'johndoe@example.com',\n      password: 'Password123!',\n      confirmPassword: 'Password123!',\n      birthdate: '1990-01-01',\n      address: '123 Main St',\n      role: 'client',\n      purchaseHistory: [\n        { name: 'Product 1', brand: 'Brand A', type: 'Type 1', price: 100, imageUrl: 'url1', showMoreInfo: false, moreInfo: 'Info 1', hidden: false, date: '2023-01-01' },\n        { name: 'Product 2', brand: 'Brand B', type: 'Type 2', price: 200, imageUrl: 'url2', showMoreInfo: false, moreInfo: 'Info 2', hidden: false, date: '2023-02-01' }\n      ],\n      cart: []\n    };\n    return of(mockUser);\n  }\n  \n  register(email: string, password: string) {\n    return of({\n      user: { uid: '1' }\n    });\n  }\n\n  saveUserProfile(user: any) {\n    return Promise.resolve();\n  }\n\n  sendPasswordResetEmail(auth: any, email: string) {\n    return Promise.resolve();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartCount\n                            \n                            \n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserStatus\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cdr: ChangeDetectorRef, platformId: any, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserStatus\n                        \n                    \n                \n            \n            \n                \ncheckUserStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/navbar/navbar.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/navbar/navbar.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/navbar/navbar.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { isPlatformBrowser } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { UserService } from '../../../core/services/user.service';\nimport { User } from '../../../core/models/user.model';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loggedInUser: User | null = null;\n  cartCount: number = 0;\n\n  constructor(\n    private router: Router,\n    private cdr: ChangeDetectorRef,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private authService: AuthService,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.checkUserStatus();\n    this.userService.userStatus$.subscribe(user => {\n      this.loggedInUser = user;\n      this.cartCount = user ? user.cart.length : 0;\n      this.cdr.detectChanges();\n    });\n  }\n\n  checkUserStatus() {\n    if (isPlatformBrowser(this.platformId)) {\n      const userData = localStorage.getItem('loggedInUser');\n      if (userData) {\n        const user = JSON.parse(userData) as User;\n        this.authService.getUserProfile(user.uid).subscribe(userProfile => {\n          if (userProfile) {\n            this.loggedInUser = userProfile;\n            this.userService.setUserStatus(this.loggedInUser);\n          } else {\n            console.warn('User profile not found in Firestore');\n          }\n        }, error => {\n          console.error('Error fetching user profile from Firestore:', error);\n        });\n      } else {\n        console.warn('No user data found in localStorage');\n      }\n    } else {\n      console.warn('localStorage is not available');\n    }\n  }\n\n  logout() {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.removeItem('loggedInUser');\n      this.loggedInUser = null;\n      this.userService.setUserStatus(null);\n      this.router.navigate(['/']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      Figurines\n    \n    \n      \n    \n    \n      \n        \n          Inicio\n        \n        \n          Catálogo\n        \n      \n      \n        \n          Iniciar Sesión\n        \n        \n          {{ loggedInUser.username }}\n        \n        \n          Cerrar Sesión\n        \n        \n          \n             Carrito ({{ cartCount }})\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                html {\n    height: 100%;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    margin: 0;\n}\n\n.content {\n    flex: 1;\n}\n\n.navbar-brand img {\n    height: 40px; /* Ajusta la altura del logo según sea necesario */\n    margin-right: 10px;\n    width: auto; /* Mantener la proporción de la imagen */\n}\n\n.image-container {\n    position: relative;\n    width: 100%; /* Ajusta el ancho del contenedor según sea necesario */\n    height: 400px; /* Ajusta la altura del contenedor según sea necesario */\n    margin: 0 auto; /* Centra el contenedor horizontalmente */\n    overflow: hidden;\n}\n\n.hero-image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover; /* Asegura que la imagen cubra el contenedor */\n    object-position: center; /* Centra la imagen en el contenedor */\n}\n\n.product-card {\n    height: 100%;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.product-card:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\n}\n\n.product-card .card-body {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n}\n\n.product-img {\n    width: 100%;\n    height: 400px; /* Ajusta la altura según sea necesario */\n    object-fit: contain; /* Ajusta la imagen para que quepa dentro del contenedor */\n}\n\n/* Cambia el color de fondo de la barra de navegación */\n.navbar {\n    background-color: #001F39; /* Azul Oscuro */\n}\n\n.navbar .navbar-custom {\n    color: #FFA726; /* Naranja */\n}\n\n.navbar .navbar-custom:hover {\n    color: #FFE082; /* Amarillo */\n}\n\n/* Ajustes en la barra de navegación */\n#nav-user {\n    display: flex;\n    align-items: center;\n}\n\n#nav-user .nav-item {\n    margin-left: 15px;\n}\n\n.custom-toggler .navbar-toggler-icon {\n    background-image: url('data:image/svg+xml;utf8,');\n}\n\n/* Colores personalizados para los encabezados */\n.text-custom {\n    color: #FFA726; /* Naranja */\n}\n\n/* Media queries para ajustes responsivos */\n@media (max-width: 768px) {\n    .image-container {\n        width: 90%; /* Ajusta el ancho del contenedor para pantallas más pequeñas */\n        height: 300px; /* Ajusta la altura para pantallas más pequeñas */\n    }\n}\n\n@media (max-width: 480px) {\n    .image-container {\n        width: 100%; /* Ajusta el ancho del contenedor para pantallas aún más pequeñas */\n        height: 200px; /* Ajusta la altura para pantallas aún más pequeñas */\n    }\n}\n\n@media (max-width: 1080px) {\n    .image-container {\n        width: 100%; /* Ajusta el ancho del contenedor para pantallas aún más pequeñas */\n        height: 200px; /* Ajusta la altura para pantallas aún más pequeñas */\n    }\n}\n\n.hidden {\n    display: none !important;\n}\n\n#user-menu {\n    display: flex;\n    align-items: center;\n}\n\n#username-display {\n    margin-right: 10px; /* Espacio entre el nombre de usuario y el botón de cerrar sesión */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Figurines                                              Inicio                          Catálogo                                      Iniciar Sesión                          {{ loggedInUser.username }}                          Cerrar Sesión                                       Carrito ({{ cartCount }})                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PayComponent.html":{"url":"components/PayComponent.html","title":"component - PayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/pay/pay.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el proceso de pago.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pay\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./pay.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, platformId: any, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/pay/pay.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/pay/pay.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/pay/pay.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de pago.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El formulario de pago.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/pay/pay.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/pay/pay.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/pay/pay.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/pay/pay.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { User } from '../../core/models/user.model';\nimport { Product } from '../../core/models/product.model';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth.service';\nimport { UserService } from '../../core/services/user.service';\n\n/**\n * Componente para el proceso de pago.\n */\n@Component({\n  selector: 'app-pay',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './pay.component.html',\n  styleUrls: ['./pay.component.css']\n})\nexport class PayComponent implements OnInit {\n  loggedInUser: User | null = null;\n  alertMessage: string = '';\n  alertType: string = '';\n\n  constructor(private router: Router, @Inject(PLATFORM_ID) private platformId: any, private authService: AuthService, private userService: UserService) {}\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      const userData = localStorage.getItem('loggedInUser');\n      if (userData) {\n        this.loggedInUser = JSON.parse(userData);\n      } else {\n        this.showAlert('Por favor, inicia sesión para proceder con el pago.', 'danger');\n        setTimeout(() => {\n          this.router.navigate(['/Login']);\n        }, 1500);\n      }\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de pago.\n   * @param form El formulario de pago.\n   */\n  onSubmit(form: NgForm) {\n    if (!this.loggedInUser) {\n      this.showAlert('Por favor, inicia sesión para proceder con el pago.', 'danger');\n      setTimeout(() => {\n        this.router.navigate(['/Login']);\n      }, 1500);\n      return;\n    }\n\n    const { cardNumber, expiryDate, cvv } = form.value;\n    if (cardNumber && expiryDate && cvv) {\n      const cart = this.loggedInUser.cart || [];\n      const purchaseDate = new Date().toISOString();\n\n      this.loggedInUser.purchaseHistory = this.loggedInUser.purchaseHistory || [];\n      cart.forEach((item: Product) => {\n        this.loggedInUser!.purchaseHistory.push({\n          ...item,\n          date: purchaseDate\n        });\n      });\n\n      // Vaciar el carrito\n      this.loggedInUser.cart = [];\n      localStorage.setItem('loggedInUser', JSON.stringify(this.loggedInUser));\n\n      let users: User[] = (JSON.parse(localStorage.getItem('users') || '[]') as (User | null)[])\n        .reduce((acc: User[], user: User | null) => {\n          if (user !== null) acc.push(user);\n          return acc;\n        }, []);\n\n      // Actualizar la información del usuario\n      users = users.map(user => {\n        if (user.email === this.loggedInUser!.email) {\n          return this.loggedInUser!;\n        }\n        return user;\n      });\n\n      localStorage.setItem('users', JSON.stringify(users));\n\n      // Validar UID antes de actualizar el perfil del usuario en Firestore\n      if (this.loggedInUser.uid) {\n        console.log('Actualizando perfil de usuario con UID:', this.loggedInUser.uid);\n        this.authService.updateUserProfile(this.loggedInUser).subscribe(\n          () => {\n            this.userService.setUserStatus(this.loggedInUser); // Emitir estado del usuario actualizado\n            this.showAlert('Pago realizado con éxito. Gracias por tu compra.', 'success');\n            setTimeout(() => {\n              this.router.navigate(['/Record']);\n            }, 1500);\n          },\n          (err: any) => {\n            console.error('Error actualizando el perfil del usuario en Firestore:', err);\n            this.showAlert('Error al realizar el pago. Por favor, intente nuevamente.', 'danger');\n          }\n        );\n      } else {\n        console.error('Error: UID del usuario no válido', this.loggedInUser);\n        this.showAlert('Error al realizar el pago. Por favor, intente nuevamente.', 'danger');\n      }\n    } else {\n      this.showAlert('Por favor, completa todos los campos para proceder con el pago.', 'danger');\n    }\n  }\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message El mensaje de la alerta.\n   * @param type El tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n}\n\n    \n\n    \n        \n  Realizar Pago\n  \n    \n    \n      {{ alertMessage }}\n      \n    \n    \n    \n      Número de Tarjeta\n      \n      \n        Por favor, ingresa un número de tarjeta válido.\n      \n    \n    \n    \n      Fecha de Expiración\n      \n      \n        Por favor, ingresa una fecha de expiración válida.\n      \n    \n    \n    \n      CVV\n      \n      \n        Por favor, ingresa un CVV válido.\n      \n    \n    \n    \n      Pagar\n    \n  \n\n\n    \n\n    \n                \n                    ./pay.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Realizar Pago                {{ alertMessage }}                        Número de Tarjeta                    Por favor, ingresa un número de tarjeta válido.                        Fecha de Expiración                    Por favor, ingresa una fecha de expiración válida.                        CVV                    Por favor, ingresa un CVV válido.                        Pagar      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/product.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa el producto.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            moreInfo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            showMoreInfo\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moreInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moreInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showMoreInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showMoreInfo:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n  name: string;\n  brand: string;\n  type: string;\n  price: number;\n  imageUrl: string;\n  showMoreInfo: boolean;\n  moreInfo: string;\n  hidden: boolean;\n  date?: string; \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la gestión del perfil del usuario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finalizeUpdate\n                            \n                            \n                                logout\n                            \n                            \n                                navigateToAdmin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showAlert\n                            \n                            \n                                updateFirestoreEmail\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, platformId: any, authService: AuthService, userService: UserService, firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/profile.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finalizeUpdate\n                        \n                    \n                \n            \n            \n                \nfinalizeUpdate(updatedUser: User, updateTasks: Promise[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Finaliza la actualización del perfil.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario actualizado.\n\n                                            \n                                        \n                                        \n                                                updateTasks\n                                            \n                                                        Promise[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Las tareas de actualización pendientes.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:211\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToAdmin\n                        \n                    \n                \n            \n            \n                \nnavigateToAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:219\n                        \n                    \n\n\n            \n                \n                        Navega a la página de administración.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de perfil.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:228\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFirestoreEmail\n                        \n                    \n                \n            \n            \n                \nupdateFirestoreEmail(uid: string, newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Actualiza el correo electrónico del usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El UID del usuario.\n\n                                            \n                                        \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nuevo correo electrónico.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(updatedUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/profile/profile.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Actualiza el perfil del usuario en Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El usuario actualizado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/profile/profile.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/profile/profile.component.ts:239\n                                \n                            \n                    \n                        \n                                Obtiene los controles del formulario de perfil.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../core/models/user.model';\nimport { AuthService } from '../../core/services/auth.service';\nimport { UserService } from '../../core/services/user.service';\nimport { Firestore } from '@angular/fire/firestore';\nimport { doc, updateDoc } from '@angular/fire/firestore';\n\n/**\n * Componente para la gestión del perfil del usuario.\n */\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profileForm: FormGroup;\n  loggedInUser: User | null = null;\n  alertMessage: string = '';\n  alertType: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private authService: AuthService,\n    private userService: UserService,\n    private firestore: Firestore\n  ) {\n    this.profileForm = this.fb.group({\n      fullName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      birthdate: ['', Validators.required],\n      currentPassword: ['', Validators.required], // Campo para la contraseña actual\n      newPassword: ['', [\n        Validators.minLength(6),\n        Validators.maxLength(18),\n        Validators.pattern(/(?=.*[A-Z])/), // Al menos una letra mayúscula\n        Validators.pattern(/(?=.*\\d)/), // Al menos un número\n        Validators.pattern(/(?=.*[!@#$%^&*.])/), // Al menos un carácter especial\n      ]],\n      address: ['']\n    });\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      const userData = localStorage.getItem('loggedInUser');\n      if (userData) {\n        this.loggedInUser = JSON.parse(userData);\n        this.profileForm.patchValue({\n          fullName: this.loggedInUser?.fullName,\n          username: this.loggedInUser?.username,\n          email: this.loggedInUser?.email,\n          birthdate: this.loggedInUser?.birthdate,\n          address: this.loggedInUser?.address\n        });\n\n        if (this.loggedInUser?.role === 'admin') {\n          const adminButton = document.getElementById('adminButton');\n          if (adminButton) {\n            adminButton.classList.remove('d-none');\n          }\n        }\n      } else {\n        this.showAlert(\"No has iniciado sesión. Por favor, inicia sesión primero.\", \"danger\");\n        setTimeout(() => {\n          this.router.navigate(['/Login']);\n        }, 1500);\n      }\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario de perfil.\n   */\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      this.profileForm.markAllAsTouched();\n      console.error('El formulario es inválido.', this.profileForm.errors, this.profileForm.controls);\n      return;\n    }\n  \n    const newEmail = this.profileForm.get('email')?.value;\n    const currentPassword = this.profileForm.get('currentPassword')?.value;\n    const newPassword = this.profileForm.get('newPassword')?.value;\n    const updatedUser: User = {\n      ...this.loggedInUser!,\n      fullName: this.profileForm.get('fullName')?.value,\n      username: this.profileForm.get('username')?.value,\n      email: this.profileForm.get('email')?.value,\n      birthdate: this.profileForm.get('birthdate')?.value,\n      address: this.profileForm.get('address')?.value,\n      ...(newPassword ? { password: newPassword } : {})\n    };\n  \n    const updateTasks: Promise[] = [];\n  \n    if (newEmail !== this.loggedInUser?.email) {\n      this.authService.updateEmail(newEmail).subscribe({\n        next: () => {\n          this.authService.sendEmailVerification().subscribe({\n            next: () => {\n              this.showAlert('Se ha enviado un correo de verificación. Por favor, verifica tu nuevo correo antes de continuar.', 'info');\n              this.logout(); // Cerrar sesión después de enviar el correo de verificación\n              this.updateFirestoreEmail(this.loggedInUser!.uid, newEmail);\n            },\n            error: (error: any) => {\n              console.error('Error enviando correo de verificación:', error);\n              this.showAlert('Error al enviar el correo de verificación.', 'danger');\n            }\n          });\n        },\n        error: (error: any) => {\n          console.error('Error actualizando el correo electrónico:', error);\n          this.showAlert('Error al actualizar el correo electrónico.', 'danger');\n        }\n      });\n      return;\n    }\n  \n    if (newPassword) {\n      this.authService.reauthenticate(currentPassword).subscribe({\n        next: () => {\n          updateTasks.push(this.authService.updatePassword(newPassword).toPromise());\n          this.finalizeUpdate(updatedUser, updateTasks);\n        },\n        error: (error: any) => {\n          console.error('Error reautenticando al usuario:', error);\n          this.showAlert('Error al reautenticar al usuario. Por favor, verifica tu contraseña actual.', 'danger');\n        }\n      });\n    } else {\n      this.finalizeUpdate(updatedUser, updateTasks);\n    }\n  }\n  \n  /**\n   * Finaliza la actualización del perfil.\n   * @param updatedUser El usuario actualizado.\n   * @param updateTasks Las tareas de actualización pendientes.\n   */\n  finalizeUpdate(updatedUser: User, updateTasks: Promise[]) {\n    console.log('Iniciando tareas de actualización...');\n    Promise.all(updateTasks).then(() => {\n      console.log('Tareas de actualización completadas. Actualizando perfil en Firestore...');\n      this.updateUserProfile(updatedUser);\n    }).catch((error: any) => {\n      console.error('Error durante la actualización de email/contraseña:', error);\n      this.showAlert(\"Error al actualizar el perfil.\", \"danger\");\n    });\n  }\n  \n  /**\n   * Actualiza el perfil del usuario en Firestore.\n   * @param updatedUser El usuario actualizado.\n   */\n  updateUserProfile(updatedUser: User) {\n    let users: User[] = JSON.parse(localStorage.getItem('users') || '[]');\n  \n    const userIndex = users.findIndex(user => user.uid === this.loggedInUser?.uid);\n  \n    if (userIndex !== -1) {\n      users[userIndex] = updatedUser;\n    } else {\n      users.push(updatedUser);\n    }\n  \n    localStorage.setItem('users', JSON.stringify(users));\n    localStorage.setItem('loggedInUser', JSON.stringify(updatedUser));\n  \n    console.log('Actualizando perfil en Firestore...');\n    this.authService.updateUserProfile(updatedUser).subscribe(\n      () => {\n        console.log('Perfil actualizado en Firestore.');\n        this.userService.setUserStatus(updatedUser); // Actualizar el estado del usuario\n        this.showAlert(\"Perfil actualizado correctamente.\", \"success\");\n      },\n      (error: any) => {\n        console.error('Error actualizando el perfil del usuario en Firestore:', error);\n        this.showAlert(\"Error al actualizar el perfil en Firestore.\", \"danger\");\n      }\n    );\n  }\n  \n  /**\n   * Actualiza el correo electrónico del usuario en Firestore.\n   * @param uid El UID del usuario.\n   * @param newEmail El nuevo correo electrónico.\n   */\n  updateFirestoreEmail(uid: string, newEmail: string) {\n    const userDoc = doc(this.firestore, `users/${uid}`);\n    updateDoc(userDoc, { email: newEmail })\n      .then(() => {\n        console.log('Correo electrónico actualizado en Firestore.');\n      })\n      .catch((error: any) => {\n        console.error('Error actualizando el correo electrónico en Firestore:', error);\n      });\n  }\n  \n  /**\n   * Cierra la sesión del usuario.\n   */\n  logout() {\n    localStorage.removeItem('loggedInUser');\n    this.router.navigate(['/Login']);\n  }\n  \n  /**\n   * Navega a la página de administración.\n   */\n  navigateToAdmin() {\n    this.router.navigate(['/Admin']);\n  }\n  \n  /**\n   * Muestra un mensaje de alerta.\n   * @param message El mensaje de la alerta.\n   * @param type El tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n  \n  /**\n   * Obtiene los controles del formulario de perfil.\n   */\n  get f() {\n    return this.profileForm.controls;\n  }\n}\n\n    \n\n    \n          \n  \n    \n      \n        \n          \n            Perfil de Usuario\n            \n              {{alertMessage}}\n              \n            \n            \n              \n              \n                Nombre Completo\n                \n                Por favor, ingrese su nombre completo.\n              \n              \n              \n                Nombre de Usuario\n                \n                Por favor, ingrese un nombre de usuario.\n              \n              \n              \n                Correo Electrónico\n                \n                Por favor, ingrese un correo electrónico válido.\n              \n              \n              \n                Fecha de Nacimiento\n                \n                Por favor, ingrese su fecha de nacimiento.\n              \n              \n              \n                Contraseña Actual\n                \n                Por favor, ingrese su contraseña actual.\n              \n              \n              \n                Nueva Contraseña\n                \n                \n                  La contraseña debe tener entre 6 y 18 caracteres, incluir al menos una letra mayúscula y un número.\n                \n              \n              \n              \n                Dirección\n                \n              \n              \n              \n                Guardar\n                Admin\n              \n                        \n          \n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Perfil de Usuario                          {{alertMessage}}                                                                                  Nombre Completo                                Por favor, ingrese su nombre completo.                                                          Nombre de Usuario                                Por favor, ingrese un nombre de usuario.                                                          Correo Electrónico                                Por favor, ingrese un correo electrónico válido.                                                          Fecha de Nacimiento                                Por favor, ingrese su fecha de nacimiento.                                                          Contraseña Actual                                Por favor, ingrese su contraseña actual.                                                          Nueva Contraseña                                                  La contraseña debe tener entre 6 y 18 caracteres, incluir al menos una letra mayúscula y un número.                                                                          Dirección                                                                          Guardar                Admin                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordComponent.html":{"url":"components/RecordComponent.html","title":"component - RecordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/record/record.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar el historial de compras del usuario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-record\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./record.component.css\n            \n\n\n\n            \n                templateUrl\n                ./record.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedInUser\n                            \n                            \n                                purchaseHistory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/record/record.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Identificador de la plataforma (browser o server).\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para manejar los datos del usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/record/record.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\nCarga los datos del usuario y su historial de compras desde Firestore si está en el navegador.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/record/record.component.ts:20\n                        \n                    \n\n            \n                \n                    Usuario actualmente logueado.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purchaseHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/record/record.component.ts:25\n                        \n                    \n\n            \n                \n                    Historial de compras del usuario.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { User } from '../../core/models/user.model';\nimport { AuthService } from '../../core/services/auth.service';\n\n/**\n * Componente para mostrar el historial de compras del usuario.\n */\n@Component({\n  selector: 'app-record',\n  standalone: true,\n  imports: [CommonModule], // Asegúrate de importar CommonModule\n  templateUrl: './record.component.html',\n  styleUrls: ['./record.component.css']\n})\nexport class RecordComponent implements OnInit {\n  /**\n   * Usuario actualmente logueado.\n   */\n  loggedInUser: User | null = null;\n\n  /**\n   * Historial de compras del usuario.\n   */\n  purchaseHistory: any[] = [];\n\n  /**\n   * Constructor del componente.\n   * @param platformId Identificador de la plataforma (browser o server).\n   * @param authService Servicio de autenticación para manejar los datos del usuario.\n   */\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private authService: AuthService\n  ) {}\n\n  /**\n   * Método de inicialización del componente.\n   * Carga los datos del usuario y su historial de compras desde Firestore si está en el navegador.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      const userData = localStorage.getItem('loggedInUser');\n      if (userData) {\n        const user = JSON.parse(userData);\n        const uid = user.uid;\n        this.authService.getUserProfile(uid).subscribe(userProfile => {\n          if (userProfile) {\n            this.loggedInUser = userProfile;\n            this.purchaseHistory = this.loggedInUser?.purchaseHistory || [];\n          }\n        });\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n\n    Historial de Compras\n    \n      No hay historial de compras.\n      \n        {{ purchase.name }}\n        $ {{ purchase.price }}\n        Fecha: {{ purchase.date | date:'shortDate' }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./record.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Historial de Compras          No hay historial de compras.              {{ purchase.name }}        $ {{ purchase.price }}        Fecha: {{ purchase.date | date:\\'shortDate\\' }}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de registro para crear nuevos usuarios.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                showAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/register/register.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para manejar los datos del usuario.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de registro.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Validador para comprobar que las contraseñas coincidan.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Formulario de registro.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                ValidationErrors si las contraseñas no coinciden, null de lo contrario.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:28\n                        \n                    \n\n            \n                \n                    Mensaje de alerta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:33\n                        \n                    \n\n            \n                \n                    Tipo de alerta (success, danger, etc.).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:23\n                        \n                    \n\n            \n                \n                    Formulario de registro.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/register/register.component.ts:144\n                                \n                            \n                    \n                        \n                                Acceso rápido a los controles del formulario de registro.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors, AbstractControlOptions } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../../core/services/auth.service';\nimport { User } from '../../core/models/user.model';\n\n/**\n * Componente de registro para crear nuevos usuarios.\n */\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  /**\n   * Formulario de registro.\n   */\n  registerForm: FormGroup;\n\n  /**\n   * Mensaje de alerta.\n   */\n  alertMessage: string = '';\n\n  /**\n   * Tipo de alerta (success, danger, etc.).\n   */\n  alertType: string = '';\n\n  /**\n   * Constructor del componente.\n   * @param fb FormBuilder para crear el formulario reactivo.\n   * @param router Router para la navegación.\n   * @param authService Servicio de autenticación para manejar los datos del usuario.\n   */\n  constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\n    this.registerForm = this.fb.group({\n      fullName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(18),\n        Validators.pattern(/(?=.*[A-Z])/), // Al menos una letra mayúscula\n        Validators.pattern(/(?=.*\\d)/), // Al menos un número\n        Validators.pattern(/(?=.*[!@#$%^&*.])/), // Al menos un carácter especial\n      ]],\n      confirmPassword: ['', Validators.required],\n      birthdate: ['', Validators.required],\n      address: ['']\n    }, { \n      validators: this.passwordMatchValidator \n    } as AbstractControlOptions);\n  }\n\n  /**\n   * Método de inicialización del componente.\n   */\n  ngOnInit() {}\n\n  /**\n   * Validador para comprobar que las contraseñas coincidan.\n   * @param control Formulario de registro.\n   * @returns ValidationErrors si las contraseñas no coinciden, null de lo contrario.\n   */\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password');\n    const confirmPassword = control.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    } else if (confirmPassword) {\n      confirmPassword.setErrors(null);\n    }\n    return null;\n  }\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message Mensaje de la alerta.\n   * @param type Tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n\n  /**\n   * Maneja el envío del formulario de registro.\n   */\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      this.registerForm.markAllAsTouched();\n      return;\n    }\n\n    const { email, password } = this.registerForm.value;\n\n    this.authService.register(email, password).subscribe(\n      (userCredential) => {\n        const newUser: User = {\n          uid: userCredential.user.uid, // Asegúrate de guardar el uid aquí\n          fullName: this.registerForm.value.fullName,\n          username: this.registerForm.value.username,\n          email: this.registerForm.value.email,\n          password: this.registerForm.value.password,\n          confirmPassword: this.registerForm.value.confirmPassword,\n          birthdate: this.registerForm.value.birthdate,\n          address: this.registerForm.value.address,\n          role: 'client',\n          purchaseHistory: [],\n          cart: []\n        };\n\n        this.authService.saveUserProfile(newUser).then(() => {\n          this.showAlert(\"Registro exitoso. Ahora puedes iniciar sesión.\", \"success\");\n          setTimeout(() => {\n            this.router.navigate(['/Login']);\n          }, 2000);\n        }).catch((error) => {\n          console.error('Error al guardar en Firestore', error);\n          this.showAlert(\"Error al registrar el usuario. Por favor, intente nuevamente.\", \"danger\");\n        });\n      },\n      (error) => {\n        console.error('Error al registrar usuario', error);\n        this.showAlert(\"Error al registrar el usuario. Por favor, intente nuevamente.\", \"danger\");\n      }\n    );\n  }\n\n  /**\n   * Acceso rápido a los controles del formulario de registro.\n   */\n  get f() {\n    return this.registerForm.controls;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Regístrate\n          \n            \n            \n              {{alertMessage}}\n              \n            \n            \n            \n              Nombre Completo\n              \n              \n                Por favor, ingrese su nombre completo.\n              \n            \n            \n            \n              Nombre de Usuario\n              \n              \n                Por favor, ingrese un nombre de usuario.\n              \n            \n            \n            \n              Correo Electrónico\n              \n              \n                Por favor, ingrese un correo electrónico válido.\n                El correo electrónico debe ser válido.\n              \n            \n            \n            \n              Contraseña\n              \n              \n                La contraseña es requerida.\n                La contraseña debe tener al menos 6 caracteres.\n                La contraseña no puede tener más de 18 caracteres.\n                La contraseña debe incluir al menos una letra mayúscula, un número y un carácter especial.\n              \n            \n            \n            \n              Repetir Contraseña\n              \n              \n                Este campo es requerido.\n                Las contraseñas deben coincidir.\n              \n            \n            \n            \n              Fecha de Nacimiento\n              \n              \n                Por favor, ingrese su fecha de nacimiento.\n              \n            \n            \n            \n              Dirección de Despacho (Opcional)\n              \n            \n            \n            \n              Registrar\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                input.ng-invalid.ng-touched {\n    border-color: #dc3545; /* rojo para errores */\n  }\n  \n  input.ng-valid.ng-touched {\n    border-color: #28a745; /* verde para validos */\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Regístrate                                                {{alertMessage}}                                                                Nombre Completo                                            Por favor, ingrese su nombre completo.                                                                Nombre de Usuario                                            Por favor, ingrese un nombre de usuario.                                                                Correo Electrónico                                            Por favor, ingrese un correo electrónico válido.                El correo electrónico debe ser válido.                                                                Contraseña                                            La contraseña es requerida.                La contraseña debe tener al menos 6 caracteres.                La contraseña no puede tener más de 18 caracteres.                La contraseña debe incluir al menos una letra mayúscula, un número y un carácter especial.                                                                Repetir Contraseña                                            Este campo es requerido.                Las contraseñas deben coincidir.                                                                Fecha de Nacimiento                                            Por favor, ingrese su fecha de nacimiento.                                                                Dirección de Despacho (Opcional)                                                                Registrar                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetpassComponent.html":{"url":"components/ResetpassComponent.html","title":"component - ResetpassComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetpassComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/resetpass/resetpass.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para restablecer la contraseña del usuario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resetpass\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./resetpass.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resetpass.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertMessage\n                            \n                            \n                                alertType\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                sendPasswordResetEmail\n                            \n                            \n                                showAlert\n                            \n                            \n                                togglePasswordFields\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/resetpass/resetpass.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor del componente.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder para crear el formulario reactivo.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router para la navegación.\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Identificador de la plataforma (browser o server).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/resetpass/resetpass.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Método de inicialización del componente.\nDesactiva los campos de contraseña inicialmente.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/resetpass/resetpass.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \nsendPasswordResetEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/resetpass/resetpass.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Envía un correo electrónico para restablecer la contraseña.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAlert\n                        \n                    \n                \n            \n            \n                \nshowAlert(message: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/resetpass/resetpass.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Muestra un mensaje de alerta.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mensaje de la alerta.\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tipo de alerta (success, danger, etc.).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordFields\n                        \n                    \n                \n            \n            \n                \ntogglePasswordFields(show: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/resetpass/resetpass.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Muestra u oculta los campos de contraseña.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                show\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Indica si se deben mostrar los campos de contraseña.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/resetpass/resetpass.component.ts:26\n                        \n                    \n\n            \n                \n                    Mensaje de alerta.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alertType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/resetpass/resetpass.component.ts:31\n                        \n                    \n\n            \n                \n                    Tipo de alerta (success, danger, etc.).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/resetpass/resetpass.component.ts:21\n                        \n                    \n\n            \n                \n                    Formulario de restablecimiento de contraseña.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/resetpass/resetpass.component.ts:119\n                                \n                            \n                    \n                        \n                                Acceso rápido a los controles del formulario de restablecimiento de contraseña.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Router } from '@angular/router';\nimport { getAuth, sendPasswordResetEmail } from '@angular/fire/auth';\n\n/**\n * Componente para restablecer la contraseña del usuario.\n */\n@Component({\n  selector: 'app-resetpass',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule],\n  templateUrl: './resetpass.component.html',\n  styleUrls: ['./resetpass.component.css']\n})\nexport class ResetpassComponent implements OnInit {\n  /**\n   * Formulario de restablecimiento de contraseña.\n   */\n  resetForm: FormGroup;\n\n  /**\n   * Mensaje de alerta.\n   */\n  alertMessage: string = '';\n\n  /**\n   * Tipo de alerta (success, danger, etc.).\n   */\n  alertType: string = '';\n\n  /**\n   * Constructor del componente.\n   * @param fb FormBuilder para crear el formulario reactivo.\n   * @param router Router para la navegación.\n   * @param platformId Identificador de la plataforma (browser o server).\n   */\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.resetForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  /**\n   * Método de inicialización del componente.\n   * Desactiva los campos de contraseña inicialmente.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.togglePasswordFields(false);\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario.\n   */\n  onSubmit() {\n    this.sendPasswordResetEmail();\n  }\n\n  /**\n   * Envía un correo electrónico para restablecer la contraseña.\n   */\n  sendPasswordResetEmail() {\n    const email = this.resetForm.get('email')?.value;\n    const auth = getAuth();\n\n    sendPasswordResetEmail(auth, email).then(() => {\n      this.showAlert('Se ha enviado un correo para restablecer su contraseña.', 'success');\n      setTimeout(() => {\n        this.router.navigate(['/Login']); // Redirigir a la página de inicio de sesión\n      }, 3000);\n    }).catch((error) => {\n      console.error('Error al enviar el correo de restablecimiento de contraseña:', error);\n      this.showAlert('Error al enviar el correo de restablecimiento de contraseña.', 'danger');\n    });\n  }\n\n  /**\n   * Muestra u oculta los campos de contraseña.\n   * @param show Indica si se deben mostrar los campos de contraseña.\n   */\n  togglePasswordFields(show: boolean) {\n    if (isPlatformBrowser(this.platformId)) {\n      const emailSection = document.getElementById('email-section');\n      const submitButton = document.getElementById('submit-button');\n\n      if (show) {\n        emailSection?.classList.add('d-none');\n        if (submitButton) submitButton.textContent = 'Enviar';\n      } else {\n        emailSection?.classList.remove('d-none');\n        if (submitButton) submitButton.textContent = 'Enviar';\n      }\n    }\n  }\n\n  /**\n   * Muestra un mensaje de alerta.\n   * @param message Mensaje de la alerta.\n   * @param type Tipo de alerta (success, danger, etc.).\n   */\n  showAlert(message: string, type: string) {\n    this.alertMessage = message;\n    this.alertType = type;\n    setTimeout(() => {\n      this.alertMessage = '';\n    }, 3000);\n  }\n\n  /**\n   * Acceso rápido a los controles del formulario de restablecimiento de contraseña.\n   */\n  get f() {\n    return this.resetForm.controls;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Resetear Contraseña\n          \n            {{alertMessage}}\n            \n          \n          \n            \n            \n              Correo Electrónico\n              \n              \n                Por favor, ingrese un correo electrónico válido.\n                El correo electrónico debe ser válido.\n              \n            \n            \n            \n              Enviar\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./resetpass.component.css\n                \n                input.ng-invalid.ng-touched {\n    border-color: #dc3545; /* rojo para errores */\n  }\n  \n  input.ng-valid.ng-touched {\n    border-color: #28a745; /* verde para validos */\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Resetear Contraseña                      {{alertMessage}}                                                                      Correo Electrónico                                            Por favor, ingrese un correo electrónico válido.                El correo electrónico debe ser válido.                                                                Enviar                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'CarComponent', 'selector': 'app-car'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PayComponent', 'selector': 'app-pay'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RecordComponent', 'selector': 'app-record'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetpassComponent', 'selector': 'app-resetpass'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetpassComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa al usuario.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                        \n                                            cart\n                                        \n                                \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            purchaseHistory\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cart:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purchaseHistory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        purchaseHistory:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import  { Product } from './product.model';\n/**\n * Interfaz que representa al usuario.\n */\nexport interface User {\n    uid: string;\n    fullName: string;\n    username: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n    birthdate: string;\n    address?: string;\n    role: string; // \"client\" o \"admin\"\n    purchaseHistory: Product[];\n    cart: Product[];\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio para manejar el estado del usuario.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userStatus$\n                            \n                            \n                                    Private\n                                userStatusSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setUserStatus\n                        \n                    \n                \n            \n            \n                \nsetUserStatus(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Establece el estado del usuario.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de usuario o null.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userStatusSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userStatusSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../models/user.model';\n\n/**\n * Servicio para manejar el estado del usuario.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userStatusSubject = new BehaviorSubject(null);\n  userStatus$ = this.userStatusSubject.asObservable();\n\n  /**\n   * Establece el estado del usuario.\n   * @param user El objeto de usuario o null.\n   */\n  setUserStatus(user: User | null) {\n    this.userStatusSubject.next(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/models/product.model.ts\n            \n            interface\n            Product\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/core/services/article-service.service.ts\n            \n            injectable\n            ArticleService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/features/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/app/features/article/article.component.ts\n            \n            component\n            ArticleComponent\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/features/car/car.component.ts\n            \n            component\n            CarComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/features/pay/pay.component.ts\n            \n            component\n            PayComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/app/features/record/record.component.ts\n            \n            component\n            RecordComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/features/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/features/resetpass/resetpass.component.ts\n            \n            component\n            ResetpassComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/MockAuth.ts\n            \n            class\n            MockAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/firestore-mock.service.ts\n            \n            class\n            FirestoreMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/testing/mock-firebase.ts\n            \n            class\n            MockAuthService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.8\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            bootstrap : ^5.3.3\n        \n            express : ^4.18.2\n        \n            firebase : ^10.12.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nExp2S6\nThis project was generated with Angular CLI version 17.3.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes), // Proporciona configuración de enrutamiento\n    provideClientHydration(), // Proporciona configuración de hidratación del cliente\n    provideFirebaseApp(() => initializeApp({\n      \"projectId\":\"angular-examn\",\n      \"appId\":\"1:956918261341:web:463c74c4c2b86725b54fb4\",\n      \"storageBucket\":\"angular-examn.appspot.com\",\n      \"apiKey\":\"AIzaSyDSWeh4Wlz5qr5nkLTBGaHhvaQxwhNgnu8\",\n      \"authDomain\":\"angular-examn.firebaseapp.com\",\n      \"messagingSenderId\":\"956918261341\"\n    })), // Proporciona configuración de Firebase\n    provideAuth(() => getAuth()), // Proporciona configuración de Auth\n    provideFirestore(() => getFirestore()) // Proporciona configuración de Firestore\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración de la aplicación.\n\n                \n            \n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDSWeh4Wlz5qr5nkLTBGaHhvaQxwhNgnu8\",\n    authDomain: \"angular-examn.firebaseapp.com\",\n    projectId: \"angular-examn\",\n    storageBucket: \"angular-examn.appspot.com\",\n    messagingSenderId: \"956918261341\",\n    appId: \"1:956918261341:web:463c74c4c2b86725b54fb4\",\n  }\n}\n                    \n                \n\n            \n                \n                    Configuración de entorno para la aplicación.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
